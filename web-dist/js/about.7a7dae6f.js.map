{"version":3,"sources":["webpack:///./node_modules/readable-stream/duplex-browser.js","webpack:///./node_modules/url/url.js","webpack:///./node_modules/html-entities/lib/html5-entities.js","webpack:///./node_modules/node-libs-browser/node_modules/punycode/punycode.js","webpack:///./node_modules/html-entities/lib/html4-entities.js","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/m3u8stream/lib/m3u8-parser.js","webpack:///./node_modules/https-browserify/index.js","webpack:///./node_modules/readable-stream/lib/_stream_transform.js","webpack:///./node_modules/readable-stream/writable-browser.js","webpack:///./node_modules/sax/lib/sax.js","webpack:///./node_modules/url/util.js","webpack:///./node_modules/core-util-is/lib/util.js","webpack:///./node_modules/m3u8stream/lib/parse-time.js","webpack:///./node_modules/inherits/inherits_browser.js","webpack:///./node_modules/readable-stream/lib/internal/streams/stream-browser.js","webpack:///./node_modules/readable-stream/lib/internal/streams/destroy.js","webpack:///./src/components/YoutubeComp.vue?d580","webpack:///./node_modules/html-entities/lib/xml-entities.js","webpack:///./node_modules/xtend/immutable.js","webpack:///./node_modules/readable-stream/lib/internal/streams/BufferList.js","webpack:///(webpack)/buildin/module.js","webpack:///./node_modules/ytdl-core/lib/util.js","webpack:///./node_modules/readable-stream/lib/_stream_passthrough.js","webpack:///./node_modules/ytdl-core/lib/info.js","webpack:///./node_modules/string_decoder/lib/string_decoder.js","webpack:///./node_modules/html-entities/index.js","webpack:///./node_modules/safe-buffer/index.js","webpack:///./node_modules/builtin-status-codes/browser.js","webpack:///./node_modules/miniget/lib/index.js","webpack:///./node_modules/ieee754/index.js","webpack:///./node_modules/querystring-es3/decode.js","webpack:///./node_modules/stream-http/lib/request.js","webpack:///./node_modules/ytdl-core/lib/sig.js","webpack:///./node_modules/stream-http/index.js","webpack:///./node_modules/ytdl-core/lib/index.js","webpack:///./node_modules/process-nextick-args/index.js","webpack:///./node_modules/stream-http/lib/capability.js","webpack:///./node_modules/readable-stream/lib/_stream_readable.js","webpack:///./node_modules/m3u8stream/lib/index.js","webpack:///./node_modules/readable-stream/lib/_stream_duplex.js","webpack:///./node_modules/querystring-es3/index.js","webpack:///./node_modules/buffer/index.js","webpack:///./node_modules/util-deprecate/browser.js","webpack:///./src/views/Youtube.vue?bb83","webpack:///./src/components/YoutubeComp.vue?d380","webpack:///src/components/YoutubeComp.vue","webpack:///./src/components/YoutubeComp.vue?aa71","webpack:///./src/components/YoutubeComp.vue","webpack:///src/views/Youtube.vue","webpack:///./src/views/Youtube.vue?419a","webpack:///./src/views/Youtube.vue","webpack:///./node_modules/readable-stream/passthrough.js","webpack:///./node_modules/stream-http/lib/response.js","webpack:///./node_modules/m3u8stream/lib/dash-mpd-parser.js","webpack:///./node_modules/readable-stream/transform.js","webpack:///./node_modules/stream-browserify/index.js","webpack:///./node_modules/to-arraybuffer/index.js","webpack:///./node_modules/m3u8stream/lib/queue.js","webpack:///./node_modules/readable-stream/lib/_stream_writable.js","webpack:///./node_modules/querystring-es3/encode.js","webpack:///./node_modules/ytdl-core/lib/formats.js","webpack:///./node_modules/readable-stream/readable-browser.js","webpack:///./node_modules/isarray/index.js","webpack:///./node_modules/ytdl-core/lib/info-extras.js","webpack:///./node_modules/events/events.js"],"names":["module","exports","__webpack_require__","punycode","util","Url","this","protocol","slashes","auth","host","port","hostname","hash","search","query","pathname","path","href","parse","urlParse","resolve","urlResolve","resolveObject","urlResolveObject","format","urlFormat","protocolPattern","portPattern","simplePathPattern","delims","unwise","concat","autoEscape","nonHostChars","hostEndingChars","hostnameMaxLen","hostnamePartPattern","hostnamePartStart","unsafeProtocol","javascript","javascript:","hostlessProtocol","slashedProtocol","http","https","ftp","gopher","file","http:","https:","ftp:","gopher:","file:","querystring","url","parseQueryString","slashesDenoteHost","isObject","u","obj","isString","prototype","call","source","relative","TypeError","queryIndex","indexOf","splitter","uSplit","split","slashRegex","replace","join","rest","trim","length","simplePath","exec","substr","proto","lowerProto","toLowerCase","match","atSign","hostEnd","i","hec","lastIndexOf","slice","decodeURIComponent","parseHost","ipv6Hostname","hostparts","l","part","newpart","j","k","charCodeAt","validParts","notHost","bit","push","unshift","toASCII","p","h","ae","esc","encodeURIComponent","escape","qm","s","Object","keys","stringify","charAt","rel","result","tkeys","tk","tkey","rkeys","rk","rkey","v","relPath","shift","isSourceAbs","isRelAbs","mustEndAbs","removeAllDots","srcPath","psychotic","pop","isNullOrUndefined","authInHost","isNull","last","hasTrailingSlash","up","splice","isAbsolute","ENTITIES","alphaIndex","charIndex","Html5Entities","createIndexes","_results","charInfo","e","alpha","chars","chr","addChar","chr2","String","fromCharCode","decode","str","entity","code","parseInt","isNaN","encode","strLength","encodeNonUTF","c","encodeNonASCII","global","__WEBPACK_AMD_DEFINE_RESULT__","root","nodeType","freeGlobal","window","self","maxInt","base","tMin","tMax","skew","damp","initialBias","initialN","delimiter","regexPunycode","regexNonASCII","regexSeparators","errors","overflow","not-basic","invalid-input","baseMinusTMin","floor","Math","stringFromCharCode","error","type","RangeError","map","array","fn","mapDomain","string","parts","labels","encoded","ucs2decode","value","extra","output","counter","ucs2encode","basicToDigit","codePoint","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","input","out","basic","index","oldi","w","t","baseMinusT","inputLength","n","bias","handledCPCount","basicLength","m","q","currentValue","handledCPCountPlusOne","qMinusT","toUnicode","test","version","ucs2","undefined","HTML_ALPHA","HTML_CODES","numIndex","a","Html4Entities","cc","byteLength","toByteArray","fromByteArray","lookup","revLookup","Arr","Uint8Array","Array","len","getLens","b64","Error","validLen","placeHoldersLen","lens","_byteLength","tmp","arr","curByte","tripletToBase64","num","encodeChunk","uint8","start","end","extraBytes","maxChunkLength","len2","Writable","[object Object]","super","_lastLine","_seq","_nextItemDuration","on","_parseLine","emit","line","tag","Date","getTime","round","parseFloat","seq","duration","chunk","encoding","callback","lines","toString","forEach","key","hasOwnProperty","validateParams","params","request","cb","get","Transform","Duplex","afterTransform","er","data","ts","_transformState","transforming","writecb","writechunk","rs","_readableState","reading","needReadable","highWaterMark","_read","options","bind","needTransform","writeencoding","sync","transform","_transform","flush","_flush","prefinish","_this","done","stream","_writableState","inherits","_write","_destroy","err","_this2","err2","Buffer","sax","parser","strict","opt","SAXParser","SAXStream","createStream","MAX_BUFFER_LENGTH","Stream","buffers","clearBuffers","bufferCheckPosition","lowercase","lowercasetags","looseCase","tags","closed","closedRoot","sawRoot","noscript","state","S","BEGIN","strictEntities","create","XML_ENTITIES","attribList","xmlns","ns","rootNS","trackPosition","position","column","checkBufferLength","maxAllowed","max","maxActual","closeText","emitNode","cdata","script","flushBuffers","EVENTS","o","F","newf","write","resume","close","ex","streamWraps","filter","ev","apply","_parser","writable","readable","me","onend","onerror","_decoder","defineProperty","set","removeAllListeners","enumerable","configurable","constructor","isBuffer","SD","StringDecoder","handler","args","arguments","CDATA","DOCTYPE","XML_NAMESPACE","XMLNS_NAMESPACE","xml","nameStart","nameBody","entityStart","entityBody","isWhitespace","isQuote","isAttribEnd","isMatch","regex","notMatch","STATE","BEGIN_WHITESPACE","TEXT","TEXT_ENTITY","OPEN_WAKA","SGML_DECL","SGML_DECL_QUOTED","DOCTYPE_QUOTED","DOCTYPE_DTD","DOCTYPE_DTD_QUOTED","COMMENT_STARTING","COMMENT","COMMENT_ENDING","COMMENT_ENDED","CDATA_ENDING","CDATA_ENDING_2","PROC_INST","PROC_INST_BODY","PROC_INST_ENDING","OPEN_TAG","OPEN_TAG_SLASH","ATTRIB","ATTRIB_NAME","ATTRIB_NAME_SAW_WHITE","ATTRIB_VALUE","ATTRIB_VALUE_QUOTED","ATTRIB_VALUE_CLOSED","ATTRIB_VALUE_UNQUOTED","ATTRIB_VALUE_ENTITY_Q","ATTRIB_VALUE_ENTITY_U","CLOSE_TAG","CLOSE_TAG_SAW_WHITE","SCRIPT","SCRIPT_ENDING","amp","gt","lt","quot","apos","AElig","Aacute","Acirc","Agrave","Aring","Atilde","Auml","Ccedil","ETH","Eacute","Ecirc","Egrave","Euml","Iacute","Icirc","Igrave","Iuml","Ntilde","Oacute","Ocirc","Ograve","Oslash","Otilde","Ouml","THORN","Uacute","Ucirc","Ugrave","Uuml","Yacute","aacute","acirc","aelig","agrave","aring","atilde","auml","ccedil","eacute","ecirc","egrave","eth","euml","iacute","icirc","igrave","iuml","ntilde","oacute","ocirc","ograve","oslash","otilde","ouml","szlig","thorn","uacute","ucirc","ugrave","uuml","yacute","yuml","copy","reg","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","ordf","laquo","not","shy","macr","deg","plusmn","sup1","sup2","sup3","acute","micro","para","middot","cedil","ordm","raquo","frac14","frac12","frac34","iquest","times","divide","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","tilde","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","beta","gamma","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","event","textNode","textopts","text","normalize","strictFail","message","newTag","tagName","parent","name","attributes","qname","attribute","qualName","prefix","local","attrib","attribName","attribValue","qn","openTag","selfClosing","uri","JSON","nv","isSelfClosing","closeTag","closeTo","x","parseEntity","entityLC","numStr","fromCodePoint","beginWhiteSpace","startTagPosition","starti","substring","sgmlDecl","procInstName","procInstBody","pad","toUpperCase","comment","doctype","body","returnState","buffer","highSurrogate","lowSurrogate","MAX_SIZE","codeUnits","Number","isFinite","arg","isArray","objectToString","isBoolean","isNumber","isSymbol","isUndefined","isRegExp","re","isDate","d","isError","isFunction","isPrimitive","numberFormat","timeFormat","timeUnits","ms","humanStr","time","firstFormat","total","r","durationStr","ctor","superCtor","super_","TempCtor","EventEmitter","pna","destroy","readableDestroyed","destroyed","writableDestroyed","errorEmitted","nextTick","emitErrorNT","undestroy","ended","endEmitted","ending","finished","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_YoutubeComp_vue_vue_type_style_index_0_id_943632aa_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_YoutubeComp_vue_vue_type_style_index_0_id_943632aa_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default","ALPHA_INDEX","&lt","&gt","&quot","&apos","&amp","&lt;","&gt;","&quot;","&apos;","&amp;","CHAR_INDEX","60","62","34","39","38","CHAR_S_INDEX","<",">","\"","'","&","XmlEntities","strLenght","extend","target","_classCallCheck","instance","Constructor","copyBuffer","src","offset","BufferList","head","tail","entry","next","ret","clear","alloc","allocUnsafe","inspect","custom","webpackPolyfill","deprecate","paths","children","qs","FORMATS","audioEncodingRanks","mp3","vorbis","aac","opus","flac","videoEncodingRanks","Sorenson H.283","MPEG-4 Visual","VP8","VP9","H.264","sortFormats","b","ares","resolution","bres","afeats","audioBitrate","bfeats","getBitrate","bitrate","audioScore","abitrate","aenc","audioEncoding","avbitrate","bvbitrate","aascore","bascore","avenc","bvenc","chooseFormat","formats","filterFormats","quality","f","getFormat","itag","find","haystack","needle","RegExp","between","left","right","pos","validQueryDomains","Set","validPathDomains","getURLVideoID","link","parsed","id","has","validateID","idRegex","getVideoID","validateURL","parseFormats","info","url_encoded_fmt_stream_map","adaptive_fmts","addFormatMeta","meta","live","isHLS","isDashMPD","stripHTML","html","parallel","funcs","funcsDone","errGiven","results","checkDone","PassThrough","urllib","extras","sig","VIDEO_URL","EMBED_URL","VIDEO_EURL","INFO_HOST","INFO_PATH","KEYS_TO_SPLIT","getBasicInfo","ceil","now","reqOptions","assign","requestOptions","headers","User-Agent","res","unavailableMsg","includes","additional","author","getAuthor","published","getPublished","description","getVideoDescription","media","getVideoMedia","related_videos","getRelatedVideos","video_url","jsonStr","config","gotConfig","fromEmbed","video_id","eurl","ps","gl","hl","sts","status","fmt_list","errorcode","reason","no_embed_allowed","player_response","playability","playabilityStatus","age_restricted","html5player","assets","js","getFullInfo","hasManifest","streamingData","dashManifestUrl","hlsManifestUrl","html5playerfile","getTokens","tokens","decipherFormats","debug","decipherURL","getDashManifest","getM3U8","mergeFormats","console","warn","sort","full","_","decipher","formatsMap","onopentag","node","ID","req","setEncoding","cache","Map","timeout","fnName","Promise","reject","setTimeout","delete","isEncoding","_normalizeEncoding","enc","retried","normalizeEncoding","nenc","nb","utf16Text","utf16End","fillLast","utf8FillLast","base64Text","base64End","simpleWrite","simpleEnd","lastNeed","lastTotal","lastChar","utf8CheckByte","byte","utf8CheckIncomplete","buf","utf8CheckExtraBytes","utf8Text","utf8End","AllHtmlEntities","copyProps","dst","SafeBuffer","encodingOrOffset","from","allocUnsafeSlow","size","fill","SlowBuffer","100","101","102","200","201","202","203","204","205","206","207","208","226","300","301","302","303","304","305","307","308","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","421","422","423","424","425","426","428","429","431","451","500","501","502","503","504","505","506","507","508","509","510","511","process","httpLibs","redirectCodes","defaults","maxRedirects","maxRetries","maxReconnects","backoff","inc","acceptEncoding","myreq","myres","retryTimeout","contentLength","rangeEnd","aborted","redirects","retries","reconnects","acceptRanges","rangeStart","downloaded","Range","Accept-Encoding","onRequestError","statusCode","min","doDownload","httpLib","location","decoded","reverse","pipe","abort","unpipe","clearTimeout","read","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","Infinity","pow","rt","abs","log","LN2","sep","eq","regexp","maxKeys","kstr","vstr","idx","xs","capability","response","toArrayBuffer","IncomingMessage","rStates","readyStates","decideMode","preferBinary","useFetch","fetch","mozchunkedarraybuffer","msstream","arraybuffer","vbArray","ClientRequest","opts","_opts","_body","_headers","setHeader","mode","abortController","overrideMimeType","_mode","_fetchTimer","_onFinish","statusValid","xhr","lowerName","unsafeHeaders","getHeader","header","removeHeader","_destroyed","headersObj","method","blobConstructor","Blob","headersList","keyName","signal","controller","AbortController","_fetchAbortController","requestTimeout","credentials","withCredentials","then","_fetchResponse","_connect","_xhr","XMLHttpRequest","open","responseType","ontimeout","setRequestHeader","_response","onreadystatechange","readyState","LOADING","DONE","_onXHRProgress","onprogress","send","flushHeaders","setNoDelay","setSocketKeepAlive","cachedTokens","extractActions","token","swapHeadAndPosition","first","jsVarStr","jsSingleQuoteStr","jsDoubleQuoteStr","jsQuoteStr","jsKeyStr","jsPropStr","jsEmptyStr","reverseStr","sliceStr","spliceStr","swapStr","actionsObjRegexp","actionsFuncRegexp","reverseRegexp","sliceRegexp","spliceRegexp","swapRegexp","objResult","funcResult","objBody","funcBody","reverseKey","sliceKey","spliceKey","swapKey","myreg","tokenizeRegexp","setDownloadURL","decodedUrl","parsedUrl","ratebypass","signature","statusCodes","defaultProtocol","Agent","defaultMaxSockets","globalAgent","STATUS_CODES","METHODS","getInfo","m3u8stream","parseTime","ytdl","downloadFromInfoCallback","_isDestroyed","setImmediate","ondata","chunkReadahead","live_chunk_readahead","begin","liveBuffer","segment","totalSegments","range","removeListener","prependListener","downloadFromInfo","arg1","arg2","arg3","ReadableStream","writableStream","WritableStream","ArrayBuffer","getXHR","XDomainRequest","checkTypeSupport","haveArrayBuffer","haveSlice","VBArray","Readable","ReadableState","EElistenerCount","emitter","listeners","OurUint8Array","_uint8ArrayToBuffer","_isUint8Array","debugUtil","debuglog","destroyImpl","kProxyEvents","_events","isDuplex","objectMode","readableObjectMode","hwm","readableHwm","readableHighWaterMark","defaultHwm","pipes","pipesCount","flowing","emittedReadable","readableListening","resumeScheduled","defaultEncoding","awaitDrain","readingMore","decoder","readableAddChunk","addToFront","skipChunkCheck","onEofChunk","chunkInvalid","getPrototypeOf","addChunk","maybeReadMore","needMoreData","emitReadable","_undestroy","isPaused","MAX_HWM","computeNewHighWaterMark","howMuchToRead","emitReadable_","flow","maybeReadMore_","pipeOnDrain","nReadingNextTick","resume_","fromList","fromListPartial","list","hasStrings","copyFromBufferString","copyFromBuffer","endReadable","endReadableNT","nOrig","doRead","dest","pipeOpts","doEnd","stdout","stderr","endFn","onunpipe","unpipeInfo","hasUnpiped","cleanup","once","ondrain","cleanedUp","onclose","onfinish","needDrain","increasedAwaitDrain","pause","dests","addListener","wrap","paused","_fromList","miniget","m3u8Parser","DashMPDParser","Queue","playlistURL","Parser","m3u8","dash-mpd","currSegment","relativeBegin","liveBegin","streamQueue","concurrency","segmentNumber","requestQueue","onError","refreshThreshold","minRefreshTime","refreshTimeout","lastRefresh","fetchingPlaylist","isStatic","onQueuedEnd","tasks","active","refreshPlaylist","currPlaylist","lastSeq","starttime","addedItems","liveAddedItems","addItem","item","isLive","tailedItems","tailedItemsDuration","reduce","die","objectKeys","allowHalfOpen","onEndNT","base64","ieee754","typedArraySupport","__proto__","foo","subarray","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","fromArrayBuffer","fromString","fromObject","assertSize","checked","actual","fromArrayLike","byteOffset","isnan","isView","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","val","dir","arrayIndexOf","indexSize","arrLength","valLength","readUInt16BE","foundIndex","found","hexWrite","remaining","strLen","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","bytesPerSequence","decodeCodePointsArray","INSPECT_MAX_BYTES","poolSize","_augment","Symbol","species","_isBuffer","compare","y","swap16","swap32","swap64","equals","thisStart","thisEnd","thisCopy","targetCopy","toJSON","_arr","MAX_ARGUMENTS_LENGTH","codePoints","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","maxBytes","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","INVALID_BASE64_RE","base64clean","stringtrim","units","leadSurrogate","byteArray","hi","lo","msg","warned","deprecated","trace","localStorage","render","_vm","_h","$createElement","_c","_self","staticClass","staticRenderFns","YoutubeCompvue_type_template_id_943632aa_scoped_true_render","attrs","action","directives","rawName","expression","placeholder","aria-label","aria-describedby","domProps","$event","composing","videoSearch","click","searchVideo","_v","_l","video","title","_m","thumbnail_url","alt","_s","YoutubeCompvue_type_template_id_943632aa_scoped_true_staticRenderFns","YoutubeCompvue_type_script_lang_js_","props","videoList","methods","lib","components_YoutubeCompvue_type_script_lang_js_","component","componentNormalizer","YoutubeComp","Youtubevue_type_script_lang_js_","components","views_Youtubevue_type_script_lang_js_","Youtube_component","__webpack_exports__","UNSENT","OPENED","HEADERS_RECEIVED","fetchTimer","rawHeaders","trailers","rawTrailers","statusMessage","statusText","_resumeFetch","pipeTo","catch","reader","getReader","_pos","responseURL","getAllResponseHeaders","matches","_charset","mimeType","charsetMatch","responseBody","toArray","responseText","newData","MSStreamReader","onload","readAsArrayBuffer","targetID","lastTag","segmentTemplate","timescale","baseURL","treeLevel","periodStart","currtime","timeline","getSegments","tmpl","context","RepresentationID","Time","p1","availabilitystarttime","startnumber","presentationtimeoffset","initialization","repeat","sourceurl","tl","segmentDuration","onEnd","EE","_isStdio","didOnEnd","listenerCount","arrayCopy","worker","_worker","_concurrency","_next","callbackCalled","CorkedRequest","finish","onCorkedFinish","asyncWrite","browser","WritableState","internalUtil","realHasInstance","nop","writableObjectMode","writableHwm","writableHighWaterMark","finalCalled","noDecode","decodeStrings","writing","corked","bufferProcessing","onwrite","writelen","bufferedRequest","lastBufferedRequest","pendingcb","prefinished","bufferedRequestCount","corkedRequestsFree","writev","_writev","final","_final","writeAfterEnd","validChunk","valid","decodeChunk","writeOrBuffer","isBuf","newChunk","doWrite","onwriteError","finishMaybe","onwriteStateUpdate","needFinish","clearBuffer","afterWrite","onwriteDrain","holder","count","allBuffers","callFinal","need","endWritable","corkReq","getBuffer","current","hasInstance","Function","object","cork","uncork","setDefaultEncoding","stringifyPrimitive","ks","5","container","profile","6","13","17","18","22","35","36","37","43","44","45","46","82","83","84","85","133","134","135","136","137","138","160","242","243","244","247","248","264","266","271","272","278","298","299","313","315","330","331","332","333","334","335","336","337","139","140","141","171","172","249","250","251","91","92","93","94","95","96","120","127","128","132","151","Entities","getMetaItem","mediainfo","contentRegexp","imgRegexp","detail","content","year","mediaUrl","value2","userRegexp","verifiedRegexp","ownerinfo","channelName","userMatch","verifiedMatch","channelID","username","avatar","verified","user","channel_url","user_url","ReflectOwnKeys","R","Reflect","ReflectApply","receiver","ProcessEmitWarning","warning","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","NumberIsNaN","init","_eventsCount","_maxListeners","defaultMaxListeners","$getMaxListeners","_addListener","listener","prepend","events","existing","newListener","onceWrapper","fired","wrapFn","_onceWrap","wrapped","_listeners","unwrap","evlistener","unwrapListeners","arrayClone","spliceOne","setMaxListeners","getMaxListeners","doError","prependOnceListener","originalListener","off","rawListeners","eventNames"],"mappings":"4FAAAA,EAAAC,QAAiBC,EAAQ,6CCuBzB,IAAAC,EAAeD,EAAQ,QACvBE,EAAWF,EAAQ,SASnB,SAAAG,IACAC,KAAAC,SAAA,KACAD,KAAAE,QAAA,KACAF,KAAAG,KAAA,KACAH,KAAAI,KAAA,KACAJ,KAAAK,KAAA,KACAL,KAAAM,SAAA,KACAN,KAAAO,KAAA,KACAP,KAAAQ,OAAA,KACAR,KAAAS,MAAA,KACAT,KAAAU,SAAA,KACAV,KAAAW,KAAA,KACAX,KAAAY,KAAA,KAnBAjB,EAAAkB,MAAAC,EACAnB,EAAAoB,QAAAC,EACArB,EAAAsB,cAAAC,EACAvB,EAAAwB,OAAAC,EAEAzB,EAAAI,MAqBA,IAAAsB,EAAA,oBACAC,EAAA,WAGAC,EAAA,qCAIAC,EAAA,qCAGAC,EAAA,KAAgB,IAAK,kBAAAC,OAAAF,GAGrBG,EAAA,MAAAD,OAAAD,GAKAG,EAAA,iBAAqC,KAAAF,OAAAC,GACrCE,EAAA,cACAC,EAAA,IACAC,EAAA,yBACAC,EAAA,+BAEAC,EAAA,CACAC,YAAA,EACAC,eAAA,GAGAC,EAAA,CACAF,YAAA,EACAC,eAAA,GAGAE,EAAA,CACAC,MAAA,EACAC,OAAA,EACAC,KAAA,EACAC,QAAA,EACAC,MAAA,EACAC,SAAA,EACAC,UAAA,EACAC,QAAA,EACAC,WAAA,EACAC,SAAA,GAEAC,EAAkBpD,EAAQ,QAE1B,SAAAkB,EAAAmC,EAAAC,EAAAC,GACA,GAAAF,GAAAnD,EAAAsD,SAAAH,iBAAAlD,EAAA,OAAAkD,EAEA,IAAAI,EAAA,IAAAtD,EAEA,OADAsD,EAAAxC,MAAAoC,EAAAC,EAAAC,GACAE,EAyQA,SAAAjC,EAAAkC,GAMA,OADAxD,EAAAyD,SAAAD,OAAAxC,EAAAwC,IACAA,aAAAvD,EACAuD,EAAAnC,SADApB,EAAAyD,UAAArC,OAAAsC,KAAAH,GA4DA,SAAAtC,EAAA0C,EAAAC,GACA,OAAA7C,EAAA4C,GAAA,MAAA3C,QAAA4C,GAOA,SAAAzC,EAAAwC,EAAAC,GACA,OAAAD,EACA5C,EAAA4C,GAAA,MAAAzC,cAAA0C,GADAA,EAjVA5D,EAAAyD,UAAA3C,MAAA,SAAAoC,EAAAC,EAAAC,GACA,IAAArD,EAAAyD,SAAAN,GACA,UAAAW,UAAA,gDAAAX,GAMA,IAAAY,EAAAZ,EAAAa,QAAA,KACAC,GACA,IAAAF,KAAAZ,EAAAa,QAAA,aACAE,EAAAf,EAAAgB,MAAAF,GACAG,EAAA,MACAF,EAAA,GAAAA,EAAA,GAAAG,QAAAD,EAAA,KACAjB,EAAAe,EAAAI,KAAAL,GAEA,IAAAM,EAAApB,EAMA,GAFAoB,IAAAC,QAEAnB,GAAA,IAAAF,EAAAgB,MAAA,KAAAM,OAAA,CAEA,IAAAC,EAAAjD,EAAAkD,KAAAJ,GACA,GAAAG,EAeA,OAdAxE,KAAAW,KAAA0D,EACArE,KAAAY,KAAAyD,EACArE,KAAAU,SAAA8D,EAAA,GACAA,EAAA,IACAxE,KAAAQ,OAAAgE,EAAA,GAEAxE,KAAAS,MADAyC,EACAF,EAAAnC,MAAAb,KAAAQ,OAAAkE,OAAA,IAEA1E,KAAAQ,OAAAkE,OAAA,IAEOxB,IACPlD,KAAAQ,OAAA,GACAR,KAAAS,MAAA,IAEAT,KAIA,IAAA2E,EAAAtD,EAAAoD,KAAAJ,GACA,GAAAM,EAAA,CACAA,IAAA,GACA,IAAAC,EAAAD,EAAAE,cACA7E,KAAAC,SAAA2E,EACAP,IAAAK,OAAAC,EAAAJ,QAOA,GAAApB,GAAAwB,GAAAN,EAAAS,MAAA,yBACA,IAAA5E,EAAA,OAAAmE,EAAAK,OAAA,MACAxE,GAAAyE,GAAAvC,EAAAuC,KACAN,IAAAK,OAAA,GACA1E,KAAAE,SAAA,GAIA,IAAAkC,EAAAuC,KACAzE,GAAAyE,IAAAtC,EAAAsC,IAAA,CAmBA,IADA,IASAxE,EAAA4E,EATAC,GAAA,EACAC,EAAA,EAAmBA,EAAApD,EAAA0C,OAA4BU,IAAA,CAC/C,IAAAC,EAAAb,EAAAP,QAAAjC,EAAAoD,KACA,IAAAC,KAAA,IAAAF,GAAAE,EAAAF,KACAA,EAAAE,GAQAH,GAFA,IAAAC,EAEAX,EAAAc,YAAA,KAIAd,EAAAc,YAAA,IAAAH,IAKA,IAAAD,IACA5E,EAAAkE,EAAAe,MAAA,EAAAL,GACAV,IAAAe,MAAAL,EAAA,GACA/E,KAAAG,KAAAkF,mBAAAlF,IAIA6E,GAAA,EACA,IAAAC,EAAA,EAAmBA,EAAArD,EAAA2C,OAAyBU,IAAA,CAC5CC,EAAAb,EAAAP,QAAAlC,EAAAqD,KACA,IAAAC,KAAA,IAAAF,GAAAE,EAAAF,KACAA,EAAAE,IAGA,IAAAF,IACAA,EAAAX,EAAAE,QAEAvE,KAAAI,KAAAiE,EAAAe,MAAA,EAAAJ,GACAX,IAAAe,MAAAJ,GAGAhF,KAAAsF,YAIAtF,KAAAM,SAAAN,KAAAM,UAAA,GAIA,IAAAiF,EAAA,MAAAvF,KAAAM,SAAA,IACA,MAAAN,KAAAM,SAAAN,KAAAM,SAAAiE,OAAA,GAGA,IAAAgB,EAEA,IADA,IAAAC,EAAAxF,KAAAM,SAAA2D,MAAA,MACAwB,GAAAR,EAAA,EAAAO,EAAAjB,QAA2CU,EAAAQ,EAAOR,IAAA,CAClD,IAAAS,EAAAF,EAAAP,GACA,GAAAS,IACAA,EAAAZ,MAAA/C,GAAA,CAEA,IADA,IAAA4D,EAAA,GACAC,EAAA,EAAAC,EAAAH,EAAAnB,OAA0CqB,EAAAC,EAAOD,IACjDF,EAAAI,WAAAF,GAAA,IAIAD,GAAA,IAEAA,GAAAD,EAAAE,GAIA,IAAAD,EAAAb,MAAA/C,GAAA,CACA,IAAAgE,EAAAP,EAAAJ,MAAA,EAAAH,GACAe,EAAAR,EAAAJ,MAAAH,EAAA,GACAgB,EAAAP,EAAAZ,MAAA9C,GACAiE,IACAF,EAAAG,KAAAD,EAAA,IACAD,EAAAG,QAAAF,EAAA,KAEAD,EAAAzB,SACAF,EAAA,IAAA2B,EAAA5B,KAAA,KAAAC,GAEArE,KAAAM,SAAAyF,EAAA3B,KAAA,KACA,QAMApE,KAAAM,SAAAiE,OAAAzC,EACA9B,KAAAM,SAAA,GAGAN,KAAAM,SAAAN,KAAAM,SAAAuE,cAGAU,IAKAvF,KAAAM,SAAAT,EAAAuG,QAAApG,KAAAM,WAGA,IAAA+F,EAAArG,KAAAK,KAAA,IAAAL,KAAAK,KAAA,GACAiG,EAAAtG,KAAAM,UAAA,GACAN,KAAAI,KAAAkG,EAAAD,EACArG,KAAAY,MAAAZ,KAAAI,KAIAmF,IACAvF,KAAAM,SAAAN,KAAAM,SAAAoE,OAAA,EAAA1E,KAAAM,SAAAiE,OAAA,GACA,MAAAF,EAAA,KACAA,EAAA,IAAAA,IAOA,IAAApC,EAAA2C,GAKA,IAAAK,EAAA,EAAAQ,EAAA9D,EAAA4C,OAA0CU,EAAAQ,EAAOR,IAAA,CACjD,IAAAsB,EAAA5E,EAAAsD,GACA,QAAAZ,EAAAP,QAAAyC,GAAA,CAEA,IAAAC,EAAAC,mBAAAF,GACAC,IAAAD,IACAC,EAAAE,OAAAH,IAEAlC,IAAAJ,MAAAsC,GAAAnC,KAAAoC,IAMA,IAAAjG,EAAA8D,EAAAP,QAAA,MACA,IAAAvD,IAEAP,KAAAO,KAAA8D,EAAAK,OAAAnE,GACA8D,IAAAe,MAAA,EAAA7E,IAEA,IAAAoG,EAAAtC,EAAAP,QAAA,KAoBA,IAnBA,IAAA6C,GACA3G,KAAAQ,OAAA6D,EAAAK,OAAAiC,GACA3G,KAAAS,MAAA4D,EAAAK,OAAAiC,EAAA,GACAzD,IACAlD,KAAAS,MAAAuC,EAAAnC,MAAAb,KAAAS,QAEA4D,IAAAe,MAAA,EAAAuB,IACGzD,IAEHlD,KAAAQ,OAAA,GACAR,KAAAS,MAAA,IAEA4D,IAAArE,KAAAU,SAAA2D,GACAhC,EAAAuC,IACA5E,KAAAM,WAAAN,KAAAU,WACAV,KAAAU,SAAA,KAIAV,KAAAU,UAAAV,KAAAQ,OAAA,CACA6F,EAAArG,KAAAU,UAAA,OACAkG,EAAA5G,KAAAQ,QAAA,GACAR,KAAAW,KAAA0F,EAAAO,EAKA,OADA5G,KAAAY,KAAAZ,KAAAmB,SACAnB,MAcAD,EAAAyD,UAAArC,OAAA,WACA,IAAAhB,EAAAH,KAAAG,MAAA,GACAA,IACAA,EAAAsG,mBAAAtG,GACAA,IAAAgE,QAAA,YACAhE,GAAA,KAGA,IAAAF,EAAAD,KAAAC,UAAA,GACAS,EAAAV,KAAAU,UAAA,GACAH,EAAAP,KAAAO,MAAA,GACAH,GAAA,EACAK,EAAA,GAEAT,KAAAI,KACAA,EAAAD,EAAAH,KAAAI,KACGJ,KAAAM,WACHF,EAAAD,IAAA,IAAAH,KAAAM,SAAAwD,QAAA,KACA9D,KAAAM,SACA,IAAAN,KAAAM,SAAA,KACAN,KAAAK,OACAD,GAAA,IAAAJ,KAAAK,OAIAL,KAAAS,OACAX,EAAAsD,SAAApD,KAAAS,QACAoG,OAAAC,KAAA9G,KAAAS,OAAA8D,SACA9D,EAAAuC,EAAA+D,UAAA/G,KAAAS,QAGA,IAAAD,EAAAR,KAAAQ,QAAAC,GAAA,IAAAA,GAAA,GAsBA,OApBAR,GAAA,MAAAA,EAAAyE,QAAA,KAAAzE,GAAA,KAIAD,KAAAE,WACAD,GAAAoC,EAAApC,MAAA,IAAAG,GACAA,EAAA,MAAAA,GAAA,IACAM,GAAA,MAAAA,EAAAsG,OAAA,KAAAtG,EAAA,IAAAA,IACGN,IACHA,EAAA,IAGAG,GAAA,MAAAA,EAAAyG,OAAA,KAAAzG,EAAA,IAAAA,GACAC,GAAA,MAAAA,EAAAwG,OAAA,KAAAxG,EAAA,IAAAA,GAEAE,IAAAyD,QAAA,iBAAAW,GACA,OAAA2B,mBAAA3B,KAEAtE,IAAA2D,QAAA,WAEAlE,EAAAG,EAAAM,EAAAF,EAAAD,GAOAR,EAAAyD,UAAAzC,QAAA,SAAA4C,GACA,OAAA3D,KAAAiB,cAAAH,EAAA6C,GAAA,OAAAxC,UAQApB,EAAAyD,UAAAvC,cAAA,SAAA0C,GACA,GAAA7D,EAAAyD,SAAAI,GAAA,CACA,IAAAsD,EAAA,IAAAlH,EACAkH,EAAApG,MAAA8C,GAAA,MACAA,EAAAsD,EAKA,IAFA,IAAAC,EAAA,IAAAnH,EACAoH,EAAAN,OAAAC,KAAA9G,MACAoH,EAAA,EAAkBA,EAAAD,EAAA5C,OAAmB6C,IAAA,CACrC,IAAAC,EAAAF,EAAAC,GACAF,EAAAG,GAAArH,KAAAqH,GAQA,GAHAH,EAAA3G,KAAAoD,EAAApD,KAGA,KAAAoD,EAAA/C,KAEA,OADAsG,EAAAtG,KAAAsG,EAAA/F,SACA+F,EAIA,GAAAvD,EAAAzD,UAAAyD,EAAA1D,SAAA,CAGA,IADA,IAAAqH,EAAAT,OAAAC,KAAAnD,GACA4D,EAAA,EAAoBA,EAAAD,EAAA/C,OAAmBgD,IAAA,CACvC,IAAAC,EAAAF,EAAAC,GACA,aAAAC,IACAN,EAAAM,GAAA7D,EAAA6D,IAUA,OANAnF,EAAA6E,EAAAjH,WACAiH,EAAA5G,WAAA4G,EAAAxG,WACAwG,EAAAvG,KAAAuG,EAAAxG,SAAA,KAGAwG,EAAAtG,KAAAsG,EAAA/F,SACA+F,EAGA,GAAAvD,EAAA1D,UAAA0D,EAAA1D,WAAAiH,EAAAjH,SAAA,CASA,IAAAoC,EAAAsB,EAAA1D,UAAA,CAEA,IADA,IAAA6G,EAAAD,OAAAC,KAAAnD,GACA8D,EAAA,EAAqBA,EAAAX,EAAAvC,OAAiBkD,IAAA,CACtC,IAAA5B,EAAAiB,EAAAW,GACAP,EAAArB,GAAAlC,EAAAkC,GAGA,OADAqB,EAAAtG,KAAAsG,EAAA/F,SACA+F,EAIA,GADAA,EAAAjH,SAAA0D,EAAA1D,SACA0D,EAAAvD,MAAAgC,EAAAuB,EAAA1D,UASAiH,EAAAxG,SAAAiD,EAAAjD,aATA,CACA,IAAAgH,GAAA/D,EAAAjD,UAAA,IAAAuD,MAAA,KACA,MAAAyD,EAAAnD,UAAAZ,EAAAvD,KAAAsH,EAAAC,UACAhE,EAAAvD,OAAAuD,EAAAvD,KAAA,IACAuD,EAAArD,WAAAqD,EAAArD,SAAA,IACA,KAAAoH,EAAA,IAAAA,EAAAvB,QAAA,IACAuB,EAAAnD,OAAA,GAAAmD,EAAAvB,QAAA,IACAe,EAAAxG,SAAAgH,EAAAtD,KAAA,KAWA,GAPA8C,EAAA1G,OAAAmD,EAAAnD,OACA0G,EAAAzG,MAAAkD,EAAAlD,MACAyG,EAAA9G,KAAAuD,EAAAvD,MAAA,GACA8G,EAAA/G,KAAAwD,EAAAxD,KACA+G,EAAA5G,SAAAqD,EAAArD,UAAAqD,EAAAvD,KACA8G,EAAA7G,KAAAsD,EAAAtD,KAEA6G,EAAAxG,UAAAwG,EAAA1G,OAAA,CACA,IAAA6F,EAAAa,EAAAxG,UAAA,GACAkG,EAAAM,EAAA1G,QAAA,GACA0G,EAAAvG,KAAA0F,EAAAO,EAIA,OAFAM,EAAAhH,QAAAgH,EAAAhH,SAAAyD,EAAAzD,QACAgH,EAAAtG,KAAAsG,EAAA/F,SACA+F,EAGA,IAAAU,EAAAV,EAAAxG,UAAA,MAAAwG,EAAAxG,SAAAsG,OAAA,GACAa,EACAlE,EAAAvD,MACAuD,EAAAjD,UAAA,MAAAiD,EAAAjD,SAAAsG,OAAA,GAEAc,EAAAD,GAAAD,GACAV,EAAA9G,MAAAuD,EAAAjD,SACAqH,EAAAD,EACAE,EAAAd,EAAAxG,UAAAwG,EAAAxG,SAAAuD,MAAA,SAEAgE,GADAP,EAAA/D,EAAAjD,UAAAiD,EAAAjD,SAAAuD,MAAA,SACAiD,EAAAjH,WAAAoC,EAAA6E,EAAAjH,WA2BA,GApBAgI,IACAf,EAAA5G,SAAA,GACA4G,EAAA7G,KAAA,KACA6G,EAAA9G,OACA,KAAA4H,EAAA,GAAAA,EAAA,GAAAd,EAAA9G,KACA4H,EAAA7B,QAAAe,EAAA9G,OAEA8G,EAAA9G,KAAA,GACAuD,EAAA1D,WACA0D,EAAArD,SAAA,KACAqD,EAAAtD,KAAA,KACAsD,EAAAvD,OACA,KAAAsH,EAAA,GAAAA,EAAA,GAAA/D,EAAAvD,KACAsH,EAAAvB,QAAAxC,EAAAvD,OAEAuD,EAAAvD,KAAA,MAEA0H,MAAA,KAAAJ,EAAA,SAAAM,EAAA,KAGAH,EAEAX,EAAA9G,KAAAuD,EAAAvD,MAAA,KAAAuD,EAAAvD,KACAuD,EAAAvD,KAAA8G,EAAA9G,KACA8G,EAAA5G,SAAAqD,EAAArD,UAAA,KAAAqD,EAAArD,SACAqD,EAAArD,SAAA4G,EAAA5G,SACA4G,EAAA1G,OAAAmD,EAAAnD,OACA0G,EAAAzG,MAAAkD,EAAAlD,MACAuH,EAAAN,OAEG,GAAAA,EAAAnD,OAGHyD,MAAA,IACAA,EAAAE,MACAF,IAAAtG,OAAAgG,GACAR,EAAA1G,OAAAmD,EAAAnD,OACA0G,EAAAzG,MAAAkD,EAAAlD,WACG,IAAAX,EAAAqI,kBAAAxE,EAAAnD,QAAA,CAIH,GAAAyH,EAAA,CACAf,EAAA5G,SAAA4G,EAAA9G,KAAA4H,EAAAL,QAIA,IAAAS,KAAAlB,EAAA9G,MAAA8G,EAAA9G,KAAA0D,QAAA,SACAoD,EAAA9G,KAAA6D,MAAA,KACAmE,IACAlB,EAAA/G,KAAAiI,EAAAT,QACAT,EAAA9G,KAAA8G,EAAA5G,SAAA8H,EAAAT,SAWA,OARAT,EAAA1G,OAAAmD,EAAAnD,OACA0G,EAAAzG,MAAAkD,EAAAlD,MAEAX,EAAAuI,OAAAnB,EAAAxG,WAAAZ,EAAAuI,OAAAnB,EAAA1G,UACA0G,EAAAvG,MAAAuG,EAAAxG,SAAAwG,EAAAxG,SAAA,KACAwG,EAAA1G,OAAA0G,EAAA1G,OAAA,KAEA0G,EAAAtG,KAAAsG,EAAA/F,SACA+F,EAGA,IAAAc,EAAAzD,OAWA,OARA2C,EAAAxG,SAAA,KAEAwG,EAAA1G,OACA0G,EAAAvG,KAAA,IAAAuG,EAAA1G,OAEA0G,EAAAvG,KAAA,KAEAuG,EAAAtG,KAAAsG,EAAA/F,SACA+F,EAcA,IARA,IAAAoB,EAAAN,EAAA5C,OAAA,MACAmD,GACArB,EAAA9G,MAAAuD,EAAAvD,MAAA4H,EAAAzD,OAAA,KACA,MAAA+D,GAAA,OAAAA,IAAA,KAAAA,EAIAE,EAAA,EACAvD,EAAA+C,EAAAzD,OAA8BU,GAAA,EAAQA,IACtCqD,EAAAN,EAAA/C,GACA,MAAAqD,EACAN,EAAAS,OAAAxD,EAAA,GACK,OAAAqD,GACLN,EAAAS,OAAAxD,EAAA,GACAuD,KACKA,IACLR,EAAAS,OAAAxD,EAAA,GACAuD,KAKA,IAAAV,IAAAC,EACA,KAAUS,IAAMA,EAChBR,EAAA7B,QAAA,OAIA2B,GAAA,KAAAE,EAAA,IACAA,EAAA,UAAAA,EAAA,GAAAhB,OAAA,IACAgB,EAAA7B,QAAA,IAGAoC,GAAA,MAAAP,EAAA5D,KAAA,KAAAM,QAAA,IACAsD,EAAA9B,KAAA,IAGA,IAAAwC,EAAA,KAAAV,EAAA,IACAA,EAAA,UAAAA,EAAA,GAAAhB,OAAA,GAGA,GAAAiB,EAAA,CACAf,EAAA5G,SAAA4G,EAAA9G,KAAAsI,EAAA,GACAV,EAAAzD,OAAAyD,EAAAL,QAAA,GAIAS,KAAAlB,EAAA9G,MAAA8G,EAAA9G,KAAA0D,QAAA,SACAoD,EAAA9G,KAAA6D,MAAA,KACAmE,IACAlB,EAAA/G,KAAAiI,EAAAT,QACAT,EAAA9G,KAAA8G,EAAA5G,SAAA8H,EAAAT,SAyBA,OArBAG,KAAAZ,EAAA9G,MAAA4H,EAAAzD,OAEAuD,IAAAY,GACAV,EAAA7B,QAAA,IAGA6B,EAAAzD,OAIA2C,EAAAxG,SAAAsH,EAAA5D,KAAA,MAHA8C,EAAAxG,SAAA,KACAwG,EAAAvG,KAAA,MAMAb,EAAAuI,OAAAnB,EAAAxG,WAAAZ,EAAAuI,OAAAnB,EAAA1G,UACA0G,EAAAvG,MAAAuG,EAAAxG,SAAAwG,EAAAxG,SAAA,KACAwG,EAAA1G,OAAA0G,EAAA1G,OAAA,KAEA0G,EAAA/G,KAAAwD,EAAAxD,MAAA+G,EAAA/G,KACA+G,EAAAhH,QAAAgH,EAAAhH,SAAAyD,EAAAzD,QACAgH,EAAAtG,KAAAsG,EAAA/F,SACA+F,GAGAnH,EAAAyD,UAAA8B,UAAA,WACA,IAAAlF,EAAAJ,KAAAI,KACAC,EAAAiB,EAAAmD,KAAArE,GACAC,IACAA,IAAA,GACA,MAAAA,IACAL,KAAAK,OAAAqE,OAAA,IAEAtE,IAAAsE,OAAA,EAAAtE,EAAAmE,OAAAlE,EAAAkE,SAEAnE,IAAAJ,KAAAM,SAAAF,4CC1tBA,IAAAuI,EAAA,8yuCAEAC,EAAA,GACAC,EAAA,GAOA,SAAAC,KA2JA,SAAAC,EAAAH,EAAAC,GACA,IAAA5D,EAAA0D,EAAApE,OACAyE,EAAA,GACA,MAAA/D,IAAA,CACA,IAKAgE,EALAC,EAAAP,EAAA1D,GACAkE,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAG,EAAAD,EAAA,GACAE,EAAAD,EAAA,IAAAA,EAAA,UAAAA,GAAA,KAAAA,GAAA,KAAAA,GAAA,KAAAA,GAAA,KAAAA,EAKA,GAHAC,IACAL,EAAAJ,EAAAQ,GAAAR,EAAAQ,IAAA,IAEAD,EAAA,IACA,IAAAG,EAAAH,EAAA,GACAR,EAAAO,GAAAK,OAAAC,aAAAJ,GAAAG,OAAAC,aAAAF,GACAP,EAAA9C,KAAAoD,IAAAL,EAAAM,GAAAJ,SAEAP,EAAAO,GAAAK,OAAAC,aAAAJ,GACAL,EAAA9C,KAAAoD,IAAAL,EAAA,IAAAE,KAnLAJ,EAAAH,EAAAC,GAWAC,EAAAtF,UAAAkG,OAAA,SAAAC,GACA,OAAAA,KAAApF,OAGAoF,EAAAxF,QAAA,kBAAqC,SAAAyC,EAAAgD,GACrC,IAAAP,EACA,SAAAO,EAAA5C,OAAA,IACA,IAAA6C,EAAA,MAAAD,EAAA5C,OAAA,GACA8C,SAAAF,EAAAlF,OAAA,GAAAG,cAAA,IACAiF,SAAAF,EAAAlF,OAAA,IAEAqF,MAAAF,OAAA,OAAAA,EAAA,QACAR,EAAAG,OAAAC,aAAAI,SAGAR,EAAAT,EAAAgB,GAEA,OAAAP,GAAAzC,IAfA,IAuBAkC,EAAAY,OAAA,SAAAC,GACA,WAAAb,GAAAY,OAAAC,IAOAb,EAAAtF,UAAAwG,OAAA,SAAAL,GACA,IAAAA,MAAApF,OACA,SAEA,IAAA0F,EAAAN,EAAApF,OACA2C,EAAA,GACAjC,EAAA,EACA,MAAAA,EAAAgF,EAAA,CACA,IAAAhB,EAAAJ,EAAAc,EAAA7D,WAAAb,IACA,GAAAgE,EAAA,CACA,IAAAE,EAAAF,EAAAU,EAAA7D,WAAAb,EAAA,IAMA,GALAkE,EACAlE,IAEAkE,EAAAF,EAAA,IAEAE,EAAA,CACAjC,GAAA,IAAAiC,EAAA,IACAlE,IACA,UAGAiC,GAAAyC,EAAA3C,OAAA/B,GACAA,IAEA,OAAAiC,GAOA4B,EAAAkB,OAAA,SAAAL,GACA,WAAAb,GAAAkB,OAAAL,IAOAb,EAAAtF,UAAA0G,aAAA,SAAAP,GACA,IAAAA,MAAApF,OACA,SAEA,IAAA0F,EAAAN,EAAApF,OACA2C,EAAA,GACAjC,EAAA,EACA,MAAAA,EAAAgF,EAAA,CACA,IAAAE,EAAAR,EAAA7D,WAAAb,GACAgE,EAAAJ,EAAAsB,GACA,GAAAlB,EAAA,CACA,IAAAE,EAAAF,EAAAU,EAAA7D,WAAAb,EAAA,IAMA,GALAkE,EACAlE,IAEAkE,EAAAF,EAAA,IAEAE,EAAA,CACAjC,GAAA,IAAAiC,EAAA,IACAlE,IACA,UAIAiC,GADAiD,EAAA,IAAAA,EAAA,IACA,KAAAA,EAAA,IAEAR,EAAA3C,OAAA/B,GAEAA,IAEA,OAAAiC,GAOA4B,EAAAoB,aAAA,SAAAP,GACA,WAAAb,GAAAoB,aAAAP,IAOAb,EAAAtF,UAAA4G,eAAA,SAAAT,GACA,IAAAA,MAAApF,OACA,SAEA,IAAA0F,EAAAN,EAAApF,OACA2C,EAAA,GACAjC,EAAA,EACA,MAAAA,EAAAgF,EAAA,CACA,IAAAE,EAAAR,EAAA7D,WAAAb,GACAkF,GAAA,IACAjD,GAAAyC,EAAA1E,MAGAiC,GAAA,KAAAiD,EAAA,IACAlF,KAEA,OAAAiC,GAOA4B,EAAAsB,eAAA,SAAAT,GACA,WAAAb,GAAAsB,eAAAT,IA+BAjK,EAAAC,QAAAmJ,yBC7LA,SAAApJ,EAAA2K,GAAA,IAAAC,qDACC,SAAAC,GAG4C5K,GAC7CA,EAAA6K,SAC2C9K,GAC3CA,EAAA8K,SAHA,IAIAC,EAAA,iBAAAJ,KAEAI,EAAAJ,SAAAI,GACAA,EAAAC,SAAAD,GACAA,EAAAE,KAUA,IAAA9K,EAGA+K,EAAA,WAGAC,EAAA,GACAC,EAAA,EACAC,EAAA,GACAC,EAAA,GACAC,EAAA,IACAC,EAAA,GACAC,EAAA,IACAC,EAAA,IAGAC,EAAA,QACAC,EAAA,eACAC,EAAA,4BAGAC,EAAA,CACAC,SAAA,kDACAC,YAAA,iDACAC,gBAAA,iBAIAC,EAAAf,EAAAC,EACAe,EAAAC,KAAAD,MACAE,EAAAvC,OAAAC,aAaA,SAAAuC,EAAAC,GACA,UAAAC,WAAAV,EAAAS,IAWA,SAAAE,EAAAC,EAAAC,GACA,IAAA9H,EAAA6H,EAAA7H,OACA2C,EAAA,GACA,MAAA3C,IACA2C,EAAA3C,GAAA8H,EAAAD,EAAA7H,IAEA,OAAA2C,EAaA,SAAAoF,EAAAC,EAAAF,GACA,IAAAG,EAAAD,EAAAtI,MAAA,KACAiD,EAAA,GACAsF,EAAAjI,OAAA,IAGA2C,EAAAsF,EAAA,OACAD,EAAAC,EAAA,IAGAD,IAAApI,QAAAoH,EAAA,KACA,IAAAkB,EAAAF,EAAAtI,MAAA,KACAyI,EAAAP,EAAAM,EAAAJ,GAAAjI,KAAA,KACA,OAAA8C,EAAAwF,EAgBA,SAAAC,EAAAJ,GACA,IAGAK,EACAC,EAJAC,EAAA,GACAC,EAAA,EACAxI,EAAAgI,EAAAhI,OAGA,MAAAwI,EAAAxI,EACAqI,EAAAL,EAAAzG,WAAAiH,KACAH,GAAA,OAAAA,GAAA,OAAAG,EAAAxI,GAEAsI,EAAAN,EAAAzG,WAAAiH,KACA,cAAAF,GACAC,EAAA5G,OAAA,KAAA0G,IAAA,UAAAC,GAAA,QAIAC,EAAA5G,KAAA0G,GACAG,MAGAD,EAAA5G,KAAA0G,GAGA,OAAAE,EAWA,SAAAE,EAAAZ,GACA,OAAAD,EAAAC,EAAA,SAAAQ,GACA,IAAAE,EAAA,GAOA,OANAF,EAAA,QACAA,GAAA,MACAE,GAAAf,EAAAa,IAAA,eACAA,EAAA,WAAAA,GAEAE,GAAAf,EAAAa,GACAE,IACG1I,KAAA,IAYH,SAAA6I,EAAAC,GACA,OAAAA,EAAA,MACAA,EAAA,GAEAA,EAAA,MACAA,EAAA,GAEAA,EAAA,MACAA,EAAA,GAEArC,EAcA,SAAAsC,EAAAC,EAAAC,GAGA,OAAAD,EAAA,OAAAA,EAAA,SAAAC,IAAA,GAQA,SAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAA5H,EAAA,EAGA,IAFA0H,EAAAE,EAAA5B,EAAA0B,EAAAtC,GAAAsC,GAAA,EACAA,GAAA1B,EAAA0B,EAAAC,GAC+BD,EAAA3B,EAAAb,GAAA,EAAmClF,GAAAgF,EAClE0C,EAAA1B,EAAA0B,EAAA3B,GAEA,OAAAC,EAAAhG,GAAA+F,EAAA,GAAA2B,KAAAvC,IAUA,SAAAtB,EAAAgE,GAEA,IAEAC,EAIAC,EACAhI,EACAiI,EACAC,EACAC,EACAlI,EACAuH,EACAY,EAEAC,EAfAnB,EAAA,GACAoB,EAAAR,EAAAnJ,OAEAU,EAAA,EACAkJ,EAAAhD,EACAiD,EAAAlD,EAqBA,IALA0C,EAAAF,EAAAvI,YAAAiG,GACAwC,EAAA,IACAA,EAAA,GAGAhI,EAAA,EAAaA,EAAAgI,IAAWhI,EAExB8H,EAAA5H,WAAAF,IAAA,KACAoG,EAAA,aAEAc,EAAA5G,KAAAwH,EAAA5H,WAAAF,IAMA,IAAAiI,EAAAD,EAAA,EAAAA,EAAA,IAAyCC,EAAAK,GAAqB,CAO9D,IAAAJ,EAAA7I,EAAA8I,EAAA,EAAAlI,EAAAgF,GAAsDhF,GAAAgF,EAAA,CAetD,GAbAgD,GAAAK,GACAlC,EAAA,iBAGAoB,EAAAH,EAAAS,EAAA5H,WAAA+H,OAEAT,GAAAvC,GAAAuC,EAAAvB,GAAAjB,EAAA3F,GAAA8I,KACA/B,EAAA,YAGA/G,GAAAmI,EAAAW,EACAC,EAAAnI,GAAAuI,EAAAtD,EAAAjF,GAAAuI,EAAArD,IAAAlF,EAAAuI,EAEAhB,EAAAY,EACA,MAGAC,EAAApD,EAAAmD,EACAD,EAAAlC,EAAAjB,EAAAqD,IACAjC,EAAA,YAGA+B,GAAAE,EAIAN,EAAAb,EAAAvI,OAAA,EACA6J,EAAAd,EAAArI,EAAA6I,EAAAH,EAAA,GAAAG,GAIAjC,EAAA5G,EAAA0I,GAAA/C,EAAAuD,GACAnC,EAAA,YAGAmC,GAAAtC,EAAA5G,EAAA0I,GACA1I,GAAA0I,EAGAb,EAAArE,OAAAxD,IAAA,EAAAkJ,GAIA,OAAAnB,EAAAF,GAUA,SAAA9C,EAAA0D,GACA,IAAAS,EACAZ,EACAc,EACAC,EACAF,EACAxI,EACA2I,EACAC,EACA3I,EACAmI,EACAS,EAGAP,EAEAQ,EACAT,EACAU,EANA7B,EAAA,GAoBA,IAXAY,EAAAf,EAAAe,GAGAQ,EAAAR,EAAAnJ,OAGA4J,EAAAhD,EACAoC,EAAA,EACAa,EAAAlD,EAGAtF,EAAA,EAAaA,EAAAsI,IAAiBtI,EAC9B6I,EAAAf,EAAA9H,GACA6I,EAAA,KACA3B,EAAA5G,KAAA6F,EAAA0C,IAIAJ,EAAAC,EAAAxB,EAAAvI,OAMA+J,GACAxB,EAAA5G,KAAAkF,GAIA,MAAAiD,EAAAH,EAAA,CAIA,IAAAK,EAAA3D,EAAAhF,EAAA,EAA0BA,EAAAsI,IAAiBtI,EAC3C6I,EAAAf,EAAA9H,GACA6I,GAAAN,GAAAM,EAAAF,IACAA,EAAAE,GAcA,IARAC,EAAAL,EAAA,EACAE,EAAAJ,EAAAtC,GAAAjB,EAAA2C,GAAAmB,IACA1C,EAAA,YAGAuB,IAAAgB,EAAAJ,GAAAO,EACAP,EAAAI,EAEA3I,EAAA,EAAcA,EAAAsI,IAAiBtI,EAO/B,GANA6I,EAAAf,EAAA9H,GAEA6I,EAAAN,KAAAZ,EAAA3C,GACAoB,EAAA,YAGAyC,GAAAN,EAAA,CAEA,IAAAK,EAAAjB,EAAA1H,EAAAgF,GAAkDhF,GAAAgF,EAAA,CAElD,GADAmD,EAAAnI,GAAAuI,EAAAtD,EAAAjF,GAAAuI,EAAArD,IAAAlF,EAAAuI,EACAI,EAAAR,EACA,MAEAW,EAAAH,EAAAR,EACAC,EAAApD,EAAAmD,EACAlB,EAAA5G,KACA6F,EAAAoB,EAAAa,EAAAW,EAAAV,EAAA,KAEAO,EAAA3C,EAAA8C,EAAAV,GAGAnB,EAAA5G,KAAA6F,EAAAoB,EAAAqB,EAAA,KACAJ,EAAAd,EAAAC,EAAAmB,EAAAL,GAAAC,GACAf,EAAA,IACAc,IAIAd,IACAY,EAGA,OAAArB,EAAA1I,KAAA,IAcA,SAAAwK,EAAAlB,GACA,OAAApB,EAAAoB,EAAA,SAAAnB,GACA,OAAAlB,EAAAwD,KAAAtC,GACA7C,EAAA6C,EAAAnH,MAAA,GAAAP,eACA0H,IAeA,SAAAnG,EAAAsH,GACA,OAAApB,EAAAoB,EAAA,SAAAnB,GACA,OAAAjB,EAAAuD,KAAAtC,GACA,OAAAvC,EAAAuC,GACAA,IAOA1M,EAAA,CAMAiP,QAAA,QAQAC,KAAA,CACArF,OAAAiD,EACA3C,OAAAgD,GAEAtD,SACAM,SACA5D,UACAwI,aAWEtE,EAAA,WACF,OAAAzK,GACG4D,KAAA9D,EAAAC,EAAAD,EAAAD,QAAAsP,IAAA1E,IAAA5K,EAAAC,QAAA2K,IAngBF,6DCDD,IAAA2E,EAAA,y4DACAC,EAAA,6kCAEAtG,EAAA,GACAuG,EAAA,GAEAlK,EAAA,EACAV,EAAA0K,EAAA1K,OACA,MAAAU,EAAAV,EAAA,CACA,IAAA6K,EAAAH,EAAAhK,GACAkF,EAAA+E,EAAAjK,GACA2D,EAAAwG,GAAA5F,OAAAC,aAAAU,GACAgF,EAAAhF,GAAAiF,EACAnK,IAMA,SAAAoK,KAMAA,EAAA7L,UAAAkG,OAAA,SAAAC,GACA,OAAAA,KAAApF,OAGAoF,EAAAxF,QAAA,kBAAqC,SAAAyC,EAAAgD,GACrC,IAAAP,EACA,SAAAO,EAAA5C,OAAA,IACA,IAAA6C,EAAA,MAAAD,EAAA5C,OAAA,GAAAnC,cACAiF,SAAAF,EAAAlF,OAAA,OACAoF,SAAAF,EAAAlF,OAAA,IAEAqF,MAAAF,OAAA,OAAAA,EAAA,QACAR,EAAAG,OAAAC,aAAAI,SAGAR,EAAAT,EAAAgB,GAEA,OAAAP,GAAAzC,IAfA,IAuBAyI,EAAA3F,OAAA,SAAAC,GACA,WAAA0F,GAAA3F,OAAAC,IAOA0F,EAAA7L,UAAAwG,OAAA,SAAAL,GACA,IAAAA,MAAApF,OACA,SAEA,IAAA0F,EAAAN,EAAApF,OACA2C,EAAA,GACAjC,EAAA,EACA,MAAAA,EAAAgF,EAAA,CACA,IAAAd,EAAAgG,EAAAxF,EAAA7D,WAAAb,IACAiC,GAAAiC,EAAA,IAAAA,EAAA,IAA0CQ,EAAA3C,OAAA/B,GAC1CA,IAEA,OAAAiC,GAOAmI,EAAArF,OAAA,SAAAL,GACA,WAAA0F,GAAArF,OAAAL,IAOA0F,EAAA7L,UAAA0G,aAAA,SAAAP,GACA,IAAAA,MAAApF,OACA,SAEA,IAAA0F,EAAAN,EAAApF,OACA2C,EAAA,GACAjC,EAAA,EACA,MAAAA,EAAAgF,EAAA,CACA,IAAAqF,EAAA3F,EAAA7D,WAAAb,GACAkE,EAAAgG,EAAAG,GAEApI,GADAiC,EACA,IAAAA,EAAA,IACSmG,EAAA,IAAAA,EAAA,IACT,KAAAA,EAAA,IAEA3F,EAAA3C,OAAA/B,GAEAA,IAEA,OAAAiC,GAOAmI,EAAAnF,aAAA,SAAAP,GACA,WAAA0F,GAAAnF,aAAAP,IAOA0F,EAAA7L,UAAA4G,eAAA,SAAAT,GACA,IAAAA,MAAApF,OACA,SAEA,IAAA0F,EAAAN,EAAApF,OACA2C,EAAA,GACAjC,EAAA,EACA,MAAAA,EAAAgF,EAAA,CACA,IAAAE,EAAAR,EAAA7D,WAAAb,GACAkF,GAAA,IACAjD,GAAAyC,EAAA1E,MAGAiC,GAAA,KAAAiD,EAAA,IACAlF,KAEA,OAAAiC,GAOAmI,EAAAjF,eAAA,SAAAT,GACA,WAAA0F,GAAAjF,eAAAT,IAGAjK,EAAAC,QAAA0P,uCChJA1P,EAAA4P,aACA5P,EAAA6P,cACA7P,EAAA8P,gBAOA,IALA,IAAAC,EAAA,GACAC,EAAA,GACAC,EAAA,qBAAAC,sBAAAC,MAEAjG,EAAA,mEACA5E,EAAA,EAAA8K,EAAAlG,EAAAtF,OAAkCU,EAAA8K,IAAS9K,EAC3CyK,EAAAzK,GAAA4E,EAAA5E,GACA0K,EAAA9F,EAAA/D,WAAAb,MAQA,SAAA+K,EAAAC,GACA,IAAAF,EAAAE,EAAA1L,OAEA,GAAAwL,EAAA,IACA,UAAAG,MAAA,kDAKA,IAAAC,EAAAF,EAAAnM,QAAA,MACA,IAAAqM,MAAAJ,GAEA,IAAAK,EAAAD,IAAAJ,EACA,EACA,EAAAI,EAAA,EAEA,OAAAA,EAAAC,GAIA,SAAAb,EAAAU,GACA,IAAAI,EAAAL,EAAAC,GACAE,EAAAE,EAAA,GACAD,EAAAC,EAAA,GACA,UAAAF,EAAAC,GAAA,EAAAA,EAGA,SAAAE,EAAAL,EAAAE,EAAAC,GACA,UAAAD,EAAAC,GAAA,EAAAA,EAGA,SAAAZ,EAAAS,GAeA,IAdA,IAAAM,EACAF,EAAAL,EAAAC,GACAE,EAAAE,EAAA,GACAD,EAAAC,EAAA,GAEAG,EAAA,IAAAZ,EAAAU,EAAAL,EAAAE,EAAAC,IAEAK,EAAA,EAGAV,EAAAK,EAAA,EACAD,EAAA,EACAA,EAEAlL,EAAA,EAAiBA,EAAA8K,EAAS9K,GAAA,EAC1BsL,EACAZ,EAAAM,EAAAnK,WAAAb,KAAA,GACA0K,EAAAM,EAAAnK,WAAAb,EAAA,QACA0K,EAAAM,EAAAnK,WAAAb,EAAA,OACA0K,EAAAM,EAAAnK,WAAAb,EAAA,IACAuL,EAAAC,KAAAF,GAAA,OACAC,EAAAC,KAAAF,GAAA,MACAC,EAAAC,KAAA,IAAAF,EAmBA,OAhBA,IAAAH,IACAG,EACAZ,EAAAM,EAAAnK,WAAAb,KAAA,EACA0K,EAAAM,EAAAnK,WAAAb,EAAA,OACAuL,EAAAC,KAAA,IAAAF,GAGA,IAAAH,IACAG,EACAZ,EAAAM,EAAAnK,WAAAb,KAAA,GACA0K,EAAAM,EAAAnK,WAAAb,EAAA,OACA0K,EAAAM,EAAAnK,WAAAb,EAAA,OACAuL,EAAAC,KAAAF,GAAA,MACAC,EAAAC,KAAA,IAAAF,GAGAC,EAGA,SAAAE,EAAAC,GACA,OAAAjB,EAAAiB,GAAA,OACAjB,EAAAiB,GAAA,OACAjB,EAAAiB,GAAA,MACAjB,EAAA,GAAAiB,GAGA,SAAAC,EAAAC,EAAAC,EAAAC,GAGA,IAFA,IAAAR,EACAzD,EAAA,GACA7H,EAAA6L,EAAqB7L,EAAA8L,EAAS9L,GAAA,EAC9BsL,GACAM,EAAA5L,IAAA,cACA4L,EAAA5L,EAAA,cACA,IAAA4L,EAAA5L,EAAA,IACA6H,EAAA5G,KAAAwK,EAAAH,IAEA,OAAAzD,EAAA1I,KAAA,IAGA,SAAAqL,EAAAoB,GAQA,IAPA,IAAAN,EACAR,EAAAc,EAAAtM,OACAyM,EAAAjB,EAAA,EACAvD,EAAA,GACAyE,EAAA,MAGAhM,EAAA,EAAAiM,EAAAnB,EAAAiB,EAA0C/L,EAAAiM,EAAUjM,GAAAgM,EACpDzE,EAAAtG,KAAA0K,EACAC,EAAA5L,IAAAgM,EAAAC,IAAAjM,EAAAgM,IAsBA,OAjBA,IAAAD,GACAT,EAAAM,EAAAd,EAAA,GACAvD,EAAAtG,KACAwJ,EAAAa,GAAA,GACAb,EAAAa,GAAA,MACA,OAEG,IAAAS,IACHT,GAAAM,EAAAd,EAAA,OAAAc,EAAAd,EAAA,GACAvD,EAAAtG,KACAwJ,EAAAa,GAAA,IACAb,EAAAa,GAAA,MACAb,EAAAa,GAAA,MACA,MAIA/D,EAAApI,KAAA,IAnIAuL,EAAA,IAAA7J,WAAA,OACA6J,EAAA,IAAA7J,WAAA,+CCnBA,MAAAqL,EAAiBvR,EAAQ,QAAQuR,SASjCzR,EAAAC,QAAA,cAAAwR,EACAC,cACAC,QACArR,KAAAsR,UAAA,GACAtR,KAAAuR,KAAA,EACAvR,KAAAwR,kBAAA,KACAxR,KAAAyR,GAAA,cACAzR,KAAA0R,WAAA1R,KAAAsR,WACAtR,KAAA2R,KAAA,SAIAP,WAAAQ,GACA,IAAA9M,EAAA8M,EAAA9M,MAAA,+BACA,GAAAA,EAAA,CAEA,MAAA+M,EAAA/M,EAAA,GACA8H,EAAA9H,EAAA,SACA,OAAA+M,GACA,8BACA7R,KAAA2R,KAAA,gBAAAG,KAAAlF,GAAAmF,WACA,MACA,2BACA/R,KAAAuR,KAAAzH,SAAA8C,GACA,MACA,aACA5M,KAAAwR,kBACA1F,KAAAkG,MAAA,IAAAC,WAAArF,EAAA3I,MAAA,UACA,MACA,oBACAjE,KAAA2R,KAAA,WACA,YAGK,KAAA9C,KAAA+C,MAAAtN,QAELtE,KAAA2R,KAAA,QACA1O,IAAA2O,EAAAtN,OACA4N,IAAAlS,KAAAuR,OACAY,SAAAnS,KAAAwR,oBAKAJ,OAAAgB,EAAAC,EAAAC,GACA,IAAAC,EAAAH,EAAAI,SAAA,QAAAvO,MAAA,MACAjE,KAAAsR,YAAyBiB,EAAA,GAAAvS,KAAAsR,UAAAiB,EAAA,IACzBA,EAAAE,QAAA,CAAAb,EAAA3M,KACAA,EAAAsN,EAAAhO,OAAA,EACAvE,KAAA0R,WAAAE,GAGA5R,KAAAsR,UAAAM,IAGAU,8BChEA,IAAAhQ,EAAW1C,EAAQ,QACnBqD,EAAUrD,EAAQ,QAElB2C,EAAA7C,EAAAC,QAEA,QAAA+S,KAAApQ,EACAA,EAAAqQ,eAAAD,KAAAnQ,EAAAmQ,GAAApQ,EAAAoQ,IAaA,SAAAE,EAAAC,GAOA,GANA,kBAAAA,IACAA,EAAA5P,EAAApC,MAAAgS,IAEAA,EAAA5S,WACA4S,EAAA5S,SAAA,UAEA,WAAA4S,EAAA5S,SACA,UAAAiQ,MAAA,aAAA2C,EAAA5S,SAAA,sCAEA,OAAA4S,EApBAtQ,EAAAuQ,QAAA,SAAAD,EAAAE,GAEA,OADAF,EAAAD,EAAAC,GACAvQ,EAAAwQ,QAAArP,KAAAzD,KAAA6S,EAAAE,IAGAxQ,EAAAyQ,IAAA,SAAAH,EAAAE,GAEA,OADAF,EAAAD,EAAAC,GACAvQ,EAAA0Q,IAAAvP,KAAAzD,KAAA6S,EAAAE,yCCiDArT,EAAAC,QAAAsT,EAEA,IAAAC,EAAatT,EAAQ,QAGrBE,EAAWF,EAAQ,QAMnB,SAAAuT,EAAAC,EAAAC,GACA,IAAAC,EAAAtT,KAAAuT,gBACAD,EAAAE,cAAA,EAEA,IAAAT,EAAAO,EAAAG,QAEA,IAAAV,EACA,OAAA/S,KAAA2R,KAAA,YAAAzB,MAAA,yCAGAoD,EAAAI,WAAA,KACAJ,EAAAG,QAAA,KAEA,MAAAJ,GACArT,KAAAkG,KAAAmN,GAEAN,EAAAK,GAEA,IAAAO,EAAA3T,KAAA4T,eACAD,EAAAE,SAAA,GACAF,EAAAG,cAAAH,EAAApP,OAAAoP,EAAAI,gBACA/T,KAAAgU,MAAAL,EAAAI,eAIA,SAAAd,EAAAgB,GACA,KAAAjU,gBAAAiT,GAAA,WAAAA,EAAAgB,GAEAf,EAAAzP,KAAAzD,KAAAiU,GAEAjU,KAAAuT,gBAAA,CACAJ,iBAAAe,KAAAlU,MACAmU,eAAA,EACAX,cAAA,EACAC,QAAA,KACAC,WAAA,KACAU,cAAA,MAIApU,KAAA4T,eAAAE,cAAA,EAKA9T,KAAA4T,eAAAS,MAAA,EAEAJ,IACA,oBAAAA,EAAAK,YAAAtU,KAAAuU,WAAAN,EAAAK,WAEA,oBAAAL,EAAAO,QAAAxU,KAAAyU,OAAAR,EAAAO,QAIAxU,KAAAyR,GAAA,YAAAiD,GAGA,SAAAA,IACA,IAAAC,EAAA3U,KAEA,oBAAAA,KAAAyU,OACAzU,KAAAyU,OAAA,SAAArB,EAAAC,GACAuB,EAAAD,EAAAvB,EAAAC,KAGAuB,EAAA5U,KAAA,WA2DA,SAAA4U,EAAAC,EAAAzB,EAAAC,GACA,GAAAD,EAAA,OAAAyB,EAAAlD,KAAA,QAAAyB,GAOA,GALA,MAAAC,GACAwB,EAAA3O,KAAAmN,GAIAwB,EAAAC,eAAAvQ,OAAA,UAAA2L,MAAA,8CAEA,GAAA2E,EAAAtB,gBAAAC,aAAA,UAAAtD,MAAA,kDAEA,OAAA2E,EAAA3O,KAAA,MA7IApG,EAAAiV,SAAgBnV,EAAQ,QAGxBE,EAAAiV,SAAA9B,EAAAC,GAuEAD,EAAAzP,UAAA0C,KAAA,SAAAkM,EAAAC,GAEA,OADArS,KAAAuT,gBAAAY,eAAA,EACAjB,EAAA1P,UAAA0C,KAAAzC,KAAAzD,KAAAoS,EAAAC,IAaAY,EAAAzP,UAAA+Q,WAAA,SAAAnC,EAAAC,EAAAU,GACA,UAAA7C,MAAA,oCAGA+C,EAAAzP,UAAAwR,OAAA,SAAA5C,EAAAC,EAAAU,GACA,IAAAO,EAAAtT,KAAAuT,gBAIA,GAHAD,EAAAG,QAAAV,EACAO,EAAAI,WAAAtB,EACAkB,EAAAc,cAAA/B,GACAiB,EAAAE,aAAA,CACA,IAAAG,EAAA3T,KAAA4T,gBACAN,EAAAa,eAAAR,EAAAG,cAAAH,EAAApP,OAAAoP,EAAAI,gBAAA/T,KAAAgU,MAAAL,EAAAI,iBAOAd,EAAAzP,UAAAwQ,MAAA,SAAA7F,GACA,IAAAmF,EAAAtT,KAAAuT,gBAEA,OAAAD,EAAAI,YAAAJ,EAAAG,UAAAH,EAAAE,cACAF,EAAAE,cAAA,EACAxT,KAAAuU,WAAAjB,EAAAI,WAAAJ,EAAAc,cAAAd,EAAAH,iBAIAG,EAAAa,eAAA,GAIAlB,EAAAzP,UAAAyR,SAAA,SAAAC,EAAAnC,GACA,IAAAoC,EAAAnV,KAEAkT,EAAA1P,UAAAyR,SAAAxR,KAAAzD,KAAAkV,EAAA,SAAAE,GACArC,EAAAqC,GACAD,EAAAxD,KAAA,oCCpMAjS,EAAAC,QAAiBC,EAAQ,+BCAzB,SAAAyV,IAAC,SAAAC,GACDA,EAAAC,OAAA,SAAAC,EAAAC,GAAuC,WAAAC,EAAAF,EAAAC,IACvCH,EAAAI,YACAJ,EAAAK,YACAL,EAAAM,eAWAN,EAAAO,kBAAA,MAEA,IA+IAC,EA/IAC,EAAA,CACA,oDACA,oDACA,gCAwBA,SAAAL,EAAAF,EAAAC,GACA,KAAAzV,gBAAA0V,GACA,WAAAA,EAAAF,EAAAC,GAGA,IAAAF,EAAAvV,KACAgW,EAAAT,GACAA,EAAA/G,EAAA+G,EAAApL,EAAA,GACAoL,EAAAU,oBAAAX,EAAAO,kBACAN,EAAAE,OAAA,GACAF,EAAAE,IAAAS,UAAAX,EAAAE,IAAAS,WAAAX,EAAAE,IAAAU,cACAZ,EAAAa,UAAAb,EAAAE,IAAAS,UAAA,4BACAX,EAAAc,KAAA,GACAd,EAAAe,OAAAf,EAAAgB,WAAAhB,EAAAiB,SAAA,EACAjB,EAAA1D,IAAA0D,EAAAvJ,MAAA,KACAuJ,EAAAC,WACAD,EAAAkB,YAAAjB,IAAAD,EAAAE,IAAAgB,UACAlB,EAAAmB,MAAAC,EAAAC,MACArB,EAAAsB,eAAAtB,EAAAE,IAAAoB,eACAtB,EAAA5M,SAAA4M,EAAAsB,eAAAhQ,OAAAiQ,OAAAxB,EAAAyB,cAAAlQ,OAAAiQ,OAAAxB,EAAA3M,UACA4M,EAAAyB,WAAA,GAKAzB,EAAAE,IAAAwB,QACA1B,EAAA2B,GAAArQ,OAAAiQ,OAAAK,IAIA5B,EAAA6B,eAAA,IAAA7B,EAAAE,IAAA4B,SACA9B,EAAA6B,gBACA7B,EAAA8B,SAAA9B,EAAA3D,KAAA2D,EAAA+B,OAAA,GAEA3F,EAAA4D,EAAA,WAoBA,SAAAgC,EAAAhC,GAGA,IAFA,IAAAiC,EAAA1L,KAAA2L,IAAAnC,EAAAO,kBAAA,IACA6B,EAAA,EACAzS,EAAA,EAAAQ,EAAAsQ,EAAAxR,OAAuCU,EAAAQ,EAAOR,IAAA,CAC9C,IAAA8K,EAAAwF,EAAAQ,EAAA9Q,IAAAV,OACA,GAAAwL,EAAAyH,EAKA,OAAAzB,EAAA9Q,IACA,eACA0S,EAAApC,GACA,MAEA,YACAqC,EAAArC,EAAA,UAAAA,EAAAsC,OACAtC,EAAAsC,MAAA,GACA,MAEA,aACAD,EAAArC,EAAA,WAAAA,EAAAuC,QACAvC,EAAAuC,OAAA,GACA,MAEA,QACA9L,EAAAuJ,EAAA,+BAAAQ,EAAA9Q,IAGAyS,EAAA5L,KAAA2L,IAAAC,EAAA3H,GAGA,IAAAxB,EAAA+G,EAAAO,kBAAA6B,EACAnC,EAAAU,oBAAA1H,EAAAgH,EAAA8B,SAGA,SAAArB,EAAAT,GACA,QAAAtQ,EAAA,EAAAQ,EAAAsQ,EAAAxR,OAAuCU,EAAAQ,EAAOR,IAC9CsQ,EAAAQ,EAAA9Q,IAAA,GAIA,SAAA8S,EAAAxC,GACAoC,EAAApC,GACA,KAAAA,EAAAsC,QACAD,EAAArC,EAAA,UAAAA,EAAAsC,OACAtC,EAAAsC,MAAA,IAEA,KAAAtC,EAAAuC,SACAF,EAAArC,EAAA,WAAAA,EAAAuC,QACAvC,EAAAuC,OAAA,IA7HAxC,EAAA0C,OAAA,CACA,OACA,wBACA,kBACA,UACA,UACA,eACA,YACA,UACA,WACA,YACA,QACA,aACA,QACA,MACA,QACA,SACA,gBACA,kBAwCAnR,OAAAiQ,SACAjQ,OAAAiQ,OAAA,SAAAmB,GACA,SAAAC,KACAA,EAAA1U,UAAAyU,EACA,IAAAE,EAAA,IAAAD,EACA,OAAAC,IAIAtR,OAAAC,OACAD,OAAAC,KAAA,SAAAmR,GACA,IAAA7I,EAAA,GACA,QAAAnK,KAAAgT,IAAAtF,eAAA1N,IAAAmK,EAAAlJ,KAAAjB,GACA,OAAAmK,IA0DAsG,EAAAlS,UAAA,CACAuN,IAAA,WAAsBA,EAAA/Q,OACtBoY,QACAC,OAAA,WAA4C,OAAnBrY,KAAAgM,MAAA,KAAmBhM,MAC5CsY,MAAA,WAAwB,OAAAtY,KAAAoY,MAAA,OACxB5D,MAAA,WAAwBuD,EAAA/X,QAIxB,IACA8V,EAAalW,EAAQ,QAAQkW,OAC1B,MAAAyC,GACHzC,EAAA,aAGA,IAAA0C,EAAAlD,EAAA0C,OAAAS,OAAA,SAAAC,GACA,gBAAAA,GAAA,QAAAA,IAGA,SAAA9C,EAAAJ,EAAAC,GACA,WAAAE,EAAAH,EAAAC,GAGA,SAAAE,EAAAH,EAAAC,GACA,KAAAzV,gBAAA2V,GACA,WAAAA,EAAAH,EAAAC,GAGAK,EAAA6C,MAAA3Y,MAEAA,KAAA4Y,QAAA,IAAAlD,EAAAF,EAAAC,GACAzV,KAAA6Y,UAAA,EACA7Y,KAAA8Y,UAAA,EAEA,IAAAC,EAAA/Y,KAEAA,KAAA4Y,QAAAI,MAAA,WACAD,EAAApH,KAAA,QAGA3R,KAAA4Y,QAAAK,QAAA,SAAA7F,GACA2F,EAAApH,KAAA,QAAAyB,GAIA2F,EAAAH,QAAA5M,MAAA,MAGAhM,KAAAkZ,SAAA,KAEAV,EAAA/F,QAAA,SAAAiG,GACA7R,OAAAsS,eAAAJ,EAAA,KAAAL,EAAA,CACA1F,IAAA,WACA,OAAA+F,EAAAH,QAAA,KAAAF,IAEAU,IAAA,SAAA9S,GACA,IAAAA,EAGA,OAFAyS,EAAAM,mBAAAX,GACAK,EAAAH,QAAA,KAAAF,GAAApS,EACAA,EAEAyS,EAAAtH,GAAAiH,EAAApS,IAEAgT,YAAA,EACAC,cAAA,MAKA5D,EAAAnS,UAAAqD,OAAAiQ,OAAAhB,EAAAtS,UAAA,CACAgW,YAAA,CACA5M,MAAA+I,KAIAA,EAAAnS,UAAA4U,MAAA,SAAA/E,GACA,uBAAAgC,GACA,oBAAAA,EAAAoE,UACApE,EAAAoE,SAAApG,GAAA,CACA,IAAArT,KAAAkZ,SAAA,CACA,IAAAQ,EAAiB9Z,EAAQ,QAAgB+Z,cACzC3Z,KAAAkZ,SAAA,IAAAQ,EAAA,QAEArG,EAAArT,KAAAkZ,SAAAd,MAAA/E,GAKA,OAFArT,KAAA4Y,QAAAR,MAAA/E,EAAAb,YACAxS,KAAA2R,KAAA,OAAA0B,IACA,GAGAsC,EAAAnS,UAAAuN,IAAA,SAAAqB,GAKA,OAJAA,KAAA7N,QACAvE,KAAAoY,MAAAhG,GAEApS,KAAA4Y,QAAA7H,OACA,GAGA4E,EAAAnS,UAAAiO,GAAA,SAAAiH,EAAAkB,GACA,IAAAb,EAAA/Y,KASA,OARA+Y,EAAAH,QAAA,KAAAF,KAAA,IAAAF,EAAA1U,QAAA4U,KACAK,EAAAH,QAAA,KAAAF,GAAA,WACA,IAAAmB,EAAA,IAAAC,UAAAvV,OAAA,CAAAuV,UAAA,IAAAhK,MAAA6I,MAAA,KAAAmB,WACAD,EAAApR,OAAA,IAAAiQ,GACAK,EAAApH,KAAAgH,MAAAI,EAAAc,KAIA/D,EAAAtS,UAAAiO,GAAAhO,KAAAsV,EAAAL,EAAAkB,IAKA,IAAAG,EAAA,UACAC,EAAA,UACAC,EAAA,uCACAC,EAAA,gCACA/C,EAAA,CAAgBgD,IAAAF,EAAAhD,MAAAiD,GAQhBE,EAAA,4JAEAC,EAAA,gMAEAC,EAAA,6JACAC,EAAA,iMAEA,SAAAC,EAAArQ,GACA,YAAAA,GAAA,OAAAA,GAAA,OAAAA,GAAA,OAAAA,EAGA,SAAAsQ,EAAAtQ,GACA,YAAAA,GAAA,MAAAA,EAGA,SAAAuQ,EAAAvQ,GACA,YAAAA,GAAAqQ,EAAArQ,GAGA,SAAAwQ,EAAAC,EAAAzQ,GACA,OAAAyQ,EAAA/L,KAAA1E,GAGA,SAAA0Q,EAAAD,EAAAzQ,GACA,OAAAwQ,EAAAC,EAAAzQ,GAGA,IAAAwM,EAAA,EAsTA,QAAA/P,KArTA0O,EAAAwF,MAAA,CACAlE,MAAAD,IACAoE,iBAAApE,IACAqE,KAAArE,IACAsE,YAAAtE,IACAuE,UAAAvE,IACAwE,UAAAxE,IACAyE,iBAAAzE,IACAqD,QAAArD,IACA0E,eAAA1E,IACA2E,YAAA3E,IACA4E,mBAAA5E,IACA6E,iBAAA7E,IACA8E,QAAA9E,IACA+E,eAAA/E,IACAgF,cAAAhF,IACAoD,MAAApD,IACAiF,aAAAjF,IACAkF,eAAAlF,IACAmF,UAAAnF,IACAoF,eAAApF,IACAqF,iBAAArF,IACAsF,SAAAtF,IACAuF,eAAAvF,IACAwF,OAAAxF,IACAyF,YAAAzF,IACA0F,sBAAA1F,IACA2F,aAAA3F,IACA4F,oBAAA5F,IACA6F,oBAAA7F,IACA8F,sBAAA9F,IACA+F,sBAAA/F,IACAgG,sBAAAhG,IACAiG,UAAAjG,IACAkG,oBAAAlG,IACAmG,OAAAnG,IACAoG,cAAApG,KAGArB,EAAAyB,aAAA,CACAiG,IAAA,IACAC,GAAA,IACAC,GAAA,IACAC,KAAA,IACAC,KAAA,KAGA9H,EAAA3M,SAAA,CACAqU,IAAA,IACAC,GAAA,IACAC,GAAA,IACAC,KAAA,IACAC,KAAA,IACAC,MAAA,IACAC,OAAA,IACAC,MAAA,IACAC,OAAA,IACAC,MAAA,IACAC,OAAA,IACAC,KAAA,IACAC,OAAA,IACAC,IAAA,IACAC,OAAA,IACAC,MAAA,IACAC,OAAA,IACAC,KAAA,IACAC,OAAA,IACAC,MAAA,IACAC,OAAA,IACAC,KAAA,IACAC,OAAA,IACAC,OAAA,IACAC,MAAA,IACAC,OAAA,IACAC,OAAA,IACAC,OAAA,IACAC,KAAA,IACAC,MAAA,IACAC,OAAA,IACAC,MAAA,IACAC,OAAA,IACAC,KAAA,IACAC,OAAA,IACAC,OAAA,IACAC,MAAA,IACAC,MAAA,IACAC,OAAA,IACAC,MAAA,IACAC,OAAA,IACAC,KAAA,IACAC,OAAA,IACAC,OAAA,IACAC,MAAA,IACAC,OAAA,IACAC,IAAA,IACAC,KAAA,IACAC,OAAA,IACAC,MAAA,IACAC,OAAA,IACAC,KAAA,IACAC,OAAA,IACAC,OAAA,IACAC,MAAA,IACAC,OAAA,IACAC,OAAA,IACAC,OAAA,IACAC,KAAA,IACAC,MAAA,IACAC,MAAA,IACAC,OAAA,IACAC,MAAA,IACAC,OAAA,IACAC,KAAA,IACAC,OAAA,IACAC,KAAA,IACAC,KAAA,IACAC,IAAA,IACAC,KAAA,IACAC,MAAA,IACAC,KAAA,IACAC,MAAA,IACAC,OAAA,IACAC,IAAA,IACAC,OAAA,IACAC,KAAA,IACAC,IAAA,IACAC,KAAA,IACAC,MAAA,IACAC,IAAA,IACAC,IAAA,IACAC,KAAA,IACAC,IAAA,IACAC,OAAA,IACAC,KAAA,IACAC,KAAA,IACAC,KAAA,IACAC,MAAA,IACAC,MAAA,IACAC,KAAA,IACAC,OAAA,IACAC,MAAA,IACAC,KAAA,IACAC,MAAA,IACAC,OAAA,IACAC,OAAA,IACAC,OAAA,IACAC,OAAA,IACAC,MAAA,IACAC,OAAA,IACAC,MAAA,IACAC,MAAA,IACAC,OAAA,IACAC,OAAA,IACAC,KAAA,IACAC,KAAA,IACAC,KAAA,IACAC,MAAA,IACAC,MAAA,IACAC,KAAA,IACAC,MAAA,IACAC,MAAA,IACAC,QAAA,IACAC,KAAA,IACAC,IAAA,IACAC,MAAA,IACAC,KAAA,IACAC,MAAA,IACAC,OAAA,IACAC,GAAA,IACAC,GAAA,IACAC,GAAA,IACAC,QAAA,IACAC,GAAA,IACAC,IAAA,IACAC,MAAA,IACAC,IAAA,IACAC,QAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,MAAA,IACAjc,MAAA,IACAkc,KAAA,IACAC,MAAA,IACA/X,MAAA,IACAgY,QAAA,IACAC,KAAA,IACAC,IAAA,IACAC,MAAA,IACAC,KAAA,IACAC,MAAA,IACAC,OAAA,IACAC,GAAA,IACAC,GAAA,IACAC,GAAA,IACAC,QAAA,IACAC,GAAA,IACAC,IAAA,IACAC,OAAA,IACAC,MAAA,IACAC,IAAA,IACAC,QAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,MAAA,IACAC,SAAA,IACAC,MAAA,IACAC,IAAA,IACAC,KAAA,KACAC,KAAA,KACAC,OAAA,KACAC,KAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,MAAA,KACAC,MAAA,KACAC,MAAA,KACAC,MAAA,KACAC,MAAA,KACAC,MAAA,KACAC,MAAA,KACAC,MAAA,KACAC,OAAA,KACAC,OAAA,KACAC,KAAA,KACAC,OAAA,KACAC,OAAA,KACAC,MAAA,KACAC,MAAA,KACAC,OAAA,KACAC,OAAA,KACAC,MAAA,KACAC,MAAA,KACAC,KAAA,KACAC,MAAA,KACAC,OAAA,KACAC,KAAA,KACAC,MAAA,KACAC,QAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,MAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,OAAA,KACAhkB,KAAA,KACAikB,MAAA,KACAC,MAAA,KACAC,MAAA,KACAC,KAAA,KACAC,MAAA,KACAC,GAAA,KACAC,KAAA,KACAC,IAAA,KACAC,MAAA,KACAC,OAAA,KACAC,MAAA,KACAC,KAAA,KACAC,MAAA,KACAC,IAAA,KACAC,IAAA,KACAC,GAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,OAAA,KACAC,IAAA,KACAC,KAAA,KACAC,MAAA,KACAC,GAAA,KACAC,MAAA,KACAC,GAAA,KACAC,GAAA,KACAC,IAAA,KACAC,IAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,MAAA,KACAC,OAAA,KACAC,KAAA,KACAC,KAAA,KACAC,MAAA,KACAC,MAAA,KACAC,OAAA,KACAC,OAAA,KACAC,KAAA,KACAC,KAAA,KACAC,IAAA,KACAC,OAAA,KACAC,MAAA,KACAC,OAAA,KACAC,MAAA,MAGA5lB,OAAAC,KAAAwO,EAAA3M,UAAA8J,QAAA,SAAAC,GACA,IAAAxJ,EAAAoM,EAAA3M,SAAA+J,GACA9L,EAAA,kBAAAsC,EAAAM,OAAAC,aAAAP,KACAoM,EAAA3M,SAAA+J,GAAA9L,IAGA0O,EAAAwF,MACAxF,EAAAwF,MAAAxF,EAAAwF,MAAAlU,MAMA,SAAA+K,EAAA4D,EAAAmX,EAAArZ,GACAkC,EAAAmX,IAAAnX,EAAAmX,GAAArZ,GAGA,SAAAuE,EAAArC,EAAA/K,EAAA6I,GACAkC,EAAAoX,UAAAhV,EAAApC,GACA5D,EAAA4D,EAAA/K,EAAA6I,GAGA,SAAAsE,EAAApC,GACAA,EAAAoX,SAAAC,EAAArX,EAAAE,IAAAF,EAAAoX,UACApX,EAAAoX,UAAAhb,EAAA4D,EAAA,SAAAA,EAAAoX,UACApX,EAAAoX,SAAA,GAGA,SAAAC,EAAAnX,EAAAoX,GAGA,OAFApX,EAAAnR,OAAAuoB,IAAAvoB,QACAmR,EAAAqX,YAAAD,IAAA1oB,QAAA,aACA0oB,EAGA,SAAA7gB,EAAAuJ,EAAAnC,GAUA,OATAuE,EAAApC,GACAA,EAAA6B,gBACAhE,GAAA,WAAAmC,EAAA3D,KACA,aAAA2D,EAAA+B,OACA,WAAA/B,EAAApL,GAEAiJ,EAAA,IAAAlD,MAAAkD,GACAmC,EAAAvJ,MAAAoH,EACAzB,EAAA4D,EAAA,UAAAnC,GACAmC,EAGA,SAAAxE,EAAAwE,GAYA,OAXAA,EAAAiB,UAAAjB,EAAAgB,YAAAwW,EAAAxX,EAAA,qBACAA,EAAAmB,QAAAC,EAAAC,OACArB,EAAAmB,QAAAC,EAAAoE,kBACAxF,EAAAmB,QAAAC,EAAAqE,MACAhP,EAAAuJ,EAAA,kBAEAoC,EAAApC,GACAA,EAAApL,EAAA,GACAoL,EAAAe,QAAA,EACA3E,EAAA4D,EAAA,SACAG,EAAAjS,KAAA8R,IAAAC,OAAAD,EAAAE,KACAF,EAGA,SAAAwX,EAAAxX,EAAAyX,GACA,qBAAAzX,kBAAAG,GACA,UAAAxF,MAAA,0BAEAqF,EAAAC,QACAxJ,EAAAuJ,EAAAyX,GAIA,SAAAC,EAAA1X,GACAA,EAAAC,SAAAD,EAAA2X,QAAA3X,EAAA2X,QAAA3X,EAAAa,cACA,IAAA+W,EAAA5X,EAAAc,KAAAd,EAAAc,KAAA9R,OAAA,IAAAgR,EACA1D,EAAA0D,EAAA1D,IAAA,CAA4Bub,KAAA7X,EAAA2X,QAAAG,WAAA,IAG5B9X,EAAAE,IAAAwB,QACApF,EAAAqF,GAAAiW,EAAAjW,IAEA3B,EAAAyB,WAAAzS,OAAA,EACAqT,EAAArC,EAAA,iBAAA1D,GAGA,SAAAyb,EAAAF,EAAAG,GACA,IAAAtoB,EAAAmoB,EAAAtpB,QAAA,KACA0pB,EAAAvoB,EAAA,MAAAmoB,KAAAnpB,MAAA,KACAwpB,EAAAD,EAAA,GACAE,EAAAF,EAAA,GAQA,OALAD,GAAA,UAAAH,IACAK,EAAA,QACAC,EAAA,IAGA,CAAYD,SAAAC,SAGZ,SAAAC,EAAApY,GAKA,GAJAA,EAAAC,SACAD,EAAAqY,WAAArY,EAAAqY,WAAArY,EAAAa,eAGA,IAAAb,EAAAyB,WAAAlT,QAAAyR,EAAAqY,aACArY,EAAA1D,IAAAwb,WAAA1a,eAAA4C,EAAAqY,YACArY,EAAAqY,WAAArY,EAAAsY,YAAA,OAFA,CAMA,GAAAtY,EAAAE,IAAAwB,MAAA,CACA,IAAA6W,EAAAR,EAAA/X,EAAAqY,YAAA,GACAH,EAAAK,EAAAL,OACAC,EAAAI,EAAAJ,MAEA,aAAAD,EAEA,WAAAC,GAAAnY,EAAAsY,cAAA5T,EACA8S,EAAAxX,EACA,gCAAA0E,EAAA,aACA1E,EAAAsY,kBACS,aAAAH,GAAAnY,EAAAsY,cAAA3T,EACT6S,EAAAxX,EACA,kCAAA2E,EAAA,aACA3E,EAAAsY,iBACS,CACT,IAAAhc,EAAA0D,EAAA1D,IACAsb,EAAA5X,EAAAc,KAAAd,EAAAc,KAAA9R,OAAA,IAAAgR,EACA1D,EAAAqF,KAAAiW,EAAAjW,KACArF,EAAAqF,GAAArQ,OAAAiQ,OAAAqW,EAAAjW,KAEArF,EAAAqF,GAAAwW,GAAAnY,EAAAsY,YAOAtY,EAAAyB,WAAA9Q,KAAA,CAAAqP,EAAAqY,WAAArY,EAAAsY,mBAGAtY,EAAA1D,IAAAwb,WAAA9X,EAAAqY,YAAArY,EAAAsY,YACAjW,EAAArC,EAAA,eACA6X,KAAA7X,EAAAqY,WACAhhB,MAAA2I,EAAAsY,cAIAtY,EAAAqY,WAAArY,EAAAsY,YAAA,IAGA,SAAAE,EAAAxY,EAAAyY,GACA,GAAAzY,EAAAE,IAAAwB,MAAA,CAEA,IAAApF,EAAA0D,EAAA1D,IAGAic,EAAAR,EAAA/X,EAAA2X,SACArb,EAAA4b,OAAAK,EAAAL,OACA5b,EAAA6b,MAAAI,EAAAJ,MACA7b,EAAAoc,IAAApc,EAAAqF,GAAA4W,EAAAL,SAAA,GAEA5b,EAAA4b,SAAA5b,EAAAoc,MACAlB,EAAAxX,EAAA,6BACA2Y,KAAAnnB,UAAAwO,EAAA2X,UACArb,EAAAoc,IAAAH,EAAAL,QAGA,IAAAN,EAAA5X,EAAAc,KAAAd,EAAAc,KAAA9R,OAAA,IAAAgR,EACA1D,EAAAqF,IAAAiW,EAAAjW,KAAArF,EAAAqF,IACArQ,OAAAC,KAAA+K,EAAAqF,IAAAzE,QAAA,SAAApM,GACAuR,EAAArC,EAAA,mBACAkY,OAAApnB,EACA4nB,IAAApc,EAAAqF,GAAA7Q,OAQA,QAAApB,EAAA,EAAAQ,EAAA8P,EAAAyB,WAAAzS,OAAmDU,EAAAQ,EAAOR,IAAA,CAC1D,IAAAkpB,EAAA5Y,EAAAyB,WAAA/R,GACAmoB,EAAAe,EAAA,GACAvhB,EAAAuhB,EAAA,GACAX,EAAAF,EAAAF,GAAA,GACAK,EAAAD,EAAAC,OACAC,EAAAF,EAAAE,MACAO,EAAA,KAAAR,EAAA,GAAA5b,EAAAqF,GAAAuW,IAAA,GACAre,EAAA,CACAge,OACAxgB,QACA6gB,SACAC,QACAO,OAKAR,GAAA,UAAAA,IAAAQ,IACAlB,EAAAxX,EAAA,6BACA2Y,KAAAnnB,UAAA0mB,IACAre,EAAA6e,IAAAR,GAEAlY,EAAA1D,IAAAwb,WAAAD,GAAAhe,EACAwI,EAAArC,EAAA,cAAAnG,GAEAmG,EAAAyB,WAAAzS,OAAA,EAGAgR,EAAA1D,IAAAuc,gBAAAJ,EAGAzY,EAAAiB,SAAA,EACAjB,EAAAc,KAAAnQ,KAAAqP,EAAA1D,KACA+F,EAAArC,EAAA,YAAAA,EAAA1D,KACAmc,IAEAzY,EAAAkB,UAAA,WAAAlB,EAAA2X,QAAAroB,cAGA0Q,EAAAmB,MAAAC,EAAAqE,KAFAzF,EAAAmB,MAAAC,EAAAmG,OAIAvH,EAAA1D,IAAA,KACA0D,EAAA2X,QAAA,IAEA3X,EAAAqY,WAAArY,EAAAsY,YAAA,GACAtY,EAAAyB,WAAAzS,OAAA,EAGA,SAAA8pB,EAAA9Y,GACA,IAAAA,EAAA2X,QAIA,OAHAH,EAAAxX,EAAA,0BACAA,EAAAoX,UAAA,WACApX,EAAAmB,MAAAC,EAAAqE,MAIA,GAAAzF,EAAAuC,OAAA,CACA,cAAAvC,EAAA2X,QAIA,OAHA3X,EAAAuC,QAAA,KAAAvC,EAAA2X,QAAA,IACA3X,EAAA2X,QAAA,QACA3X,EAAAmB,MAAAC,EAAAmG,QAGAlF,EAAArC,EAAA,WAAAA,EAAAuC,QACAvC,EAAAuC,OAAA,GAKA,IAAA9J,EAAAuH,EAAAc,KAAA9R,OACA2oB,EAAA3X,EAAA2X,QACA3X,EAAAC,SACA0X,IAAA3X,EAAAa,cAEA,IAAAkY,EAAApB,EACA,MAAAlf,IAAA,CACA,IAAAsK,EAAA/C,EAAAc,KAAArI,GACA,GAAAsK,EAAA8U,OAAAkB,EAIA,MAFAvB,EAAAxX,EAAA,wBAOA,GAAAvH,EAAA,EAIA,OAHA+e,EAAAxX,EAAA,0BAAAA,EAAA2X,SACA3X,EAAAoX,UAAA,KAAApX,EAAA2X,QAAA,SACA3X,EAAAmB,MAAAC,EAAAqE,MAGAzF,EAAA2X,UACA,IAAAtmB,EAAA2O,EAAAc,KAAA9R,OACA,MAAAqC,KAAAoH,EAAA,CACA,IAAA6D,EAAA0D,EAAA1D,IAAA0D,EAAAc,KAAAnO,MACAqN,EAAA2X,QAAA3X,EAAA1D,IAAAub,KACAxV,EAAArC,EAAA,aAAAA,EAAA2X,SAEA,IAAAqB,EAAA,GACA,QAAAtpB,KAAA4M,EAAAqF,GACAqX,EAAAtpB,GAAA4M,EAAAqF,GAAAjS,GAGA,IAAAkoB,EAAA5X,EAAAc,KAAAd,EAAAc,KAAA9R,OAAA,IAAAgR,EACAA,EAAAE,IAAAwB,OAAApF,EAAAqF,KAAAiW,EAAAjW,IAEArQ,OAAAC,KAAA+K,EAAAqF,IAAAzE,QAAA,SAAApM,GACA,IAAA8H,EAAA0D,EAAAqF,GAAA7Q,GACAuR,EAAArC,EAAA,oBAAgDkY,OAAApnB,EAAA4nB,IAAA9f,MAIhD,IAAAH,IAAAuH,EAAAgB,YAAA,GACAhB,EAAA2X,QAAA3X,EAAAsY,YAAAtY,EAAAqY,WAAA,GACArY,EAAAyB,WAAAzS,OAAA,EACAgR,EAAAmB,MAAAC,EAAAqE,KAGA,SAAAwT,EAAAjZ,GACA,IAEA5E,EAFA/G,EAAA2L,EAAA3L,OACA6kB,EAAA7kB,EAAA/E,cAEA6pB,EAAA,GAEA,OAAAnZ,EAAA5M,SAAAiB,GACA2L,EAAA5M,SAAAiB,GAEA2L,EAAA5M,SAAA8lB,GACAlZ,EAAA5M,SAAA8lB,IAEA7kB,EAAA6kB,EACA,MAAA7kB,EAAA5C,OAAA,KACA,MAAA4C,EAAA5C,OAAA,IACA4C,IAAAxE,MAAA,GACAuL,EAAA7G,SAAAF,EAAA,IACA8kB,EAAA/d,EAAA6B,SAAA,MAEA5I,IAAAxE,MAAA,GACAuL,EAAA7G,SAAAF,EAAA,IACA8kB,EAAA/d,EAAA6B,SAAA,MAGA5I,IAAAzF,QAAA,UACA4F,MAAA4G,IAAA+d,EAAA7pB,gBAAA+E,GACAmjB,EAAAxX,EAAA,4BACA,IAAAA,EAAA3L,OAAA,KAGAJ,OAAAmlB,cAAAhe,IAGA,SAAAie,EAAArZ,EAAApL,GACA,MAAAA,GACAoL,EAAAmB,MAAAC,EAAAuE,UACA3F,EAAAsZ,iBAAAtZ,EAAA8B,UACKmD,EAAArQ,KAGL4iB,EAAAxX,EAAA,oCACAA,EAAAoX,SAAAxiB,EACAoL,EAAAmB,MAAAC,EAAAqE,MAIA,SAAAhU,EAAAoL,EAAAnN,GACA,IAAAiC,EAAA,GAIA,OAHAjC,EAAAmN,EAAA7N,SACA2C,EAAAkL,EAAApL,OAAA/B,IAEAiC,EAGA,SAAAkR,EAAAhG,GACA,IAAAmD,EAAAvV,KACA,GAAAA,KAAAgM,MACA,MAAAhM,KAAAgM,MAEA,GAAAuJ,EAAAe,OACA,OAAAtK,EAAAuJ,EACA,wDAEA,UAAAnD,EACA,OAAArB,EAAAwE,GAEA,kBAAAnD,IACAA,IAAAI,YAEA,IAAAvN,EAAA,EACAkF,EAAA,GACA,SAIA,GAHAA,EAAAnD,EAAAoL,EAAAnN,KACAsQ,EAAApL,KAEAA,EACA,MAaA,OAVAoL,EAAA6B,gBACA7B,EAAA8B,WACA,OAAAlN,GACAoL,EAAA3D,OACA2D,EAAA+B,OAAA,GAEA/B,EAAA+B,UAIA/B,EAAAmB,OACA,KAAAC,EAAAC,MAEA,GADArB,EAAAmB,MAAAC,EAAAoE,iBACA,WAAA5Q,EACA,SAEAykB,EAAArZ,EAAApL,GACA,SAEA,KAAAwM,EAAAoE,iBACA6T,EAAArZ,EAAApL,GACA,SAEA,KAAAwM,EAAAqE,KACA,GAAAzF,EAAAiB,UAAAjB,EAAAgB,WAAA,CACA,IAAAuY,EAAA7pB,EAAA,EACA,MAAAkF,GAAA,MAAAA,GAAA,MAAAA,EACAA,EAAAnD,EAAAoL,EAAAnN,KACAkF,GAAAoL,EAAA6B,gBACA7B,EAAA8B,WACA,OAAAlN,GACAoL,EAAA3D,OACA2D,EAAA+B,OAAA,GAEA/B,EAAA+B,UAIA/B,EAAAoX,UAAAva,EAAA2c,UAAAD,EAAA7pB,EAAA,GAEA,MAAAkF,GAAAoL,EAAAiB,SAAAjB,EAAAgB,aAAAhB,EAAAC,QAIAgF,EAAArQ,IAAAoL,EAAAiB,UAAAjB,EAAAgB,YACAwW,EAAAxX,EAAA,mCAEA,MAAApL,EACAoL,EAAAmB,MAAAC,EAAAsE,YAEA1F,EAAAoX,UAAAxiB,IATAoL,EAAAmB,MAAAC,EAAAuE,UACA3F,EAAAsZ,iBAAAtZ,EAAA8B,UAWA,SAEA,KAAAV,EAAAmG,OAEA,MAAA3S,EACAoL,EAAAmB,MAAAC,EAAAoG,cAEAxH,EAAAuC,QAAA3N,EAEA,SAEA,KAAAwM,EAAAoG,cACA,MAAA5S,EACAoL,EAAAmB,MAAAC,EAAAiG,WAEArH,EAAAuC,QAAA,IAAA3N,EACAoL,EAAAmB,MAAAC,EAAAmG,QAEA,SAEA,KAAAnG,EAAAuE,UAEA,SAAA/Q,EACAoL,EAAAmB,MAAAC,EAAAwE,UACA5F,EAAAyZ,SAAA,QACW,GAAAxU,EAAArQ,SAEA,GAAAwQ,EAAAP,EAAAjQ,GACXoL,EAAAmB,MAAAC,EAAAsF,SACA1G,EAAA2X,QAAA/iB,OACW,SAAAA,EACXoL,EAAAmB,MAAAC,EAAAiG,UACArH,EAAA2X,QAAA,QACW,SAAA/iB,EACXoL,EAAAmB,MAAAC,EAAAmF,UACAvG,EAAA0Z,aAAA1Z,EAAA2Z,aAAA,OACW,CAGX,GAFAnC,EAAAxX,EAAA,eAEAA,EAAAsZ,iBAAA,EAAAtZ,EAAA8B,SAAA,CACA,IAAA8X,EAAA5Z,EAAA8B,SAAA9B,EAAAsZ,iBACA1kB,EAAA,IAAA2F,MAAAqf,GAAA/qB,KAAA,KAAA+F,EAEAoL,EAAAoX,UAAA,IAAAxiB,EACAoL,EAAAmB,MAAAC,EAAAqE,KAEA,SAEA,KAAArE,EAAAwE,WACA5F,EAAAyZ,SAAA7kB,GAAAilB,gBAAArV,GACAnC,EAAArC,EAAA,eACAA,EAAAmB,MAAAC,EAAAoD,MACAxE,EAAAyZ,SAAA,GACAzZ,EAAAsC,MAAA,IACWtC,EAAAyZ,SAAA7kB,IAAA,MACXoL,EAAAmB,MAAAC,EAAA8E,QACAlG,EAAA8Z,QAAA,GACA9Z,EAAAyZ,SAAA,KACWzZ,EAAAyZ,SAAA7kB,GAAAilB,gBAAApV,GACXzE,EAAAmB,MAAAC,EAAAqD,SACAzE,EAAA+Z,SAAA/Z,EAAAiB,UACAuW,EAAAxX,EACA,+CAEAA,EAAA+Z,QAAA,GACA/Z,EAAAyZ,SAAA,IACW,MAAA7kB,GACXyN,EAAArC,EAAA,oBAAAA,EAAAyZ,UACAzZ,EAAAyZ,SAAA,GACAzZ,EAAAmB,MAAAC,EAAAqE,MACWP,EAAAtQ,IACXoL,EAAAmB,MAAAC,EAAAyE,iBACA7F,EAAAyZ,UAAA7kB,GAEAoL,EAAAyZ,UAAA7kB,EAEA,SAEA,KAAAwM,EAAAyE,iBACAjR,IAAAoL,EAAA/G,IACA+G,EAAAmB,MAAAC,EAAAwE,UACA5F,EAAA/G,EAAA,IAEA+G,EAAAyZ,UAAA7kB,EACA,SAEA,KAAAwM,EAAAqD,QACA,MAAA7P,GACAoL,EAAAmB,MAAAC,EAAAqE,KACApD,EAAArC,EAAA,YAAAA,EAAA+Z,SACA/Z,EAAA+Z,SAAA,IAEA/Z,EAAA+Z,SAAAnlB,EACA,MAAAA,EACAoL,EAAAmB,MAAAC,EAAA2E,YACab,EAAAtQ,KACboL,EAAAmB,MAAAC,EAAA0E,eACA9F,EAAA/G,EAAArE,IAGA,SAEA,KAAAwM,EAAA0E,eACA9F,EAAA+Z,SAAAnlB,EACAA,IAAAoL,EAAA/G,IACA+G,EAAA/G,EAAA,GACA+G,EAAAmB,MAAAC,EAAAqD,SAEA,SAEA,KAAArD,EAAA2E,YACA/F,EAAA+Z,SAAAnlB,EACA,MAAAA,EACAoL,EAAAmB,MAAAC,EAAAqD,QACWS,EAAAtQ,KACXoL,EAAAmB,MAAAC,EAAA4E,mBACAhG,EAAA/G,EAAArE,GAEA,SAEA,KAAAwM,EAAA4E,mBACAhG,EAAA+Z,SAAAnlB,EACAA,IAAAoL,EAAA/G,IACA+G,EAAAmB,MAAAC,EAAA2E,YACA/F,EAAA/G,EAAA,IAEA,SAEA,KAAAmI,EAAA8E,QACA,MAAAtR,EACAoL,EAAAmB,MAAAC,EAAA+E,eAEAnG,EAAA8Z,SAAAllB,EAEA,SAEA,KAAAwM,EAAA+E,eACA,MAAAvR,GACAoL,EAAAmB,MAAAC,EAAAgF,cACApG,EAAA8Z,QAAAzC,EAAArX,EAAAE,IAAAF,EAAA8Z,SACA9Z,EAAA8Z,SACAzX,EAAArC,EAAA,YAAAA,EAAA8Z,SAEA9Z,EAAA8Z,QAAA,KAEA9Z,EAAA8Z,SAAA,IAAAllB,EACAoL,EAAAmB,MAAAC,EAAA8E,SAEA,SAEA,KAAA9E,EAAAgF,cACA,MAAAxR,GACA4iB,EAAAxX,EAAA,qBAGAA,EAAA8Z,SAAA,KAAAllB,EACAoL,EAAAmB,MAAAC,EAAA8E,SAEAlG,EAAAmB,MAAAC,EAAAqE,KAEA,SAEA,KAAArE,EAAAoD,MACA,MAAA5P,EACAoL,EAAAmB,MAAAC,EAAAiF,aAEArG,EAAAsC,OAAA1N,EAEA,SAEA,KAAAwM,EAAAiF,aACA,MAAAzR,EACAoL,EAAAmB,MAAAC,EAAAkF,gBAEAtG,EAAAsC,OAAA,IAAA1N,EACAoL,EAAAmB,MAAAC,EAAAoD,OAEA,SAEA,KAAApD,EAAAkF,eACA,MAAA1R,GACAoL,EAAAsC,OACAD,EAAArC,EAAA,UAAAA,EAAAsC,OAEAD,EAAArC,EAAA,gBACAA,EAAAsC,MAAA,GACAtC,EAAAmB,MAAAC,EAAAqE,MACW,MAAA7Q,EACXoL,EAAAsC,OAAA,KAEAtC,EAAAsC,OAAA,KAAA1N,EACAoL,EAAAmB,MAAAC,EAAAoD,OAEA,SAEA,KAAApD,EAAAmF,UACA,MAAA3R,EACAoL,EAAAmB,MAAAC,EAAAqF,iBACWxB,EAAArQ,GACXoL,EAAAmB,MAAAC,EAAAoF,eAEAxG,EAAA0Z,cAAA9kB,EAEA,SAEA,KAAAwM,EAAAoF,eACA,IAAAxG,EAAA2Z,cAAA1U,EAAArQ,GACA,SACW,MAAAA,EACXoL,EAAAmB,MAAAC,EAAAqF,iBAEAzG,EAAA2Z,cAAA/kB,EAEA,SAEA,KAAAwM,EAAAqF,iBACA,MAAA7R,GACAyN,EAAArC,EAAA,2BACA6X,KAAA7X,EAAA0Z,aACAM,KAAAha,EAAA2Z,eAEA3Z,EAAA0Z,aAAA1Z,EAAA2Z,aAAA,GACA3Z,EAAAmB,MAAAC,EAAAqE,OAEAzF,EAAA2Z,cAAA,IAAA/kB,EACAoL,EAAAmB,MAAAC,EAAAoF,gBAEA,SAEA,KAAApF,EAAAsF,SACAtB,EAAAN,EAAAlQ,GACAoL,EAAA2X,SAAA/iB,GAEA8iB,EAAA1X,GACA,MAAApL,EACA4jB,EAAAxY,GACa,MAAApL,EACboL,EAAAmB,MAAAC,EAAAuF,gBAEA1B,EAAArQ,IACA4iB,EAAAxX,EAAA,iCAEAA,EAAAmB,MAAAC,EAAAwF,SAGA,SAEA,KAAAxF,EAAAuF,eACA,MAAA/R,GACA4jB,EAAAxY,GAAA,GACA8Y,EAAA9Y,KAEAwX,EAAAxX,EAAA,kDACAA,EAAAmB,MAAAC,EAAAwF,QAEA,SAEA,KAAAxF,EAAAwF,OAEA,GAAA3B,EAAArQ,GACA,SACW,MAAAA,EACX4jB,EAAAxY,GACW,MAAApL,EACXoL,EAAAmB,MAAAC,EAAAuF,eACWvB,EAAAP,EAAAjQ,IACXoL,EAAAqY,WAAAzjB,EACAoL,EAAAsY,YAAA,GACAtY,EAAAmB,MAAAC,EAAAyF,aAEA2Q,EAAAxX,EAAA,0BAEA,SAEA,KAAAoB,EAAAyF,YACA,MAAAjS,EACAoL,EAAAmB,MAAAC,EAAA2F,aACW,MAAAnS,GACX4iB,EAAAxX,EAAA,2BACAA,EAAAsY,YAAAtY,EAAAqY,WACAD,EAAApY,GACAwY,EAAAxY,IACWiF,EAAArQ,GACXoL,EAAAmB,MAAAC,EAAA0F,sBACW1B,EAAAN,EAAAlQ,GACXoL,EAAAqY,YAAAzjB,EAEA4iB,EAAAxX,EAAA,0BAEA,SAEA,KAAAoB,EAAA0F,sBACA,SAAAlS,EACAoL,EAAAmB,MAAAC,EAAA2F,iBACW,IAAA9B,EAAArQ,GACX,SAEA4iB,EAAAxX,EAAA,2BACAA,EAAA1D,IAAAwb,WAAA9X,EAAAqY,YAAA,GACArY,EAAAsY,YAAA,GACAjW,EAAArC,EAAA,eACA6X,KAAA7X,EAAAqY,WACAhhB,MAAA,KAEA2I,EAAAqY,WAAA,GACA,MAAAzjB,EACA4jB,EAAAxY,GACaoF,EAAAP,EAAAjQ,IACboL,EAAAqY,WAAAzjB,EACAoL,EAAAmB,MAAAC,EAAAyF,cAEA2Q,EAAAxX,EAAA,0BACAA,EAAAmB,MAAAC,EAAAwF,QAGA,SAEA,KAAAxF,EAAA2F,aACA,GAAA9B,EAAArQ,GACA,SACWsQ,EAAAtQ,IACXoL,EAAA/G,EAAArE,EACAoL,EAAAmB,MAAAC,EAAA4F,sBAEAwQ,EAAAxX,EAAA,4BACAA,EAAAmB,MAAAC,EAAA8F,sBACAlH,EAAAsY,YAAA1jB,GAEA,SAEA,KAAAwM,EAAA4F,oBACA,GAAApS,IAAAoL,EAAA/G,EAAA,CACA,MAAArE,EACAoL,EAAAmB,MAAAC,EAAA+F,sBAEAnH,EAAAsY,aAAA1jB,EAEA,SAEAwjB,EAAApY,GACAA,EAAA/G,EAAA,GACA+G,EAAAmB,MAAAC,EAAA6F,oBACA,SAEA,KAAA7F,EAAA6F,oBACAhC,EAAArQ,GACAoL,EAAAmB,MAAAC,EAAAwF,OACW,MAAAhS,EACX4jB,EAAAxY,GACW,MAAApL,EACXoL,EAAAmB,MAAAC,EAAAuF,eACWvB,EAAAP,EAAAjQ,IACX4iB,EAAAxX,EAAA,oCACAA,EAAAqY,WAAAzjB,EACAoL,EAAAsY,YAAA,GACAtY,EAAAmB,MAAAC,EAAAyF,aAEA2Q,EAAAxX,EAAA,0BAEA,SAEA,KAAAoB,EAAA8F,sBACA,IAAA/B,EAAAvQ,GAAA,CACA,MAAAA,EACAoL,EAAAmB,MAAAC,EAAAgG,sBAEApH,EAAAsY,aAAA1jB,EAEA,SAEAwjB,EAAApY,GACA,MAAApL,EACA4jB,EAAAxY,GAEAA,EAAAmB,MAAAC,EAAAwF,OAEA,SAEA,KAAAxF,EAAAiG,UACA,GAAArH,EAAA2X,QAaW,MAAA/iB,EACXkkB,EAAA9Y,GACWoF,EAAAN,EAAAlQ,GACXoL,EAAA2X,SAAA/iB,EACWoL,EAAAuC,QACXvC,EAAAuC,QAAA,KAAAvC,EAAA2X,QACA3X,EAAA2X,QAAA,GACA3X,EAAAmB,MAAAC,EAAAmG,SAEAtC,EAAArQ,IACA4iB,EAAAxX,EAAA,kCAEAA,EAAAmB,MAAAC,EAAAkG,yBAzBA,CACA,GAAArC,EAAArQ,GACA,SACa0Q,EAAAT,EAAAjQ,GACboL,EAAAuC,QACAvC,EAAAuC,QAAA,KAAA3N,EACAoL,EAAAmB,MAAAC,EAAAmG,QAEAiQ,EAAAxX,EAAA,mCAGAA,EAAA2X,QAAA/iB,EAgBA,SAEA,KAAAwM,EAAAkG,oBACA,GAAArC,EAAArQ,GACA,SAEA,MAAAA,EACAkkB,EAAA9Y,GAEAwX,EAAAxX,EAAA,qCAEA,SAEA,KAAAoB,EAAAsE,YACA,KAAAtE,EAAA+F,sBACA,KAAA/F,EAAAgG,sBACA,IAAA6S,EACAC,EACA,OAAAla,EAAAmB,OACA,KAAAC,EAAAsE,YACAuU,EAAA7Y,EAAAqE,KACAyU,EAAA,WACA,MAEA,KAAA9Y,EAAA+F,sBACA8S,EAAA7Y,EAAA4F,oBACAkT,EAAA,cACA,MAEA,KAAA9Y,EAAAgG,sBACA6S,EAAA7Y,EAAA8F,sBACAgT,EAAA,cACA,MAGA,MAAAtlB,GACAoL,EAAAka,IAAAjB,EAAAjZ,GACAA,EAAA3L,OAAA,GACA2L,EAAAmB,MAAA8Y,GACW7U,EAAApF,EAAA3L,OAAArF,OAAAgW,EAAAD,EAAAnQ,GACXoL,EAAA3L,QAAAO,GAEA4iB,EAAAxX,EAAA,oCACAA,EAAAka,IAAA,IAAAla,EAAA3L,OAAAO,EACAoL,EAAA3L,OAAA,GACA2L,EAAAmB,MAAA8Y,GAGA,SAEA,QACA,UAAAtf,MAAAqF,EAAA,kBAAAA,EAAAmB,QAOA,OAHAnB,EAAA8B,UAAA9B,EAAAU,qBACAsB,EAAAhC,GAEAA;sDAt3BAoB,EAAArB,EAAAwF,MA23BAtR,OAAAmlB,eACA,WACA,IAAA5iB,EAAAvC,OAAAC,aACAoC,EAAAC,KAAAD,MACA8iB,EAAA,WACA,IAEAe,EACAC,EAHAC,EAAA,MACAC,EAAA,GAGAhiB,GAAA,EACAtJ,EAAAuV,UAAAvV,OACA,IAAAA,EACA,SAEA,IAAA2C,EAAA,GACA,QAAA2G,EAAAtJ,EAAA,CACA,IAAA2I,EAAA4iB,OAAAhW,UAAAjM,IACA,IACAkiB,SAAA7iB,IACAA,EAAA,GACAA,EAAA,SACArB,EAAAqB,OAEA,MAAAhB,WAAA,uBAAAgB,GAEAA,GAAA,MACA2iB,EAAA3pB,KAAAgH,IAGAA,GAAA,MACAwiB,EAAA,OAAAxiB,GAAA,IACAyiB,EAAAziB,EAAA,WACA2iB,EAAA3pB,KAAAwpB,EAAAC,KAEA9hB,EAAA,IAAAtJ,GAAAsrB,EAAAtrB,OAAAqrB,KACA1oB,GAAA6E,EAAA4M,MAAA,KAAAkX,GACAA,EAAAtrB,OAAA,GAGA,OAAA2C,GAGAL,OAAAsS,eACAtS,OAAAsS,eAAA3P,OAAA,iBACAoD,MAAA+hB,EACApV,cAAA,EACAV,UAAA,IAGArP,OAAAmlB,gBAhDA,IAx+CC,CA4hDgDhvB,uEC1hDjDD,EAAAC,QAAA,CACA4D,SAAA,SAAAysB,GACA,2BAEA5sB,SAAA,SAAA4sB,GACA,kCAAAA,GAEA3nB,OAAA,SAAA2nB,GACA,cAAAA,GAEA7nB,kBAAA,SAAA6nB,GACA,aAAAA,6BCbA,SAAA3a,GAwBA,SAAA4a,EAAAD,GACA,OAAAlgB,MAAAmgB,QACAngB,MAAAmgB,QAAAD,GAEA,mBAAAE,EAAAF,GAIA,SAAAG,EAAAH,GACA,yBAAAA,EAIA,SAAA3nB,EAAA2nB,GACA,cAAAA,EAIA,SAAA7nB,EAAA6nB,GACA,aAAAA,EAIA,SAAAI,EAAAJ,GACA,wBAAAA,EAIA,SAAAzsB,EAAAysB,GACA,wBAAAA,EAIA,SAAAK,EAAAL,GACA,wBAAAA,EAIA,SAAAM,EAAAN,GACA,gBAAAA,EAIA,SAAAO,EAAAC,GACA,0BAAAN,EAAAM,GAIA,SAAAptB,EAAA4sB,GACA,wBAAAA,GAAA,OAAAA,EAIA,SAAAS,EAAAC,GACA,wBAAAR,EAAAQ,GAIA,SAAAC,EAAAznB,GACA,yBAAAgnB,EAAAhnB,iBAAAgH,MAIA,SAAA0gB,EAAAZ,GACA,0BAAAA,EAIA,SAAAa,EAAAb,GACA,cAAAA,GACA,mBAAAA,GACA,kBAAAA,GACA,kBAAAA,GACA,kBAAAA,GACA,qBAAAA,EAMA,SAAAE,EAAAjY,GACA,OAAApR,OAAArD,UAAAgP,SAAA/O,KAAAwU,GA3EAtY,EAAAswB,UAKAtwB,EAAAwwB,YAKAxwB,EAAA0I,SAKA1I,EAAAwI,oBAKAxI,EAAAywB,WAKAzwB,EAAA4D,WAKA5D,EAAA0wB,WAKA1wB,EAAA2wB,cAKA3wB,EAAA4wB,WAKA5wB,EAAAyD,WAKAzD,EAAA8wB,SAKA9wB,EAAAgxB,UAKAhxB,EAAAixB,aAUAjxB,EAAAkxB,cAEAlxB,EAAA8Z,SAAApE,EAAAoE,6DC9FA,MAAAqX,EAAA,QACAC,EAAA,sDACAC,EAAA,CACAC,GAAA,EACArqB,EAAA,IACA2H,EAAA,IACAjI,EAAA,MAEA3G,EAAAuxB,SAAA,CAAAC,IACA,qBAAAA,EAAiC,OAAAA,EACjC,GAAAL,EAAAjiB,KAAAsiB,GAAgC,OAAAA,EAChC,MAAAC,EAAAL,EAAAtsB,KAAA0sB,GACA,GAAAC,EACA,QAAAA,EAAA,OAAAJ,EAAA1qB,KACA8qB,EAAA,OAAAJ,EAAAziB,IACA6iB,EAAA,GAAAJ,EAAApqB,KACAwqB,EAAA,OACG,CACH,IAAAC,EAAA,EACA,MAAAC,EAAA,qBACA,IAAA3d,EACA,aAAAA,EAAA2d,EAAA7sB,KAAA0sB,IACAE,IAAA1d,EAAA,GAAAqd,EAAArd,EAAA,IAEA,OAAA0d,KAUA1xB,EAAA4xB,YAAA,CAAAJ,IACA,IAAAE,EAAA,EACA,MAAAC,EAAA,0BACA,IAAA3d,EACA,aAAAA,EAAA2d,EAAA7sB,KAAA0sB,IACAE,IAAA1d,EAAA,GAAAqd,EAAArd,EAAA,GAAA9O,eAEA,OAAAwsB,0BCjDA,oBAAAxqB,OAAAiQ,OAEApX,EAAAC,QAAA,SAAA6xB,EAAAC,GACAD,EAAAE,OAAAD,EACAD,EAAAhuB,UAAAqD,OAAAiQ,OAAA2a,EAAAjuB,UAAA,CACAgW,YAAA,CACA5M,MAAA4kB,EACAlY,YAAA,EACAT,UAAA,EACAU,cAAA,MAMA7Z,EAAAC,QAAA,SAAA6xB,EAAAC,GACAD,EAAAE,OAAAD,EACA,IAAAE,EAAA,aACAA,EAAAnuB,UAAAiuB,EAAAjuB,UACAguB,EAAAhuB,UAAA,IAAAmuB,EACAH,EAAAhuB,UAAAgW,YAAAgY,2BCpBA9xB,EAAAC,QAAiBC,EAAQ,QAAQgyB,gDCIjC,IAAAC,EAAUjyB,EAAQ,QAIlB,SAAAkyB,EAAA5c,EAAAnC,GACA,IAAA4B,EAAA3U,KAEA+xB,EAAA/xB,KAAA4T,gBAAA5T,KAAA4T,eAAAoe,UACAC,EAAAjyB,KAAA8U,gBAAA9U,KAAA8U,eAAAkd,UAEA,OAAAD,GAAAE,GACAlf,EACAA,EAAAmC,IACKA,GAAAlV,KAAA8U,gBAAA9U,KAAA8U,eAAAod,cACLL,EAAAM,SAAAC,EAAApyB,KAAAkV,GAEAlV,OAMAA,KAAA4T,iBACA5T,KAAA4T,eAAAoe,WAAA,GAIAhyB,KAAA8U,iBACA9U,KAAA8U,eAAAkd,WAAA,GAGAhyB,KAAAiV,SAAAC,GAAA,cAAAA,IACAnC,GAAAmC,GACA2c,EAAAM,SAAAC,EAAAzd,EAAAO,GACAP,EAAAG,iBACAH,EAAAG,eAAAod,cAAA,IAEKnf,GACLA,EAAAmC,KAIAlV,MAGA,SAAAqyB,IACAryB,KAAA4T,iBACA5T,KAAA4T,eAAAoe,WAAA,EACAhyB,KAAA4T,eAAAC,SAAA,EACA7T,KAAA4T,eAAA0e,OAAA,EACAtyB,KAAA4T,eAAA2e,YAAA,GAGAvyB,KAAA8U,iBACA9U,KAAA8U,eAAAkd,WAAA,EACAhyB,KAAA8U,eAAAwd,OAAA,EACAtyB,KAAA8U,eAAA0d,QAAA,EACAxyB,KAAA8U,eAAA2d,UAAA,EACAzyB,KAAA8U,eAAAod,cAAA,GAIA,SAAAE,EAAAznB,EAAAuK,GACAvK,EAAAgH,KAAA,QAAAuD,GAGAxV,EAAAC,QAAA,CACAmyB,UACAO,kDCxEA,IAAAK,EAAA9yB,EAAA,QAAA+yB,EAAA/yB,EAAAuO,EAAAukB,GAAueC,EAAG,sBCA1e,IAAAC,EAAA,CACAC,MAAA,IACAC,MAAA,IACAC,QAAA,IACAC,QAAA,IACAC,OAAA,IACAC,OAAS,IACTC,OAAS,IACTC,SAAW,IACXC,SAAW,IACXC,QAAU,KAGVC,EAAA,CACAC,GAAA,KACAC,GAAA,KACAC,GAAA,OACAC,GAAA,OACAC,GAAA,OAGAC,EAAA,CACAC,IAAA,OACAC,IAAA,OACAC,IAAA,SACAC,IAAA,SACAC,IAAA,SAMA,SAAAC,KAMAA,EAAA3wB,UAAAwG,OAAA,SAAAL,GACA,OAAAA,KAAApF,OAGAoF,EAAAxF,QAAA,sBAAAyC,GACA,OAAAitB,EAAAjtB,KAHA,IAWAutB,EAAAnqB,OAAA,SAAAL,GACA,WAAAwqB,GAAAnqB,OAAAL,IAOAwqB,EAAA3wB,UAAAkG,OAAA,SAAAC,GACA,OAAAA,KAAApF,OAGAoF,EAAAxF,QAAA,qBAAwC,SAAAyC,GACxC,SAAAA,EAAAI,OAAA,IACA,IAAA6C,EAAA,MAAAjD,EAAAI,OAAA,GAAAnC,cACAiF,SAAAlD,EAAAlC,OAAA,OACAoF,SAAAlD,EAAAlC,OAAA,IAEA,OAAAqF,MAAAF,OAAA,OAAAA,EAAA,MACA,GAEAL,OAAAC,aAAAI,GAEA,OAAA+oB,EAAAhsB,QAbA,IAqBAutB,EAAAzqB,OAAA,SAAAC,GACA,WAAAwqB,GAAAzqB,OAAAC,IAOAwqB,EAAA3wB,UAAA0G,aAAA,SAAAP,GACA,IAAAA,MAAApF,OACA,SAEA,IAAA0F,EAAAN,EAAApF,OACA2C,EAAA,GACAjC,EAAA,EACA,MAAAA,EAAAgF,EAAA,CACA,IAAAE,EAAAR,EAAA7D,WAAAb,GACAkE,EAAAoqB,EAAAppB,GACAhB,GACAjC,GAAA,IAAAiC,EAAA,IACAlE,MAIAiC,GADAiD,EAAA,IAAAA,EAAA,IACA,KAAAA,EAAA,IAEAR,EAAA3C,OAAA/B,GAEAA,KAEA,OAAAiC,GAOAitB,EAAAjqB,aAAA,SAAAP,GACA,WAAAwqB,GAAAjqB,aAAAP,IAOAwqB,EAAA3wB,UAAA4G,eAAA,SAAAT,GACA,IAAAA,MAAApF,OACA,SAEA,IAAA6vB,EAAAzqB,EAAApF,OACA2C,EAAA,GACAjC,EAAA,EACA,MAAAA,EAAAmvB,EAAA,CACA,IAAAjqB,EAAAR,EAAA7D,WAAAb,GACAkF,GAAA,IACAjD,GAAAyC,EAAA1E,MAGAiC,GAAA,KAAAiD,EAAA,IACAlF,KAEA,OAAAiC,GAOAitB,EAAA/pB,eAAA,SAAAT,GACA,WAAAwqB,GAAA/pB,eAAAT,IAGAjK,EAAAC,QAAAw0B,wBC1JAz0B,EAAAC,QAAA00B,EAEA,IAAA1hB,EAAA9L,OAAArD,UAAAmP,eAEA,SAAA0hB,IAGA,IAFA,IAAAC,EAAA,GAEArvB,EAAA,EAAmBA,EAAA6U,UAAAvV,OAAsBU,IAAA,CACzC,IAAAvB,EAAAoW,UAAA7U,GAEA,QAAAyN,KAAAhP,EACAiP,EAAAlP,KAAAC,EAAAgP,KACA4hB,EAAA5hB,GAAAhP,EAAAgP,IAKA,OAAA4hB,wCCfA,SAAAC,EAAAC,EAAAC,GAAiD,KAAAD,aAAAC,GAA0C,UAAA7wB,UAAA,qCAE3F,IAAAyR,EAAazV,EAAQ,QAAayV,OAClCvV,EAAWF,EAAQ,GAEnB,SAAA80B,EAAAC,EAAAL,EAAAM,GACAD,EAAAxT,KAAAmT,EAAAM,GAGAl1B,EAAAC,QAAA,WACA,SAAAk1B,IACAN,EAAAv0B,KAAA60B,GAEA70B,KAAA80B,KAAA,KACA90B,KAAA+0B,KAAA,KACA/0B,KAAAuE,OAAA,EAqDA,OAlDAswB,EAAArxB,UAAA0C,KAAA,SAAAuB,GACA,IAAAutB,EAAA,CAAiB3hB,KAAA5L,EAAAwtB,KAAA,MACjBj1B,KAAAuE,OAAA,EAAAvE,KAAA+0B,KAAAE,KAAAD,EAAgDh1B,KAAA80B,KAAAE,EAChDh1B,KAAA+0B,KAAAC,IACAh1B,KAAAuE,QAGAswB,EAAArxB,UAAA2C,QAAA,SAAAsB,GACA,IAAAutB,EAAA,CAAiB3hB,KAAA5L,EAAAwtB,KAAAj1B,KAAA80B,MACjB,IAAA90B,KAAAuE,SAAAvE,KAAA+0B,KAAAC,GACAh1B,KAAA80B,KAAAE,IACAh1B,KAAAuE,QAGAswB,EAAArxB,UAAAmE,MAAA,WACA,OAAA3H,KAAAuE,OAAA,CACA,IAAA2wB,EAAAl1B,KAAA80B,KAAAzhB,KAGA,OAFA,IAAArT,KAAAuE,OAAAvE,KAAA80B,KAAA90B,KAAA+0B,KAAA,KAAwD/0B,KAAA80B,KAAA90B,KAAA80B,KAAAG,OACxDj1B,KAAAuE,OACA2wB,IAGAL,EAAArxB,UAAA2xB,MAAA,WACAn1B,KAAA80B,KAAA90B,KAAA+0B,KAAA,KACA/0B,KAAAuE,OAAA,GAGAswB,EAAArxB,UAAAY,KAAA,SAAAwC,GACA,OAAA5G,KAAAuE,OAAA,SACA,IAAA8B,EAAArG,KAAA80B,KACAI,EAAA,GAAA7uB,EAAAgN,KACA,MAAAhN,IAAA4uB,KACAC,GAAAtuB,EAAAP,EAAAgN,KACK,OAAA6hB,GAGLL,EAAArxB,UAAA9B,OAAA,SAAAyM,GACA,OAAAnO,KAAAuE,OAAA,OAAA8Q,EAAA+f,MAAA,GACA,OAAAp1B,KAAAuE,OAAA,OAAAvE,KAAA80B,KAAAzhB,KACA,IAAA6hB,EAAA7f,EAAAggB,YAAAlnB,IAAA,GACA9H,EAAArG,KAAA80B,KACA7vB,EAAA,EACA,MAAAoB,EACAquB,EAAAruB,EAAAgN,KAAA6hB,EAAAjwB,GACAA,GAAAoB,EAAAgN,KAAA9O,OACA8B,IAAA4uB,KAEA,OAAAC,GAGAL,EA3DA,GA8DA/0B,KAAAw1B,SAAAx1B,EAAAw1B,QAAAC,SACA71B,EAAAC,QAAA6D,UAAA1D,EAAAw1B,QAAAC,QAAA,WACA,IAAAjyB,EAAAxD,EAAAw1B,QAAA,CAA4B/wB,OAAAvE,KAAAuE,SAC5B,OAAAvE,KAAAwZ,YAAA4T,KAAA,IAAA9pB,0BC5EA5D,EAAAC,QAAA,SAAAD,GAoBA,OAnBAA,EAAA81B,kBACA91B,EAAA+1B,UAAA,aACA/1B,EAAAg2B,MAAA,GAEAh2B,EAAAi2B,WAAAj2B,EAAAi2B,SAAA,IACA9uB,OAAAsS,eAAAzZ,EAAA,UACA4Z,YAAA,EACAtG,IAAA,WACA,OAAAtT,EAAA+F,KAGAoB,OAAAsS,eAAAzZ,EAAA,MACA4Z,YAAA,EACAtG,IAAA,WACA,OAAAtT,EAAAuF,KAGAvF,EAAA81B,gBAAA,GAEA91B,2BCpBA,MAAAk2B,EAAiBh2B,EAAQ,QACzBqD,EAAiBrD,EAAQ,QACzBi2B,EAAiBj2B,EAAQ,QAIzBk2B,EAAA,CACAC,IAAA,EACAC,OAAA,EACAC,IAAA,EACAC,KAAA,EACAC,KAAA,GAEAC,EAAA,CACAC,iBAAA,EACAC,gBAAA,EACAC,IAAA,EACAC,IAAA,EACAC,QAAA,GAWA92B,EAAA+2B,YAAA,EAAAtnB,EAAAunB,KACA,MAAAC,EAAAxnB,EAAAynB,WAAA/sB,SAAAsF,EAAAynB,WAAAzxB,MAAA,YACA0xB,EAAAH,EAAAE,WAAA/sB,SAAA6sB,EAAAE,WAAAzxB,MAAA,YACA2xB,EAAA,MAAAH,MAAAxnB,EAAA4nB,aACAC,EAAA,MAAAH,MAAAH,EAAAK,aAEAE,EAAA/sB,IACA,GAAAA,EAAAgtB,QAAA,CACA,IAAAvwB,EAAAuD,EAAAgtB,QAAAlzB,MAAA,KACA,OAAAgO,WAAArL,IAAArC,OAAA,OAEA,UAIA6yB,EAAAjtB,IACA,MAAAktB,EAAAltB,EAAA6sB,cAAA,EACAM,EAAAxB,EAAA3rB,EAAAotB,gBAAA,EACA,OAAAF,EAAAC,EAAA,IAGA,GAAAP,IAAAE,EAAA,CACA,GAAAL,IAAAE,EAAA,CACA,IAAAU,EAAAN,EAAA9nB,GACAqoB,EAAAP,EAAAP,GACA,GAAAa,IAAAC,EAAA,CACA,IAAAC,EAAAN,EAAAhoB,GACAuoB,EAAAP,EAAAT,GACA,GAAAe,IAAAC,EAAA,CACA,IAAAC,EAAAxB,EAAAhnB,EAAAiD,WAAA,EACAwlB,EAAAzB,EAAAO,EAAAtkB,WAAA,EACA,OAAAwlB,EAAAD,EAEA,OAAAD,EAAAD,EAGA,OAAAD,EAAAD,EAGA,OAAAV,EAAAF,EAGA,OAAAK,EAAAF,IAYAp3B,EAAAm4B,aAAA,EAAAC,EAAA9jB,KACA,qBAAAA,EAAA9S,OACA,OAAA8S,EAAA9S,OAGA,GAAA8S,EAAAwE,SACAsf,EAAAp4B,EAAAq4B,cAAAD,EAAA9jB,EAAAwE,QACA,IAAAsf,EAAAxzB,QACA,OAAA2L,MAAA,uCAIA,IAAA/O,EACA,MAAA82B,EAAAhkB,EAAAgkB,SAAA,UACAf,EAAAgB,IACA,IAAAtxB,EAAAsxB,EAAAf,QAAAlzB,MAAA,KACA,OAAAgO,WAAArL,IAAArC,OAAA,QAEA,OAAA0zB,GACA,cACA92B,EAAA42B,EAAA,GACA,MAEA,aACA52B,EAAA42B,IAAAxzB,OAAA,GACA,MAEA,mBACAwzB,EAAAp4B,EAAAq4B,cAAAD,EAAA,SACA52B,EAAA,KACA,QAAA+2B,KAAAH,IACA52B,GACA+2B,EAAAlB,aAAA71B,EAAA61B,cACAkB,EAAAlB,eAAA71B,EAAA61B,cAAA71B,EAAAkR,WAAA6lB,EAAA7lB,YACAlR,EAAA+2B,GAEA,MAEA,kBACAH,EAAAp4B,EAAAq4B,cAAAD,EAAA,SACA52B,EAAA,KACA,QAAA+2B,KAAAH,IACA52B,GACA+2B,EAAAlB,aAAA71B,EAAA61B,cACAkB,EAAAlB,eAAA71B,EAAA61B,cAAA71B,EAAAkR,WAAA6lB,EAAA7lB,YACAlR,EAAA+2B,GAEA,MAEA,mBACAH,EAAAp4B,EAAAq4B,cAAAD,EAAA,SACA52B,EAAA,KACA,QAAA+2B,KAAAH,IACA52B,GACA+1B,EAAAgB,GAAAhB,EAAA/1B,IACA+1B,EAAAgB,KAAAhB,EAAA/1B,MAAAo2B,gBAAAW,EAAAX,iBACAp2B,EAAA+2B,GAEA,MAEA,kBACAH,EAAAp4B,EAAAq4B,cAAAD,EAAA,SACA52B,EAAA,KACA,QAAA+2B,KAAAH,IACA52B,GACA+1B,EAAAgB,GAAAhB,EAAA/1B,IACA+1B,EAAAgB,KAAAhB,EAAA/1B,MAAAo2B,gBAAAW,EAAAX,iBACAp2B,EAAA+2B,GAEA,MAEA,SACA,IAAAC,EAAAC,IACA,OAAAL,EAAAM,KAAAl3B,KAAAi3B,OAAA,GAAAA,IAEAtoB,MAAAmgB,QAAAgI,GACAA,EAAAI,KAAA7pB,GAAArN,EAAAg3B,EAAA3pB,IAEArN,EAAAg3B,EAAAF,IAMA,OAAA92B,GACA+O,MAAA,yBAAA+nB,KAWAt4B,EAAAq4B,cAAA,EAAAD,EAAAtf,KACA,IAAApM,EACA,OAAAoM,GACA,oBACApM,EAAA,CAAAlL,KAAAg2B,SAAAh2B,EAAA61B,cACA,MAEA,YACA3qB,EAAA,CAAAlL,KAAAg2B,SACA,MAEA,gBACA9qB,EAAA,CAAAlL,KAAAg2B,UAAAh2B,EAAA61B,cACA,MAEA,YACA3qB,EAAA,CAAAlL,KAAA61B,cACA,MAEA,gBACA3qB,EAAA,CAAAlL,MAAAg2B,SAAAh2B,EAAA61B,cACA,MAEA,QACA,uBAAAve,EAGA,MAAA7U,2BAAyC6U,uBAFzCpM,EAAAoM,EAKA,OAAAsf,EAAAtf,OAAApM,KAWA,MAAAvI,EAAA,CAAAw0B,EAAAC,KACA,OAAAA,aAAAC,OACAF,EAAA93B,OAAA+3B,GAAAD,EAAAx0B,QAAAy0B,IAYA54B,EAAA84B,QAAA,EAAAH,EAAAI,EAAAC,KACA,IAAAC,EAAA90B,EAAAw0B,EAAAI,GACA,WAAAE,EAAmB,IACnBN,IAAAlzB,MAAAwzB,EAAAF,EAAAn0B,QACAq0B,EAAA90B,EAAAw0B,EAAAK,IACA,IAAAC,EAAmB,IACnBN,IAAAlzB,MAAA,EAAAwzB,GACAN,MAmBA,MAAAO,EAAA,IAAAC,IAAA,CACA,cACA,kBACA,gBACA,oBACA,uBAEAC,EAAA,IAAAD,IAAA,CACA,WACA,cACA,oBAEAn5B,EAAAq5B,cAAA,CAAAC,IACA,MAAAC,EAAAj2B,EAAApC,MAAAo4B,GAAA,GACA,IAAAE,EAAAD,EAAAz4B,MAAAgH,EACA,GAAAsxB,EAAAK,IAAAF,EAAA54B,YAAA64B,EAAA,CACA,MAAAzD,EAAAwD,EAAAx4B,SAAAuD,MAAA,KACAk1B,EAAAzD,IAAAnxB,OAAA,QACG,GAAA20B,EAAA54B,WAAAu4B,EAAAO,IAAAF,EAAA54B,UACH,OAAA4P,MAAA,wBAEA,OAAAipB,GAGAA,IAAApK,UAAA,MACApvB,EAAA05B,WAAAF,GAIAA,EAHAv1B,uBAAkCu1B,yCACjBG,EAAA9mB,gBALjBtC,MAAA,sBAAA+oB,KAkBAt5B,EAAA45B,WAAA,CAAA5vB,IACA,OAAAhK,EAAA05B,WAAA1vB,GACAA,EAEAhK,EAAAq5B,cAAArvB,KAWA,MAAA2vB,EAAA,sBACA35B,EAAA05B,WAAA,CAAAF,IACA,OAAAG,EAAAzqB,KAAAsqB,KAUAx5B,EAAA65B,YAAA,CAAAjtB,IACA,QAAA5M,EAAAq5B,cAAAzsB,aAAA2D,SAQAvQ,EAAA85B,aAAA,CAAAC,IACA,IAAA3B,EAAA,GAaA,OAZA2B,EAAAC,6BACA5B,IACAr2B,OAAAg4B,EAAAC,2BAAA11B,MAAA,OAEAy1B,EAAAE,gBACA7B,IAAAr2B,OAAAg4B,EAAAE,cAAA31B,MAAA,OAGA8zB,IAAA5rB,IAAAhL,GAAAy0B,EAAA/0B,MAAAM,WACAu4B,EAAAC,kCACAD,EAAAE,cAEA7B,IAOAp4B,EAAAk6B,cAAA,CAAA14B,IACA,MAAA24B,EAAAjE,EAAA10B,EAAAi3B,MACA,QAAA1lB,KAAAonB,EACA34B,EAAAuR,GAAAonB,EAAApnB,GAGAvR,EAAA44B,KAAA,gCAAAlrB,KAAA1N,EAAA8B,KACA9B,EAAA64B,MAAA,uCAAAnrB,KAAA1N,EAAA8B,KACA9B,EAAA84B,UAAA,qBAAAprB,KAAA1N,EAAA8B,OAUAtD,EAAAu6B,UAAA,CAAAC,IACA,OAAAA,EACAh2B,QAAA,WACAA,QAAA,iCACAA,QAAA,uCACAA,QAAA,cACAG,SAQA3E,EAAAy6B,SAAA,EAAAC,EAAA/nB,KACA,IAAAgoB,EAAA,EACAC,GAAA,EACAC,EAAA,GACA,MAAAzqB,EAAAsqB,EAAA91B,OAEAk2B,EAAA,CAAA5sB,EAAAqH,EAAAhO,KACA,IAAAqzB,EAAA,CACA,GAAArlB,EAGA,OAFAqlB,GAAA,OACAjoB,EAAA4C,GAGAslB,EAAA3sB,GAAA3G,IACAozB,IAAAvqB,GACAuC,EAAA,KAAAkoB,KAIAzqB,EAAA,EACAsqB,EAAA5nB,QAAA,CAAAylB,EAAAjzB,KAA6BizB,EAAAuC,EAAAvmB,KAAA,KAAAjP,MAE7BqN,EAAA,KAAAkoB,0CChYA96B,EAAAC,QAAA+6B,EAEA,IAAAznB,EAAgBrT,EAAQ,QAGxBE,EAAWF,EAAQ,QAMnB,SAAA86B,EAAAzmB,GACA,KAAAjU,gBAAA06B,GAAA,WAAAA,EAAAzmB,GAEAhB,EAAAxP,KAAAzD,KAAAiU,GARAnU,EAAAiV,SAAgBnV,EAAQ,QAGxBE,EAAAiV,SAAA2lB,EAAAznB,GAQAynB,EAAAl3B,UAAA+Q,WAAA,SAAAnC,EAAAC,EAAAU,GACAA,EAAA,KAAAX,4BC7CA,MAAAuoB,EAAoB/6B,EAAQ,QAC5BoD,EAAoBpD,EAAQ,QAC5B0V,EAAoB1V,EAAQ,QAC5BkT,EAAoBlT,EAAQ,QAC5BE,EAAoBF,EAAQ,QAC5Bg7B,EAAoBh7B,EAAQ,QAC5Bi7B,EAAoBj7B,EAAQ,QAC5Bi2B,EAAoBj2B,EAAQ,QAG5Bk7B,EAAA,mCACAC,EAAA,iCACAC,EAAA,oCACAC,EAAA,kBACAC,EAAA,kBACAC,EAAA,CACA,WACA,OACA,aAWAx7B,EAAAy7B,aAAA,EAAAjC,EAAAllB,EAAA3B,KAEA,MAAAO,EAAA,OAAAoB,EAAAkY,MAAA,MACA,IAAAlpB,EAAA63B,EAAA3B,EAAA,IAAAtmB,EACA,UAAA/G,KAAAuvB,KAAAvpB,KAAAwpB,MAAA,KAIA,MAAAC,EAAA10B,OAAA20B,OAAA,GAAqCvnB,EAAAwnB,gBACrCF,EAAAG,QAAA70B,OAAA20B,OAAA,GAAuCD,EAAAG,QAAA,CACvCC,aAAA,KAGA7oB,EAAA7P,EAAAs4B,EAAA,CAAArmB,EAAA0mB,EAAArM,KACA,GAAAra,EAAA,OAAA5C,EAAA4C,GAGA,MAAA2mB,EAAA/7B,EAAA24B,QAAAlJ,EAAA,oCACA,GAAAsM,IACA,UAAAhtB,KAAA/O,EAAA24B,QAAAoD,EAAA,kBAEAtM,EAAAuM,SAAA,4CACA,OAAAxpB,EAAApC,MAAApQ,EAAA24B,QAAAlJ,EACA,yDAAAjrB,SAKA,MAAAy3B,EAAA,CAEAC,OAAApB,EAAAqB,UAAA1M,GAGA2M,UAAAtB,EAAAuB,aAAA5M,GAGA6M,YAAAxB,EAAAyB,oBAAA9M,GAGA+M,MAAA1B,EAAA2B,cAAAhN,GAGAiN,eAAA5B,EAAA6B,iBAAAlN,GAGAmN,UAAA5B,EAAA3B,GAGAwD,EAAA78B,EAAA24B,QAAAlJ,EAAA,mCACA,IAAAqN,EACAD,GACAC,EAAAD,EAAAv3B,MAAA,EAAAu3B,EAAAx3B,YAAA,mBACA03B,EAAA1D,EAAAllB,EAAA8nB,EAAAa,GAAA,EAAAtqB,KAKArP,EAAA83B,EAAA5B,EAAA,IAAAtmB,EACAC,EAAA7P,EAAAgR,EAAAwnB,eAAA,CAAAvmB,EAAA0mB,EAAArM,KACA,GAAAra,EAAA,OAAA5C,EAAA4C,GACA0nB,EAAA98B,EAAA24B,QAAAlJ,EAAA,iCAAkD,gBAClDsN,EAAA1D,EAAAllB,EAAA8nB,EAAAa,GAAA,EAAAtqB,UAeA,MAAAuqB,EAAA,CAAA1D,EAAAllB,EAAA8nB,EAAAa,EAAAE,EAAAxqB,KACA,IAAAsqB,EACA,OAAAtqB,EAAApC,MAAA,iCAEA,IACA0sB,EAAA1O,KAAArtB,MAAA+7B,GAAAE,EAAA,IAAgD,KAC7C,MAAA5nB,GACH,OAAA5C,EAAApC,MAAA,yBAAAgF,EAAA8X,UAEA,MAAA/pB,EAAA03B,EAAAx5B,OAAA,CACAlB,SAAA,QACAG,KAAA66B,EACAv6B,SAAAw6B,EACAz6B,MAAA,CACAs8B,SAAA5D,EACA6D,KAAAhC,EAAA7B,EACA8D,GAAA,UACAC,GAAA,KACAC,GAAAlpB,EAAAkY,MAAA,KACAiR,IAAAR,EAAAQ,OAGAtqB,EAAA7P,EAAAgR,EAAAwnB,eAAA,CAAAvmB,EAAA0mB,EAAArM,KACA,GAAAra,EAAA,OAAA5C,EAAA4C,GACA,IAAAwkB,EAAA12B,EAAAnC,MAAA0uB,GAEA,YAAAmK,EAAA2D,OAAA,CACA,IAAAT,EAAA/iB,QAAA+iB,EAAA/iB,KAAAyjB,UACAV,EAAA/iB,KAAA8f,4BAAAiD,EAAA/iB,KAAA+f,eAIA,OAAAtnB,EACApC,cAAwBwpB,EAAA6D,cAAmBz9B,EAAAo6B,UAAAR,EAAA8D,YAJ3C9D,EAAAkD,EAAA/iB,KACA6f,EAAA+D,kBAAA,EAOA,MAAAC,EAAAd,EAAA/iB,KAAA6jB,iBAAAhE,EAAAgE,gBACA,GAAAA,EAAA,CACA,IACAhE,EAAAgE,gBAAAxP,KAAArtB,MAAA68B,GACO,MAAAxoB,GACP,OAAA5C,EACApC,MAAA,oCAAAgF,EAAA8X,UAEA,IAAA2Q,EAAAjE,EAAAgE,gBAAAE,kBACA,GAAAD,GAAA,eAAAA,EAAAN,OACA,OAAA/qB,EAAApC,MAAAytB,EAAAH,SAKArC,EAAA1oB,QAAAC,IACAgnB,EAAAhnB,KACAgnB,EAAAhnB,GAAAgnB,EAAAhnB,GACAzO,MAAA,KACAwU,OAAAhR,GAAA,KAAAA,MAGAiyB,EAAA4D,SAAA5D,EAAA4D,SACA5D,EAAA4D,SAAAnxB,IAAAhL,KAAA8C,MAAA,SAEAy1B,EAAA3B,QAAAj4B,EAAA25B,aAAAC,GAGA7yB,OAAA20B,OAAA9B,EAAAqC,GACArC,EAAAmE,eAAAf,EACApD,EAAAoE,YAAAlB,EAAAmB,OAAAC,GAEA1rB,EAAA,KAAAonB,MAYA/5B,EAAAs+B,YAAA,EAAA9E,EAAAllB,EAAA3B,KACA,OAAA3S,EAAAy7B,aAAAjC,EAAAllB,EAAA,CAAAiB,EAAAwkB,KACA,GAAAxkB,EAAA,OAAA5C,EAAA4C,GACA,MAAAgpB,EACAxE,EAAAgE,iBAAAhE,EAAAgE,gBAAAS,gBACAzE,EAAAgE,gBAAAS,cAAAC,iBACA1E,EAAAgE,gBAAAS,cAAAE,gBAEA,GAAA3E,EAAA3B,QAAAxzB,QAAA25B,EAAA,CACA,MAAAI,EAAA3D,EAAA55B,QAAA+5B,EAAApB,EAAAoE,aACAjD,EAAA0D,UAAAD,EAAArqB,EAAA,CAAAiB,EAAAspB,KACA,GAAAtpB,EAAA,OAAA5C,EAAA4C,GAEA2lB,EAAA4D,gBAAA/E,EAAA3B,QAAAyG,EAAAvqB,EAAAyqB,OACA,IAAArE,EAAA,GACA,GAAA6D,GAAAxE,EAAAgE,gBAAAS,cAAAC,gBAAA,CACA,IAAAn7B,EAAA07B,EAAAjF,EAAAgE,gBAAAS,cAAAC,gBAAAI,GACAnE,EAAAn0B,KAAA04B,EAAA1qB,KAAA,KAAAjR,EAAAgR,IAEA,GAAAiqB,GAAAxE,EAAAgE,gBAAAS,cAAAE,eAAA,CACA,IAAAp7B,EAAA07B,EAAAjF,EAAAgE,gBAAAS,cAAAE,eAAAG,GACAnE,EAAAn0B,KAAA24B,EAAA3qB,KAAA,KAAAjR,EAAAgR,IAGAnU,EAAAs6B,SAAAC,EAAA,CAAAnlB,EAAAslB,KACA,GAAAtlB,EAAA,OAAA5C,EAAA4C,GACAslB,EAAA,IAA2BsE,EAAApF,EAAAc,EAAA,IAC3BA,EAAA,IAA2BsE,EAAApF,EAAAc,EAAA,IAC3Bd,EAAA3B,QAAAxzB,QAKA0P,EAAAyqB,OACAhF,EAAA3B,QAAAtlB,QAAAtR,IACA,MAAAi3B,EAAAj3B,EAAAi3B,KACAvC,EAAAuC,IACA2G,QAAAC,oCAA4D5G,aAK5DsB,EAAA3B,QAAAtlB,QAAA3S,EAAA+5B,eACAH,EAAA3B,QAAAkH,KAAAn/B,EAAA42B,aACAgD,EAAAwF,MAAA,EACA5sB,EAAA,KAAAonB,IAhBApnB,EAAApC,MAAA,8BAoBAoC,EAAApC,MAAA,kCAUA,MAAAyuB,EAAA,CAAA17B,EAAAu7B,KACA,OAAAv7B,EAAAkB,QAAA,wBAAAg7B,EAAAv4B,KACA,oBAAAi0B,EAAAuE,SAAAZ,EAAA53B,MAWAk4B,EAAA,CAAApF,EAAA2F,KACA3F,EAAA3B,QAAAtlB,QAAAylB,IACAmH,EAAAnH,EAAAE,QACAiH,EAAAnH,EAAAE,MAAAF,KAGAwB,EAAA3B,QAAA,GACA,QAAAK,KAAAiH,EAAgC3F,EAAA3B,QAAA7xB,KAAAm5B,EAAAjH,KAWhCwG,EAAA,CAAA37B,EAAAgR,EAAA3B,KACA,IAAAylB,EAAA,GAEA,MAAAxiB,EAAAD,EAAAC,QAAA,GACAA,EAAA0D,QAAA3G,EACAiD,EAAA+pB,UAAA,CAAAC,IACA,sBAAAA,EAAAnS,KAAA,CACA,MAAAgL,EAAAmH,EAAAlS,WAAAmS,GACAzH,EAAAK,GAAA,CAAuBA,OAAAn1B,UAGvBsS,EAAAyD,MAAA,MAAwB1G,EAAA,KAAAylB,KAExB,MAAA0H,EAAA3sB,EAAA6nB,EAAA55B,QAAA+5B,EAAA73B,GAAAgR,EAAAwnB,gBACAgE,EAAAC,YAAA,QACAD,EAAAhuB,GAAA,QAAAa,GACAmtB,EAAAhuB,GAAA,OAAAW,IAA6BmD,EAAA6C,MAAAhG,KAC7BqtB,EAAAhuB,GAAA,MAAA8D,EAAA+C,MAAApE,KAAAqB,KAWAspB,EAAA,CAAA57B,EAAAgR,EAAA3B,KACArP,EAAA03B,EAAA55B,QAAA+5B,EAAA73B,GACA6P,EAAA7P,EAAAgR,EAAAwnB,eAAA,CAAAvmB,EAAA0mB,EAAArM,KACA,GAAAra,EAAA,OAAA5C,EAAA4C,GAEA,IAAA6iB,EAAA,GACAxI,EACAtrB,MAAA,MACAwU,OAAA7G,GAAA,cAAA/C,KAAA+C,IACAa,QAAAb,IACA,MAAAwmB,EAAAxmB,EAAA9M,MAAA,sBACAizB,EAAAK,GAAA,CAAyBA,OAAAn1B,IAAA2O,KAEzBU,EAAA,KAAAylB,MAMAp4B,EAAAggC,MAAA,IAAAC,IACAjgC,EAAAggC,MAAAE,QAAA,IAKA,QAAAC,IAAA,gCAMA,MAAAzzB,EAAA1M,EAAAmgC,GACAngC,EAAAmgC,GAAA,EAAA7G,EAAAhlB,EAAA3B,KAQA,GAPA,oBAAA2B,GACA3B,EAAA2B,EACAA,EAAA,IACKA,IACLA,EAAA,KAGA3B,EACA,WAAAytB,QAAA,CAAAh/B,EAAAi/B,KACArgC,EAAAmgC,GAAA7G,EAAAhlB,EAAA,CAAAiB,EAAAwkB,KACA,GAAAxkB,EAAA,OAAA8qB,EAAA9qB,GACAnU,EAAA24B,OAKA,MAAAP,EAAAr5B,EAAAy5B,WAAAN,GACA,GAAAE,aAAAjpB,MAAA,OAAAoC,EAAA6mB,GAEA,MAAAzmB,EAAA,CAAAotB,EAAA3G,EAAAllB,EAAAkY,MAAA/nB,KAAA,KACAzE,EAAAggC,MAAAvG,IAAA1mB,GACAJ,EAAA,KAAA3S,EAAAggC,MAAA3sB,IAAAN,IAEArG,EAAA8sB,EAAAllB,EAAA,CAAAiB,EAAAwkB,KACA,GAAAxkB,EAAA,OAAA5C,EAAA4C,GACAvV,EAAAggC,MAAAvmB,IAAA1G,EAAAgnB,GACAuG,WAAA,KAA0BtgC,EAAAggC,MAAAO,OAAAxtB,IAA6B/S,EAAAggC,MAAAE,SACvDvtB,EAAA,KAAAonB,OAQA/5B,EAAA05B,WAAAv5B,EAAAu5B,WACA15B,EAAA65B,YAAA15B,EAAA05B,YACA75B,EAAAq5B,cAAAl5B,EAAAk5B,cACAr5B,EAAA45B,WAAAz5B,EAAAy5B,gDC9VA,IAAAlkB,EAAazV,EAAQ,QAAayV,OAGlC8qB,EAAA9qB,EAAA8qB,YAAA,SAAA9tB,GAEA,OADAA,EAAA,GAAAA,EACAA,KAAAxN,eACA,qIACA,SACA,QACA,WAIA,SAAAu7B,EAAAC,GACA,IAAAA,EAAA,aACA,IAAAC,EACA,QACA,OAAAD,GACA,WACA,YACA,aACA,WACA,YACA,cACA,eACA,gBACA,aACA,aACA,eACA,aACA,YACA,UACA,OAAAA,EACA,QACA,GAAAC,EAAA,OACAD,GAAA,GAAAA,GAAAx7B,cACAy7B,GAAA,GAOA,SAAAC,EAAAF,GACA,IAAAG,EAAAJ,EAAAC,GACA,qBAAAG,IAAAnrB,EAAA8qB,mBAAAE,IAAA,UAAAnwB,MAAA,qBAAAmwB,GACA,OAAAG,GAAAH,EAOA,SAAA1mB,EAAAtH,GAEA,IAAAouB,EACA,OAFAzgC,KAAAqS,SAAAkuB,EAAAluB,GAEArS,KAAAqS,UACA,cACArS,KAAA6sB,KAAA6T,EACA1gC,KAAA+Q,IAAA4vB,EACAF,EAAA,EACA,MACA,WACAzgC,KAAA4gC,SAAAC,EACAJ,EAAA,EACA,MACA,aACAzgC,KAAA6sB,KAAAiU,EACA9gC,KAAA+Q,IAAAgwB,EACAN,EAAA,EACA,MACA,QAGA,OAFAzgC,KAAAoY,MAAA4oB,OACAhhC,KAAA+Q,IAAAkwB,GAGAjhC,KAAAkhC,SAAA,EACAlhC,KAAAmhC,UAAA,EACAnhC,KAAAohC,SAAA/rB,EAAAggB,YAAAoL,GAoCA,SAAAY,EAAAC,GACA,OAAAA,GAAA,MAA6BA,GAAA,QAAsCA,GAAA,SAAsCA,GAAA,SACzGA,GAAA,YAMA,SAAAC,EAAA52B,EAAA62B,EAAAv8B,GACA,IAAAW,EAAA47B,EAAAj9B,OAAA,EACA,GAAAqB,EAAAX,EAAA,SACA,IAAAw7B,EAAAY,EAAAG,EAAA57B,IACA,OAAA66B,GAAA,GACAA,EAAA,IAAA91B,EAAAu2B,SAAAT,EAAA,GACAA,KAEA76B,EAAAX,IAAA,IAAAw7B,EAAA,GACAA,EAAAY,EAAAG,EAAA57B,IACA66B,GAAA,GACAA,EAAA,IAAA91B,EAAAu2B,SAAAT,EAAA,GACAA,KAEA76B,EAAAX,IAAA,IAAAw7B,EAAA,GACAA,EAAAY,EAAAG,EAAA57B,IACA66B,GAAA,GACAA,EAAA,IACA,IAAAA,IAAA,EAA2B91B,EAAAu2B,SAAAT,EAAA,GAE3BA,GAEA,IAWA,SAAAgB,EAAA92B,EAAA62B,EAAAn7B,GACA,cAAAm7B,EAAA,IAEA,OADA72B,EAAAu2B,SAAA,EACA,IAEA,GAAAv2B,EAAAu2B,SAAA,GAAAM,EAAAj9B,OAAA,GACA,cAAAi9B,EAAA,IAEA,OADA72B,EAAAu2B,SAAA,EACA,IAEA,GAAAv2B,EAAAu2B,SAAA,GAAAM,EAAAj9B,OAAA,GACA,WAAAi9B,EAAA,IAEA,OADA72B,EAAAu2B,SAAA,EACA,KAOA,SAAAL,EAAAW,GACA,IAAAn7B,EAAArG,KAAAmhC,UAAAnhC,KAAAkhC,SACA5P,EAAAmQ,EAAAzhC,KAAAwhC,EAAAn7B,GACA,YAAA2I,IAAAsiB,IACAtxB,KAAAkhC,UAAAM,EAAAj9B,QACAi9B,EAAArgB,KAAAnhB,KAAAohC,SAAA/6B,EAAA,EAAArG,KAAAkhC,UACAlhC,KAAAohC,SAAA5uB,SAAAxS,KAAAqS,SAAA,EAAArS,KAAAmhC,aAEAK,EAAArgB,KAAAnhB,KAAAohC,SAAA/6B,EAAA,EAAAm7B,EAAAj9B,aACAvE,KAAAkhC,UAAAM,EAAAj9B,SAMA,SAAAm9B,EAAAF,EAAAv8B,GACA,IAAAosB,EAAAkQ,EAAAvhC,KAAAwhC,EAAAv8B,GACA,IAAAjF,KAAAkhC,SAAA,OAAAM,EAAAhvB,SAAA,OAAAvN,GACAjF,KAAAmhC,UAAA9P,EACA,IAAAtgB,EAAAywB,EAAAj9B,QAAA8sB,EAAArxB,KAAAkhC,UAEA,OADAM,EAAArgB,KAAAnhB,KAAAohC,SAAA,EAAArwB,GACAywB,EAAAhvB,SAAA,OAAAvN,EAAA8L,GAKA,SAAA4wB,EAAAH,GACA,IAAAlQ,EAAAkQ,KAAAj9B,OAAAvE,KAAAoY,MAAAopB,GAAA,GACA,OAAAxhC,KAAAkhC,SAAA5P,EAAA,IACAA,EAOA,SAAAoP,EAAAc,EAAAv8B,GACA,IAAAu8B,EAAAj9B,OAAAU,GAAA,OACA,IAAAqsB,EAAAkQ,EAAAhvB,SAAA,UAAAvN,GACA,GAAAqsB,EAAA,CACA,IAAAnnB,EAAAmnB,EAAAxrB,WAAAwrB,EAAA/sB,OAAA,GACA,GAAA4F,GAAA,OAAAA,GAAA,MAKA,OAJAnK,KAAAkhC,SAAA,EACAlhC,KAAAmhC,UAAA,EACAnhC,KAAAohC,SAAA,GAAAI,IAAAj9B,OAAA,GACAvE,KAAAohC,SAAA,GAAAI,IAAAj9B,OAAA,GACA+sB,EAAAlsB,MAAA,MAGA,OAAAksB,EAKA,OAHAtxB,KAAAkhC,SAAA,EACAlhC,KAAAmhC,UAAA,EACAnhC,KAAAohC,SAAA,GAAAI,IAAAj9B,OAAA,GACAi9B,EAAAhvB,SAAA,UAAAvN,EAAAu8B,EAAAj9B,OAAA,GAKA,SAAAo8B,EAAAa,GACA,IAAAlQ,EAAAkQ,KAAAj9B,OAAAvE,KAAAoY,MAAAopB,GAAA,GACA,GAAAxhC,KAAAkhC,SAAA,CACA,IAAAnwB,EAAA/Q,KAAAmhC,UAAAnhC,KAAAkhC,SACA,OAAA5P,EAAAtxB,KAAAohC,SAAA5uB,SAAA,YAAAzB,GAEA,OAAAugB,EAGA,SAAAwP,EAAAU,EAAAv8B,GACA,IAAAkJ,GAAAqzB,EAAAj9B,OAAAU,GAAA,EACA,WAAAkJ,EAAAqzB,EAAAhvB,SAAA,SAAAvN,IACAjF,KAAAkhC,SAAA,EAAA/yB,EACAnO,KAAAmhC,UAAA,EACA,IAAAhzB,EACAnO,KAAAohC,SAAA,GAAAI,IAAAj9B,OAAA,IAEAvE,KAAAohC,SAAA,GAAAI,IAAAj9B,OAAA,GACAvE,KAAAohC,SAAA,GAAAI,IAAAj9B,OAAA,IAEAi9B,EAAAhvB,SAAA,SAAAvN,EAAAu8B,EAAAj9B,OAAA4J,IAGA,SAAA4yB,EAAAS,GACA,IAAAlQ,EAAAkQ,KAAAj9B,OAAAvE,KAAAoY,MAAAopB,GAAA,GACA,OAAAxhC,KAAAkhC,SAAA5P,EAAAtxB,KAAAohC,SAAA5uB,SAAA,aAAAxS,KAAAkhC,UACA5P,EAIA,SAAA0P,EAAAQ,GACA,OAAAA,EAAAhvB,SAAAxS,KAAAqS,UAGA,SAAA4uB,EAAAO,GACA,OAAAA,KAAAj9B,OAAAvE,KAAAoY,MAAAopB,GAAA,GAzNA7hC,EAAAga,gBA6BAA,EAAAnW,UAAA4U,MAAA,SAAAopB,GACA,OAAAA,EAAAj9B,OAAA,SACA,IAAA+sB,EACArsB,EACA,GAAAjF,KAAAkhC,SAAA,CAEA,GADA5P,EAAAtxB,KAAA4gC,SAAAY,QACAxyB,IAAAsiB,EAAA,SACArsB,EAAAjF,KAAAkhC,SACAlhC,KAAAkhC,SAAA,OAEAj8B,EAAA,EAEA,OAAAA,EAAAu8B,EAAAj9B,OAAA+sB,IAAAtxB,KAAA6sB,KAAA2U,EAAAv8B,GAAAjF,KAAA6sB,KAAA2U,EAAAv8B,GACAqsB,GAAA,IAGA3X,EAAAnW,UAAAuN,IAAA4wB,EAGAhoB,EAAAnW,UAAAqpB,KAAA6U,EAGA/nB,EAAAnW,UAAAo9B,SAAA,SAAAY,GACA,GAAAxhC,KAAAkhC,UAAAM,EAAAj9B,OAEA,OADAi9B,EAAArgB,KAAAnhB,KAAAohC,SAAAphC,KAAAmhC,UAAAnhC,KAAAkhC,SAAA,EAAAlhC,KAAAkhC,UACAlhC,KAAAohC,SAAA5uB,SAAAxS,KAAAqS,SAAA,EAAArS,KAAAmhC,WAEAK,EAAArgB,KAAAnhB,KAAAohC,SAAAphC,KAAAmhC,UAAAnhC,KAAAkhC,SAAA,EAAAM,EAAAj9B,QACAvE,KAAAkhC,UAAAM,EAAAj9B,gCCtIA7E,EAAAC,QAAA,CACAw0B,YAAev0B,EAAQ,QACvByP,cAAiBzP,EAAQ,QACzBkJ,cAAiBlJ,EAAQ,QACzBgiC,gBAAmBhiC,EAAQ,+BCH3B,IAAA6vB,EAAa7vB,EAAQ,QACrByV,EAAAoa,EAAApa,OAGA,SAAAwsB,EAAAlN,EAAAmN,GACA,QAAApvB,KAAAiiB,EACAmN,EAAApvB,GAAAiiB,EAAAjiB,GAWA,SAAAqvB,EAAA/R,EAAAgS,EAAAz9B,GACA,OAAA8Q,EAAA2a,EAAAgS,EAAAz9B,GATA8Q,EAAA4sB,MAAA5sB,EAAA+f,OAAA/f,EAAAggB,aAAAhgB,EAAA6sB,gBACAxiC,EAAAC,QAAA8vB,GAGAoS,EAAApS,EAAA9vB,GACAA,EAAA0V,OAAA0sB,GAQAF,EAAAxsB,EAAA0sB,GAEAA,EAAAE,KAAA,SAAAjS,EAAAgS,EAAAz9B,GACA,qBAAAyrB,EACA,UAAApsB,UAAA,iCAEA,OAAAyR,EAAA2a,EAAAgS,EAAAz9B,IAGAw9B,EAAA3M,MAAA,SAAA+M,EAAAC,EAAA/vB,GACA,qBAAA8vB,EACA,UAAAv+B,UAAA,6BAEA,IAAA49B,EAAAnsB,EAAA8sB,GAUA,YATAnzB,IAAAozB,EACA,kBAAA/vB,EACAmvB,EAAAY,OAAA/vB,GAEAmvB,EAAAY,QAGAZ,EAAAY,KAAA,GAEAZ,GAGAO,EAAA1M,YAAA,SAAA8M,GACA,qBAAAA,EACA,UAAAv+B,UAAA,6BAEA,OAAAyR,EAAA8sB,IAGAJ,EAAAG,gBAAA,SAAAC,GACA,qBAAAA,EACA,UAAAv+B,UAAA,6BAEA,OAAA6rB,EAAA4S,WAAAF,0BC5DAziC,EAAAC,QAAA,CACA2iC,IAAA,WACAC,IAAA,sBACAC,IAAA,aACAC,IAAA,KACAC,IAAA,UACAC,IAAA,WACAC,IAAA,gCACAC,IAAA,aACAC,IAAA,gBACAC,IAAA,kBACAC,IAAA,eACAC,IAAA,mBACAC,IAAA,UACAC,IAAA,mBACAC,IAAA,oBACAC,IAAA,QACAC,IAAA,YACAC,IAAA,eACAC,IAAA,YACAC,IAAA,qBACAC,IAAA,qBACAC,IAAA,cACAC,IAAA,eACAC,IAAA,mBACAC,IAAA,YACAC,IAAA,YACAC,IAAA,qBACAC,IAAA,iBACAC,IAAA,gCACAC,IAAA,kBACAC,IAAA,WACAC,IAAA,OACAC,IAAA,kBACAC,IAAA,sBACAC,IAAA,oBACAC,IAAA,eACAC,IAAA,yBACAC,IAAA,wBACAC,IAAA,qBACAC,IAAA,eACAC,IAAA,sBACAC,IAAA,uBACAC,IAAA,SACAC,IAAA,oBACAC,IAAA,uBACAC,IAAA,mBACAC,IAAA,wBACAC,IAAA,oBACAC,IAAA,kCACAC,IAAA,gCACAC,IAAA,wBACAC,IAAA,kBACAC,IAAA,cACAC,IAAA,sBACAC,IAAA,kBACAC,IAAA,6BACAC,IAAA,0BACAC,IAAA,uBACAC,IAAA,gBACAC,IAAA,2BACAC,IAAA,eACAC,IAAA,4DC9DA,SAAAC,GAAA,MAAA9jC,EAAoB1C,EAAQ,QAC5B2C,EAAoB3C,EAAQ,QAC5BkB,EAAoBlB,EAAQ,QAAKiB,MACjC65B,EAAoB96B,EAAQ,QAAQ86B,YAGpC2L,EAAA,CAAkB1jC,QAAAL,EAAAM,SAAAL,GAClB+jC,EAAA,CAAuBlD,KAAA,EAAAC,KAAA,EAAAC,KAAA,EAAAG,KAAA,GACvB8C,EAAA,CACAC,aAAA,EACAC,WAAA,EACAC,cAAA,EACAC,QAAA,CAAYC,IAAA,IAAAnvB,IAAA,KACZ1D,cAAA,KACAO,UAAA,KACAuyB,eAAA,MASAnnC,EAAAC,QAAA,EAAAsD,EAAAgR,EAAA3B,KACA,oBAAA2B,GACA3B,EAAA2B,EACAA,EAAA,IACGA,IACHA,EAAA,IAEAA,EAAApN,OAAA20B,OAAA,GAA4B+K,EAAAtyB,GAC5B,MAAAY,EAAA,IAAA6lB,EAAA,CAAkC3mB,cAAAE,EAAAF,gBAClC,IAAA+yB,EAAAC,EAIAC,EAEAC,EAEAC,EAPAC,GAAA,EACAC,EAAA,EACAC,EAAA,EAEAC,EAAA,EAEAC,GAAA,EACAC,EAAA,EACAC,EAAA,EAGA,GAAAxzB,EAAAynB,SAAAznB,EAAAynB,QAAAgM,MAAA,CACA,IAAApW,EAAA,qBAAA7sB,KAAAwP,EAAAynB,QAAAgM,OACApW,IACAkW,EAAA19B,SAAAwnB,EAAA,OACA4V,EAAAp9B,SAAAwnB,EAAA,QAKArd,EAAA4yB,iBACA5yB,EAAAynB,QAAA70B,OAAA20B,OAAA,CACAmM,kBAAA9gC,OAAAC,KAAAmN,EAAA4yB,gBAAAziC,KAAA,OACK6P,EAAAynB,UAGL,MAAAkM,EAAA,CAAA1yB,EAAA2yB,KACA,IAAAV,EAGA,GAAAJ,GAAAQ,GACA,EAAAE,KAAAR,GACA,GAAAK,IAAArzB,EAAAyyB,cAAA,CACAK,EAAA,KACAM,EAAA,EACA,IAAApW,EAAAnlB,KAAAg8B,IAAA7zB,EAAA0yB,QAAAC,IAAA3yB,EAAA0yB,QAAAlvB,KAGA,OAFAuvB,EAAA/G,WAAA8H,EAAA9W,QACApc,EAAAlD,KAAA,YAAA21B,EAAApyB,SAGO,KAAA2yB,GAAA,cAAA3yB,EAAA8X,UACPqa,IAAApzB,EAAAwyB,WAAA,CACA,IAAAxV,EAAAnlB,KAAAg8B,IAAAT,EAAApzB,EAAA0yB,QAAAC,IAAA3yB,EAAA0yB,QAAAlvB,KAGA,OAFAuvB,EAAA/G,WAAA8H,EAAA9W,QACApc,EAAAlD,KAAA,QAAA01B,EAAAnyB,GAIAL,EAAAlD,KAAA,QAAAuD,IAGA6yB,EAAA,KACA,GAAAZ,EAAkB,OAClB,IAAAjO,EAAAp4B,EAAAmC,GACA+kC,EAAA3B,EAAAnN,EAAAj5B,UACA,GAAA+nC,EAAA,CAKAnhC,OAAA20B,OAAAtC,EAAAjlB,GACA,QAAAvB,KAAA6zB,SACArN,EAAAxmB,GAEA60B,GAAAE,EAAA,IACAvO,EAAAwC,QAAA70B,OAAA20B,OAAA,GAAuCtC,EAAAwC,QAAA,CACvCgM,eAAwBD,EAAAD,KAA2BN,GAAA,QAInDjzB,EAAAK,YACA4kB,EAAAjlB,EAAAK,UAAA4kB,GACAA,EAAAj5B,WACA+nC,EAAA3B,EAAAnN,EAAAj5B,YAIA6mC,EAAAkB,EAAAh1B,IAAAkmB,EAAA0C,IACA,QAAA0K,EAAA1K,EAAAiM,YAQA,YAPAT,KAAAnzB,EAAAuyB,aACA3xB,EAAAlD,KAAA,QAAAzB,MAAA,wBAEAjN,EAAA24B,EAAAF,QAAAuM,SACApzB,EAAAlD,KAAA,WAAA1O,GACA8kC,MAGO,GAAAnM,EAAAiM,WAAA,UAAAjM,EAAAiM,WAAA,CACP,IAAA3yB,EAAAhF,MAAA,gBAAA0rB,EAAAiM,YAMA,YALAjM,EAAAiM,YAAA,IACAD,EAAA1yB,EAAA0mB,EAAAiM,YAEAhzB,EAAAlD,KAAA,QAAAuD,IAIA,IAAAgzB,EAAAtM,EACA,GAAA3nB,EAAA4yB,gBAAAjL,EAAAF,QAAA,oBACA,QAAA2E,KAAAzE,EAAAF,QAAA,oBAAAz3B,MAAA,MAAAkkC,UAAA,CACA,IAAA97B,EAAA4H,EAAA4yB,eAAAxG,GACA,MAAAh0B,IACA67B,IAAAE,KAAA/7B,EAAA67B,IACAA,EAAAz2B,GAAA,QAAAoD,EAAAlD,KAAAuC,KAAAW,EAAA,WAIAoyB,IACAA,EAAAn9B,SAAA8xB,EAAAF,QAAA,sBACA6L,EAAA,UAAA3L,EAAAF,QAAA,kBACAuL,EAAA,GAAAhzB,EAAAyyB,cAAA,GAEAa,IACA3L,EAAAnqB,GAAA,OAAAW,IAAmCq1B,GAAAr1B,EAAA7N,SACnC2jC,EAAAz2B,GAAA,WACAg2B,IAAAR,GACApyB,EAAA9D,SAIAm3B,EAAAE,KAAAvzB,EAAA,CAA4B9D,KAAAw2B,IAC5BR,EAAAmB,EACArzB,EAAAlD,KAAA,WAAAiqB,GACAA,EAAAnqB,GAAA,QAAAoD,EAAAlD,KAAAuC,KAAAW,EAAA,YAEAiyB,EAAAr1B,GAAA,QAAAm2B,GACA/yB,EAAAlD,KAAA,UAAAm1B,QArEAjyB,EAAAlD,KAAA,QAAAzB,MAAA,gBAAAjN,KAiFA,GATA4R,EAAAwzB,MAAA,MACAlB,GAAA,EACAtyB,EAAAlD,KAAA,SACAm1B,GAAgBA,EAAAuB,QAChBtB,GAAgBA,EAAAuB,OAAAzzB,GAChB0zB,aAAAvB,KAGAZ,EAAAjU,SAAA4V,GACAz1B,EAAA,CACA,IAAAid,EAAA,GACA1a,EAAA6qB,YAAA,QACA7qB,EAAApD,GAAA,OAAAW,IAAkCmd,GAAAnd,IAClCyC,EAAApD,GAAA,WAA4Ba,EAAA,KAAAy0B,EAAAxX,KAC5B1a,EAAApD,GAAA,QAAAa,GAEA,OAAAA,EAAA,KAAAuC,+CClLAlV,EAAA6oC,KAAA,SAAA/Y,EAAAmF,EAAA6T,EAAAC,EAAAC,GACA,IAAAz/B,EAAAqF,EACAq6B,EAAA,EAAAD,EAAAD,EAAA,EACAG,GAAA,GAAAD,GAAA,EACAE,EAAAD,GAAA,EACAE,GAAA,EACA9jC,EAAAwjC,EAAAE,EAAA,IACAjY,EAAA+X,GAAA,IACA7hC,EAAA6oB,EAAAmF,EAAA3vB,GAOA,IALAA,GAAAyrB,EAEAxnB,EAAAtC,GAAA,IAAAmiC,GAAA,EACAniC,KAAAmiC,EACAA,GAAAH,EACQG,EAAA,EAAW7/B,EAAA,IAAAA,EAAAumB,EAAAmF,EAAA3vB,MAAAyrB,EAAAqY,GAAA,GAKnB,IAHAx6B,EAAArF,GAAA,IAAA6/B,GAAA,EACA7/B,KAAA6/B,EACAA,GAAAL,EACQK,EAAA,EAAWx6B,EAAA,IAAAA,EAAAkhB,EAAAmF,EAAA3vB,MAAAyrB,EAAAqY,GAAA,GAEnB,OAAA7/B,EACAA,EAAA,EAAA4/B,MACG,IAAA5/B,IAAA2/B,EACH,OAAAt6B,EAAAy6B,IAAAC,KAAAriC,GAAA,KAEA2H,GAAAzC,KAAAo9B,IAAA,EAAAR,GACAx/B,GAAA4/B,EAEA,OAAAliC,GAAA,KAAA2H,EAAAzC,KAAAo9B,IAAA,EAAAhgC,EAAAw/B,IAGA/oC,EAAAyY,MAAA,SAAAqX,EAAA7iB,EAAAgoB,EAAA6T,EAAAC,EAAAC,GACA,IAAAz/B,EAAAqF,EAAApE,EACAy+B,EAAA,EAAAD,EAAAD,EAAA,EACAG,GAAA,GAAAD,GAAA,EACAE,EAAAD,GAAA,EACAM,EAAA,KAAAT,EAAA58B,KAAAo9B,IAAA,OAAAp9B,KAAAo9B,IAAA,SACAjkC,EAAAwjC,EAAA,EAAAE,EAAA,EACAjY,EAAA+X,EAAA,KACA7hC,EAAAgG,EAAA,OAAAA,GAAA,EAAAA,EAAA,MAmCA,IAjCAA,EAAAd,KAAAs9B,IAAAx8B,GAEA7C,MAAA6C,QAAAq8B,KACA16B,EAAAxE,MAAA6C,GAAA,IACA1D,EAAA2/B,IAEA3/B,EAAA4C,KAAAD,MAAAC,KAAAu9B,IAAAz8B,GAAAd,KAAAw9B,KACA18B,GAAAzC,EAAA2B,KAAAo9B,IAAA,GAAAhgC,IAAA,IACAA,IACAiB,GAAA,GAGAyC,GADA1D,EAAA4/B,GAAA,EACAK,EAAAh/B,EAEAg/B,EAAAr9B,KAAAo9B,IAAA,IAAAJ,GAEAl8B,EAAAzC,GAAA,IACAjB,IACAiB,GAAA,GAGAjB,EAAA4/B,GAAAD,GACAt6B,EAAA,EACArF,EAAA2/B,GACK3/B,EAAA4/B,GAAA,GACLv6B,GAAA3B,EAAAzC,EAAA,GAAA2B,KAAAo9B,IAAA,EAAAR,GACAx/B,GAAA4/B,IAEAv6B,EAAA3B,EAAAd,KAAAo9B,IAAA,EAAAJ,EAAA,GAAAh9B,KAAAo9B,IAAA,EAAAR,GACAx/B,EAAA,IAIQw/B,GAAA,EAAWjZ,EAAAmF,EAAA3vB,GAAA,IAAAsJ,EAAAtJ,GAAAyrB,EAAAniB,GAAA,IAAAm6B,GAAA,GAInB,IAFAx/B,KAAAw/B,EAAAn6B,EACAq6B,GAAAF,EACQE,EAAA,EAAUnZ,EAAAmF,EAAA3vB,GAAA,IAAAiE,EAAAjE,GAAAyrB,EAAAxnB,GAAA,IAAA0/B,GAAA,GAElBnZ,EAAAmF,EAAA3vB,EAAAyrB,IAAA,IAAA9pB,wCCxDA,SAAA+L,EAAArP,EAAAgnB,GACA,OAAAzjB,OAAArD,UAAAmP,eAAAlP,KAAAH,EAAAgnB,GAGA5qB,EAAAC,QAAA,SAAAi2B,EAAA2T,EAAAC,EAAAv1B,GACAs1B,KAAA,IACAC,KAAA,IACA,IAAAlmC,EAAA,GAEA,qBAAAsyB,GAAA,IAAAA,EAAArxB,OACA,OAAAjB,EAGA,IAAAmmC,EAAA,MACA7T,IAAA3xB,MAAAslC,GAEA,IAAAG,EAAA,IACAz1B,GAAA,kBAAAA,EAAAy1B,UACAA,EAAAz1B,EAAAy1B,SAGA,IAAA35B,EAAA6lB,EAAArxB,OAEAmlC,EAAA,GAAA35B,EAAA25B,IACA35B,EAAA25B,GAGA,QAAAzkC,EAAA,EAAiBA,EAAA8K,IAAS9K,EAAA,CAC1B,IAEA0kC,EAAAC,EAAA/jC,EAAA4B,EAFA8mB,EAAAqH,EAAA3wB,GAAAd,QAAAslC,EAAA,OACAI,EAAAtb,EAAAzqB,QAAA0lC,GAGAK,GAAA,GACAF,EAAApb,EAAA7pB,OAAA,EAAAmlC,GACAD,EAAArb,EAAA7pB,OAAAmlC,EAAA,KAEAF,EAAApb,EACAqb,EAAA,IAGA/jC,EAAAR,mBAAAskC,GACAliC,EAAApC,mBAAAukC,GAEAj3B,EAAArP,EAAAuC,GAEKoqB,EAAA3sB,EAAAuC,IACLvC,EAAAuC,GAAAK,KAAAuB,GAEAnE,EAAAuC,GAAA,CAAAvC,EAAAuC,GAAA4B,GAJAnE,EAAAuC,GAAA4B,EAQA,OAAAnE,GAGA,IAAA2sB,EAAAngB,MAAAmgB,SAAA,SAAA6Z,GACA,yBAAAjjC,OAAArD,UAAAgP,SAAA/O,KAAAqmC,6BClFA,SAAAz0B,EAAAhL,EAAA+7B,GAAA,IAAA2D,EAAiBnqC,EAAQ,QACzBmV,EAAenV,EAAQ,QACvBoqC,EAAepqC,EAAQ,QACvBiV,EAAajV,EAAQ,QACrBqqC,EAAoBrqC,EAAQ,QAE5BsqC,EAAAF,EAAAE,gBACAC,EAAAH,EAAAI,YAEA,SAAAC,EAAAC,EAAAC,GACA,OAAAR,EAAAS,OAAAD,EACA,QACER,EAAAU,sBACF,0BACEV,EAAAW,SACF,YACEX,EAAAY,aAAAL,EACF,cACEP,EAAAa,SAAAN,EACF,eAEA,OAIA,IAAAO,EAAAnrC,EAAAC,QAAA,SAAAmrC,GACA,IAYAR,EAZA3/B,EAAA3K,KACA6U,EAAA1D,SAAA1N,KAAAkH,GAEAA,EAAAogC,MAAAD,EACAngC,EAAAqgC,MAAA,GACArgC,EAAAsgC,SAAA,GACAH,EAAA3qC,MACAwK,EAAAugC,UAAA,6BAAA71B,EAAAy1B,EAAA3qC,MAAAqS,SAAA,WACA3L,OAAAC,KAAAgkC,EAAApP,SAAAjpB,QAAA,SAAA2a,GACAziB,EAAAugC,UAAA9d,EAAA0d,EAAApP,QAAAtO,MAIA,IAAAmd,GAAA,EACA,qBAAAO,EAAAK,MAAA,mBAAAL,IAAAf,EAAAqB,gBAEAb,GAAA,EACAD,GAAA,OACE,wBAAAQ,EAAAK,KAGFb,GAAA,OACE,gCAAAQ,EAAAK,KAEFb,GAAAP,EAAAsB,qBACE,IAAAP,EAAAK,MAAA,YAAAL,EAAAK,MAAA,gBAAAL,EAAAK,KAIF,UAAAj7B,MAAA,+BAFAo6B,GAAA,EAIA3/B,EAAA2gC,MAAAjB,EAAAC,EAAAC,GACA5/B,EAAA4gC,YAAA,KAEA5gC,EAAA8G,GAAA,oBACA9G,EAAA6gC,eA8KA,SAAAC,EAAAC,GACA,IACA,IAAArO,EAAAqO,EAAArO,OACA,cAAAA,GAAA,IAAAA,EACE,MAAAn0B,GACF,UA/KA6L,EAAA81B,EAAAh2B,EAAA1D,UAEA05B,EAAArnC,UAAA0nC,UAAA,SAAA9d,EAAAxgB,GACA,IAAAjC,EAAA3K,KACA2rC,EAAAve,EAAAvoB,eAIA,IAAA+mC,EAAA9nC,QAAA6nC,KAGAhhC,EAAAsgC,SAAAU,GAAA,CACAve,OACAxgB,WAIAi+B,EAAArnC,UAAAqoC,UAAA,SAAAze,GACA,IAAA0e,EAAA9rC,KAAAirC,SAAA7d,EAAAvoB,eACA,OAAAinC,EACAA,EAAAl/B,MACA,MAGAi+B,EAAArnC,UAAAuoC,aAAA,SAAA3e,GACA,IAAAziB,EAAA3K,YACA2K,EAAAsgC,SAAA7d,EAAAvoB,gBAGAgmC,EAAArnC,UAAAgoC,UAAA,WACA,IAAA7gC,EAAA3K,KAEA,IAAA2K,EAAAqhC,WAAA,CAEA,IAAAlB,EAAAngC,EAAAogC,MAEAkB,EAAAthC,EAAAsgC,SACA1b,EAAA,KACA,QAAAub,EAAAoB,QAAA,SAAApB,EAAAoB,SAEA3c,EADAwa,EAAAY,YACAV,EAAA50B,EAAA3T,OAAAiJ,EAAAqgC,QACGjB,EAAAoC,gBACH,IAAA9hC,EAAA+hC,KAAAzhC,EAAAqgC,MAAA7+B,IAAA,SAAAsjB,GACA,OAAAwa,EAAAxa,KACI,CACJxjB,MAAAggC,EAAA,qBAA2Cr/B,OAAA,KAI3CyI,EAAA3T,OAAAiJ,EAAAqgC,OAAAx4B,YAKA,IAAA65B,EAAA,GAaA,GAZAxlC,OAAAC,KAAAmlC,GAAAx5B,QAAA,SAAA65B,GACA,IAAAlf,EAAA6e,EAAAK,GAAAlf,KACAxgB,EAAAq/B,EAAAK,GAAA1/B,MACAkD,MAAAmgB,QAAArjB,GACAA,EAAA6F,QAAA,SAAAhL,GACA4kC,EAAAnmC,KAAA,CAAAknB,EAAA3lB,MAGA4kC,EAAAnmC,KAAA,CAAAknB,EAAAxgB,MAIA,UAAAjC,EAAA2gC,MAAA,CACA,IAAAiB,EAAA,KAEA,GAAAxC,EAAAqB,gBAAA,CACA,IAAAoB,EAAA,IAAAC,gBACAF,EAAAC,EAAAD,OACA5hC,EAAA+hC,sBAAAF,EAEA,mBAAA1B,GAAA,IAAAA,EAAA6B,iBACAhiC,EAAA4gC,YAAAlhC,EAAA41B,WAAA,WACAt1B,EAAAgH,KAAA,kBACAhH,EAAA+hC,uBACA/hC,EAAA+hC,sBAAArE,SACKyC,EAAA6B,iBAILtiC,EAAAmgC,MAAA7/B,EAAAogC,MAAA9nC,IAAA,CACAipC,OAAAvhC,EAAAogC,MAAAmB,OACAxQ,QAAA2Q,EACA9c,aAAAvgB,EACAm8B,KAAA,OACAyB,YAAA9B,EAAA+B,gBAAA,wBACAN,WACGO,KAAA,SAAA9C,GACHr/B,EAAAoiC,eAAA/C,EACAr/B,EAAAqiC,YACG,SAAAxP,GACHnzB,EAAAk+B,aAAA59B,EAAA4gC,aACA5gC,EAAAqhC,YACArhC,EAAAgH,KAAA,QAAA6rB,SAEE,CACF,IAAAkO,EAAA/gC,EAAAsiC,KAAA,IAAA5iC,EAAA6iC,eACA,IACAxB,EAAAyB,KAAAxiC,EAAAogC,MAAAmB,OAAAvhC,EAAAogC,MAAA9nC,KAAA,GACG,MAAAiS,GAIH,YAHAkxB,EAAAjU,SAAA,WACAxnB,EAAAgH,KAAA,QAAAuD,KAMA,iBAAAw2B,IACAA,EAAA0B,aAAAziC,EAAA2gC,MAAArnC,MAAA,SAEA,oBAAAynC,IACAA,EAAAmB,kBAAA/B,EAAA+B,iBAEA,SAAAliC,EAAA2gC,OAAA,qBAAAI,GACAA,EAAAL,iBAAA,sCAEA,mBAAAP,IACAY,EAAA7L,QAAAiL,EAAA6B,eACAjB,EAAA2B,UAAA,WACA1iC,EAAAgH,KAAA,oBAIA06B,EAAA55B,QAAA,SAAAq5B,GACAJ,EAAA4B,iBAAAxB,EAAA,GAAAA,EAAA,MAGAnhC,EAAA4iC,UAAA,KACA7B,EAAA8B,mBAAA,WACA,OAAA9B,EAAA+B,YACA,KAAAtD,EAAAuD,QACA,KAAAvD,EAAAwD,KACAhjC,EAAAijC,iBACA,QAKA,4BAAAjjC,EAAA2gC,QACAI,EAAAmC,WAAA,WACAljC,EAAAijC,mBAIAlC,EAAAzyB,QAAA,WACAtO,EAAAqhC,YAEArhC,EAAAgH,KAAA,YAAAzB,MAAA,eAGA,IACAw7B,EAAAoC,KAAAve,GACG,MAAAra,GAIH,YAHAkxB,EAAAjU,SAAA,WACAxnB,EAAAgH,KAAA,QAAAuD,SAqBA21B,EAAArnC,UAAAoqC,eAAA,WACA,IAAAjjC,EAAA3K,KAEAyrC,EAAA9gC,EAAAsiC,QAAAtiC,EAAAqhC,aAGArhC,EAAA4iC,WACA5iC,EAAAqiC,WAEAriC,EAAA4iC,UAAAK,mBAGA/C,EAAArnC,UAAAwpC,SAAA,WACA,IAAAriC,EAAA3K,KAEA2K,EAAAqhC,aAGArhC,EAAA4iC,UAAA,IAAArD,EAAAv/B,EAAAsiC,KAAAtiC,EAAAoiC,eAAApiC,EAAA2gC,MAAA3gC,EAAA4gC,aACA5gC,EAAA4iC,UAAA97B,GAAA,iBAAAyD,GACAvK,EAAAgH,KAAA,QAAAuD,KAGAvK,EAAAgH,KAAA,WAAAhH,EAAA4iC,aAGA1C,EAAArnC,UAAAwR,OAAA,SAAA5C,EAAAC,EAAAU,GACA,IAAApI,EAAA3K,KAEA2K,EAAAqgC,MAAA9kC,KAAAkM,GACAW,KAGA83B,EAAArnC,UAAA6kC,MAAAwC,EAAArnC,UAAAsuB,QAAA,WACA,IAAAnnB,EAAA3K,KACA2K,EAAAqhC,YAAA,EACA3hC,EAAAk+B,aAAA59B,EAAA4gC,aACA5gC,EAAA4iC,YACA5iC,EAAA4iC,UAAAvB,YAAA,GACArhC,EAAAsiC,KACAtiC,EAAAsiC,KAAA5E,QACA19B,EAAA+hC,uBACA/hC,EAAA+hC,sBAAArE,SAGAwC,EAAArnC,UAAAuN,IAAA,SAAAsC,EAAAhB,EAAAU,GACA,IAAApI,EAAA3K,KACA,oBAAAqT,IACAN,EAAAM,EACAA,OAAArE,GAGA6F,EAAA1D,SAAA3N,UAAAuN,IAAAtN,KAAAkH,EAAA0I,EAAAhB,EAAAU,IAGA83B,EAAArnC,UAAAuqC,aAAA,aACAlD,EAAArnC,UAAAy8B,WAAA,aACA4K,EAAArnC,UAAAwqC,WAAA,aACAnD,EAAArnC,UAAAyqC,mBAAA,aAGA,IAAArC,EAAA,CACA,iBACA,kBACA,iCACA,gCACA,aACA,iBACA,SACA,UACA,OACA,MACA,SACA,OACA,aACA,SACA,UACA,KACA,UACA,oBACA,UACA,+ECrUA,MAAA3oC,EAAgBrD,EAAQ,QACxBkT,EAAgBlT,EAAQ,QAIxBD,EAAAggC,MAAA,IAAAC,IAUAjgC,EAAA4+B,UAAA,EAAAD,EAAArqB,EAAA3B,KACA,IAAAI,EAAAw7B,EACA,MAAAv6B,EAAA,mDACAlP,KAAA65B,GACA3qB,GACAjB,EAAAiB,EAAA,GACAu6B,EAAAvuC,EAAAggC,MAAA3sB,IAAAN,IAEAqsB,QAAAC,KAAA,qCAAAV,GAEA4P,EACA57B,EAAA,KAAA47B,GAEAp7B,EAAAwrB,EAAArqB,EAAAwnB,eAAA,CAAAvmB,EAAA0mB,EAAArM,KACA,GAAAra,EAAA,OAAA5C,EAAA4C,GAEA,MAAAspB,EAAA7+B,EAAAwuC,eAAA5e,IACA7c,GAAA8rB,KAAAj6B,QAKA5E,EAAAggC,MAAAvmB,IAAA1G,EAAA8rB,GACAlsB,EAAA,KAAAksB,IALAlsB,EAAApC,MAAA,wDAkBAvQ,EAAAy/B,SAAA,EAAAZ,EAAA3D,KACAA,IAAA52B,MAAA,IACA,QAAAgB,EAAA,EAAA8K,EAAAyuB,EAAAj6B,OAAsCU,EAAA8K,EAAS9K,IAAA,CAC/C,IAAA2zB,EAAAwV,EAAA5P,EAAAv5B,GACA,OAAAmpC,EAAA,IACA,QACAvT,IAAAsN,UACA,MACA,QACAvP,IAAAwV,EAAAhpC,MAAA,GACAy1B,EAAAwT,EAAAxT,EAAAjC,GACA,MACA,QACAA,IAAAwV,EAAAhpC,MAAA,GACAy1B,IAAAz1B,MAAAwzB,GACA,MACA,QACAA,IAAAwV,EAAAhpC,MAAA,GACAy1B,EAAApyB,OAAA,EAAAmwB,GACA,OAGA,OAAAiC,EAAAz2B,KAAA,MAWA,MAAAiqC,EAAA,CAAA79B,EAAA6G,KACA,MAAAi3B,EAAA99B,EAAA,GAGA,OAFAA,EAAA,GAAAA,EAAA6G,EAAA7G,EAAAjM,QACAiM,EAAA6G,GAAAi3B,EACA99B,GAIA+9B,EAAA,4BACAC,EAAA,wCACAC,EAAA,wCACAC,QAAyBF,KAAoBC,KAC7CE,QAAuBJ,KAAYG,KACnCE,WAA2BL,QAAeG,QAC1CG,EAAA,cACAC,EAAA,sDAGAC,EAAA,kDAGAC,EAAA,8CAGAC,EAAA,oHAGAC,EAAA,IAAA1W,eACU+V,gBACVI,EAAAG,EAAA,IACAH,EAAAI,EAAA,IACAJ,EAAAK,EAAA,IACAL,EAAAM,EACA,sBAEAE,EAAA,IAAA3W,sBAAoD+V,iCAC/BM,0BACHN,IAClBK,EACA,wCACyBC,OACzB,OAEAO,EAAA,IAAA5W,kBAA4CmW,KAAYG,IAAW,KACnEO,EAAA,IAAA7W,kBAA4CmW,KAAYI,IAAS,KACjEO,EAAA,IAAA9W,kBAA4CmW,KAAYK,IAAU,KAClEO,EAAA,IAAA/W,kBAA4CmW,KAAYM,IAAQ,KAuBhEtvC,EAAAwuC,eAAA,CAAA5e,IACA,MAAAigB,EAAAN,EAAAzqC,KAAA8qB,GACAkgB,EAAAN,EAAA1qC,KAAA8qB,GACA,IAAAigB,IAAAC,EAAkC,YAElC,MAAAnsC,EAAAksC,EAAA,GAAArrC,QAAA,aACAurC,EAAAF,EAAA,GAAArrC,QAAA,aACAwrC,EAAAF,EAAA,GAAAtrC,QAAA,aAEA,IAAA+C,EAAAkoC,EAAA3qC,KAAAirC,GACA,MAAAE,EAAA1oC,KAAA,GACA/C,QAAA,aACAA,QAAA,sBACA+C,EAAAmoC,EAAA5qC,KAAAirC,GACA,MAAAG,EAAA3oC,KAAA,GACA/C,QAAA,aACAA,QAAA,sBACA+C,EAAAooC,EAAA7qC,KAAAirC,GACA,MAAAI,EAAA5oC,KAAA,GACA/C,QAAA,aACAA,QAAA,sBACA+C,EAAAqoC,EAAA9qC,KAAAirC,GACA,MAAAK,EAAA7oC,KAAA,GACA/C,QAAA,aACAA,QAAA,sBAEA2C,MAAmB,CAAA8oC,EAAAC,EAAAC,EAAAC,GAAA3rC,KAAA,QACnB4rC,EAAA,UAAA1sC,WACawD,SAAYA,aAAgBA,SACzC,iBACAmpC,EAAA,IAAAzX,OAAAwX,EAAA,KACAxR,EAAA,GACA,cAAAt3B,EAAA+oC,EAAAxrC,KAAAkrC,IAAA,CACA,IAAAj9B,EAAAxL,EAAA,IAAAA,EAAA,IAAAA,EAAA,GACA,OAAAwL,GACA,KAAAq9B,EACAvR,EAAAt4B,KAAA,IAAAgB,EAAA,IACA,MACA,KAAA0oC,EACApR,EAAAt4B,KAAA,KACA,MACA,KAAA2pC,EACArR,EAAAt4B,KAAA,IAAAgB,EAAA,IACA,MACA,KAAA4oC,EACAtR,EAAAt4B,KAAA,IAAAgB,EAAA,IACA,OAGA,OAAAs3B,IASA7+B,EAAAuwC,eAAA,EAAA/uC,EAAA05B,EAAA6D,KACA,IAAAyR,EACA,IAAAhvC,EAAA8B,IAMA,YAHAy7B,GACAK,QAAAC,KAAA,mCAAA79B,EAAAi3B,OAHA+X,EAAAhvC,EAAA8B,IAQA,IACAktC,EAAA9qC,mBAAA8qC,GACG,MAAAj7B,GAIH,YAHAwpB,GACAK,QAAAC,KAAA,yBAAA9pB,EAAA8X,UAMA,MAAAojB,EAAAntC,EAAApC,MAAAsvC,GAAA,UAIAC,EAAA5vC,OAEA,IAAAC,EAAA2vC,EAAA3vC,MAIAA,EAAA4vC,WAAA,MACAxV,IACAp6B,EAAA6vC,UAAAzV,GAGA15B,EAAA8B,MAAA9B,OAAAivC,KAWAzwC,EAAA8+B,gBAAA,EAAA1G,EAAAyG,EAAAE,KACA3G,EAAAtlB,QAAAtR,IACA,MAAA05B,EAAA2D,GAAAr9B,EAAAyF,EAAAjH,EAAAy/B,SAAAZ,EAAAr9B,EAAAyF,GAAA,KACAjH,EAAAuwC,eAAA/uC,EAAA05B,EAAA6D,8BCrQA,SAAAr0B,GAAA,IAAAwgC,EAAoBjrC,EAAQ,QAC5BoqC,EAAepqC,EAAQ,QACvBy0B,EAAaz0B,EAAQ,QACrB2wC,EAAkB3wC,EAAQ,QAC1BqD,EAAUrD,EAAQ,QAElB0C,EAAA3C,EAEA2C,EAAAwQ,QAAA,SAAAg4B,EAAA/3B,GAEA+3B,EADA,kBAAAA,EACA7nC,EAAApC,MAAAiqC,GAEAzW,EAAAyW,GAKA,IAAA0F,GAAA,IAAAnmC,EAAA49B,SAAAhoC,SAAAO,OAAA,wBAEAP,EAAA6qC,EAAA7qC,UAAAuwC,EACApwC,EAAA0qC,EAAAxqC,UAAAwqC,EAAA1qC,KACAC,EAAAyqC,EAAAzqC,KACAM,EAAAmqC,EAAAnqC,MAAA,IAGAP,IAAA,IAAAA,EAAA0D,QAAA,OACA1D,EAAA,IAAAA,EAAA,KAGA0qC,EAAA7nC,KAAA7C,EAAAH,EAAA,KAAAG,EAAA,KAAAC,EAAA,IAAAA,EAAA,IAAAM,EACAmqC,EAAAoB,QAAApB,EAAAoB,QAAA,OAAA9c,cACA0b,EAAApP,QAAAoP,EAAApP,SAAA,GAIA,IAAA+D,EAAA,IAAAoL,EAAAC,GAGA,OAFA/3B,GACA0sB,EAAAhuB,GAAA,WAAAsB,GACA0sB,GAGAn9B,EAAA0Q,IAAA,SAAA83B,EAAA/3B,GACA,IAAA0sB,EAAAn9B,EAAAwQ,QAAAg4B,EAAA/3B,GAEA,OADA0sB,EAAA1uB,MACA0uB,GAGAn9B,EAAAuoC,gBACAvoC,EAAA4nC,gBAAAF,EAAAE,gBAEA5nC,EAAAmuC,MAAA,aACAnuC,EAAAmuC,MAAAC,kBAAA,EAEApuC,EAAAquC,YAAA,IAAAruC,EAAAmuC,MAEAnuC,EAAAsuC,aAAAL,EAEAjuC,EAAAuuC,QAAA,CACA,WACA,UACA,OACA,SACA,MACA,OACA,OACA,WACA,QACA,aACA,QACA,OACA,SACA,UACA,QACA,OACA,WACA,YACA,QACA,MACA,SACA,SACA,YACA,QACA,SACA,8DCnFA,MAAAnW,EAAoB96B,EAAQ,QAAQ86B,YACpCoW,EAAoBlxC,EAAQ,QAC5BE,EAAoBF,EAAQ,QAC5Bi7B,EAAoBj7B,EAAQ,QAC5BkT,EAAoBlT,EAAQ,QAC5BmxC,EAAoBnxC,EAAQ,QAC5BoxC,EAAoBpxC,EAAQ,QAQ5BqxC,EAAA,CAAAhY,EAAAhlB,KACA,MAAAY,EAAAe,EAAA3B,GAUA,OATAg9B,EAAAH,QAAA7X,EAAAhlB,EAAA,CAAAiB,EAAAwkB,KACAxkB,EACAL,EAAAlD,KAAA,QAAAuD,GAIAg8B,EAAAr8B,EAAA6kB,EAAAzlB,KAGAY,GAEAnV,EAAAC,QAAAsxC,EAEAA,EAAA7V,aAAA0V,EAAA1V,aACA6V,EAAAH,UAAA7S,YACAgT,EAAAnZ,aAAAh4B,EAAAg4B,aACAmZ,EAAAjZ,cAAAl4B,EAAAk4B,cACAiZ,EAAA5X,WAAAv5B,EAAAu5B,WACA4X,EAAAzX,YAAA15B,EAAA05B,YACAyX,EAAAjY,cAAAl5B,EAAAk5B,cACAiY,EAAA1X,WAAAz5B,EAAAy5B,WACA0X,EAAAtR,MAAA,CACA9E,MAAA8E,MACAjG,KAAAoX,EAAAnR,OAIA,MAAA/pB,EAAA3B,IACA,MAAAY,EAAA,IAAA6lB,EAAA,CACA3mB,cAAAE,KAAAF,eAAA,OAGA,OADAc,EAAAid,QAAA,MAA0Bjd,EAAAs8B,cAAA,IAC1Bt8B,GAWAq8B,EAAA,CAAAr8B,EAAA6kB,EAAAzlB,KACAA,KAAA,GACA,MAAA9S,EAAArB,EAAAg4B,aAAA4B,EAAA3B,QAAA9jB,GACA,GAAA9S,aAAA+O,MAKA,YAHAkhC,aAAA,KACAv8B,EAAAlD,KAAA,QAAAxQ,KAKA,GADA0T,EAAAlD,KAAA,OAAA+nB,EAAAv4B,GACA0T,EAAAs8B,aAA4B,OAE5B,IAAAlK,EAAAQ,EAAA,EACA,MAAA4J,EAAAj/B,IACAq1B,GAAAr1B,EAAA7N,OACAsQ,EAAAlD,KAAA,WAAAS,EAAA7N,OAAAkjC,EAAAR,IAGA,IAAAxH,EACA,GAAAt+B,EAAA64B,OAAA74B,EAAA84B,UACAwF,EAAAsR,EAAA5vC,EAAA8B,IAAA,CACAquC,gBAAA5X,EAAA6X,qBACAC,MAAAv9B,EAAAu9B,OAAArwC,EAAA44B,MAAAjoB,KAAAwpB,MACAmW,WAAAx9B,EAAAw9B,WACAhW,eAAAxnB,EAAAwnB,eACAlmB,OAAApU,EAAA84B,UAAA,kBACAd,GAAAh4B,EAAAi3B,OAGAqH,EAAAhuB,GAAA,YAAAigC,EAAAC,KACA98B,EAAAlD,KAAA,WAAA+/B,EAAAvP,KAAAuP,EAAA/gC,IAAAghC,SAGG,CACH19B,EAAAu9B,QACArwC,EAAA8B,KAAA,UAAA+tC,EAAA9f,SAAAjd,EAAAu9B,QAEA,IAAA/V,EAAA50B,OAAA20B,OAAA,GAAyCvnB,EAAAwnB,eAAA,CACzCiL,cAAA,IAEAzyB,EAAA29B,QAAA39B,EAAA29B,MAAA9gC,OAAAmD,EAAA29B,MAAA7gC,OACA0qB,EAAAC,QAAA70B,OAAA20B,OAAA,GAA+CC,EAAAC,QAAA,CAC/CgM,eAAwBzzB,EAAA29B,MAAA9gC,OAAA,OAA8BmD,EAAA29B,MAAA7gC,KAAA,QAItD0uB,EAAA3sB,EAAA3R,EAAA8B,IAAAw4B,GAEAgE,EAAAhuB,GAAA,WAAAmqB,IACA/mB,EAAAs8B,cACAlK,IACAA,EAAAn9B,SAAA8xB,EAAAF,QAAA,yBAGA+D,EAAAhuB,GAAA,OAAA4/B,GAGAx8B,EAAAid,QAAA,MACAjd,EAAAs8B,cAAA,EACA1R,EAAA4I,OAAA5I,EAAA4I,QACA5I,EAAA1uB,MACA0uB,EAAAoS,eAAA,OAAAR,GACA5R,EAAA6I,WAIA,CACA,0DACA71B,QAAAia,IACA+S,EAAAqS,gBAAAplB,EAAAsD,IACAnb,EAAAlD,KAAA+a,EAAAsD,OAGAyP,EAAA2I,KAAAvzB,IAYAo8B,EAAAc,iBAAA,EAAArY,EAAAzlB,KACA,MAAAY,EAAAe,EAAA3B,GACA,IAAAylB,EAAAwF,KACA,UAAAhvB,MAAA,yFAMA,OAHAkhC,aAAA,KACAF,EAAAr8B,EAAA6kB,EAAAzlB,KAEAY,0CC1JA,SAAAuxB,GAUA,SAAAjU,EAAA9lB,EAAA2lC,EAAAC,EAAAC,GACA,uBAAA7lC,EACA,UAAAzI,UAAA,0CAEA,IACAiW,EAAA5U,EADA8K,EAAA+J,UAAAvV,OAEA,OAAAwL,GACA,OACA,OACA,OAAAq2B,EAAAjU,SAAA9lB,GACA,OACA,OAAA+5B,EAAAjU,SAAA,WACA9lB,EAAA5I,KAAA,KAAAuuC,KAEA,OACA,OAAA5L,EAAAjU,SAAA,WACA9lB,EAAA5I,KAAA,KAAAuuC,EAAAC,KAEA,OACA,OAAA7L,EAAAjU,SAAA,WACA9lB,EAAA5I,KAAA,KAAAuuC,EAAAC,EAAAC,KAEA,QACAr4B,EAAA,IAAA/J,MAAAC,EAAA,GACA9K,EAAA,EACA,MAAAA,EAAA4U,EAAAtV,OACAsV,EAAA5U,KAAA6U,UAAA7U,GAEA,OAAAmhC,EAAAjU,SAAA,WACA9lB,EAAAsM,MAAA,KAAAkB,OArCAusB,EAAAt3B,SACA,IAAAs3B,EAAAt3B,QAAAhL,QAAA,QACA,IAAAsiC,EAAAt3B,QAAAhL,QAAA,YAAAsiC,EAAAt3B,QAAAhL,QAAA,SACApE,EAAAC,QAAA,CAAoBwyB,YAEpBzyB,EAAAC,QAAAymC,gDCPA,SAAA/7B,GAAA1K,EAAA6qC,MAAA5Z,EAAAvmB,EAAAmgC,QAAA5Z,EAAAvmB,EAAA8nC,gBAEAxyC,EAAAyyC,eAAAxhB,EAAAvmB,EAAAgoC,gBAEA1yC,EAAAyrC,gBAAAxa,EAAAvmB,EAAAoiC,iBAEA9sC,EAAAwsC,iBAAA,EACA,IACA,IAAAC,KAAA,KAAAkG,YAAA,KACA3yC,EAAAwsC,iBAAA,EACC,MAAAjjC,IAKD,IAAAwiC,EACA,SAAA6G,IAEA,QAAAvjC,IAAA08B,EAAA,OAAAA,EAEA,GAAArhC,EAAA6iC,eAAA,CACAxB,EAAA,IAAArhC,EAAA6iC,eAIA,IACAxB,EAAAyB,KAAA,MAAA9iC,EAAAmoC,eAAA,2BACG,MAAAtpC,GACHwiC,EAAA,WAIAA,EAAA,KAEA,OAAAA,EAGA,SAAA+G,EAAAxmC,GACA,IAAAy/B,EAAA6G,IACA,IAAA7G,EAAA,SACA,IAEA,OADAA,EAAA0B,aAAAnhC,EACAy/B,EAAA0B,eAAAnhC,EACE,MAAA/C,IACF,SAKA,IAAAwpC,EAAA,qBAAAroC,EAAAioC,YACAK,EAAAD,GAAA9hB,EAAAvmB,EAAAioC,YAAA9uC,UAAA4B,OAkBA,SAAAwrB,EAAAhkB,GACA,0BAAAA,EAfAjN,EAAAgrC,YAAAhrC,EAAA6qC,OAAAkI,GAAAD,EAAA,eAIA9yC,EAAA+qC,UAAA/qC,EAAA6qC,OAAAmI,GAAAF,EAAA,aACA9yC,EAAA8qC,uBAAA9qC,EAAA6qC,OAAAkI,GACAD,EAAA,2BAIA9yC,EAAA0rC,iBAAA1rC,EAAA6qC,SAAA+H,KAAA3hB,EAAA2hB,IAAAlH,kBAEA1rC,EAAAirC,QAAAha,EAAAvmB,EAAAuoC,SAMAlH,EAAA,gECxEA,SAAArhC,EAAA+7B,GAyBA,IAAAvU,EAAUjyB,EAAQ,QAGlBF,EAAAC,QAAAkzC,EAGA,IAIA3/B,EAJA+c,EAAcrwB,EAAQ,QAOtBizC,EAAAC,gBAGSlzC,EAAQ,QAAQgyB,aAAzB,IAEAmhB,EAAA,SAAAC,EAAA/mC,GACA,OAAA+mC,EAAAC,UAAAhnC,GAAA1H,QAKAuR,EAAalW,EAAQ,QAKrByV,EAAazV,EAAQ,QAAayV,OAClC69B,EAAA7oC,EAAAwF,YAAA,aACA,SAAAsjC,EAAA/gC,GACA,OAAAiD,EAAA4sB,KAAA7vB,GAEA,SAAAghC,EAAA9vC,GACA,OAAA+R,EAAAoE,SAAAnW,iBAAA4vC,EAMA,IAAApzC,EAAWF,EAAQ,QACnBE,EAAAiV,SAAgBnV,EAAQ,QAIxB,IAAAyzC,EAAgBzzC,EAAQ,GACxB8+B,OAAA,EAEAA,EADA2U,KAAAC,SACAD,EAAAC,SAAA,UAEA,aAIA,IAEA35B,EAFAkb,EAAiBj1B,EAAQ,QACzB2zC,EAAkB3zC,EAAQ,QAG1BE,EAAAiV,SAAA89B,EAAA/8B,GAEA,IAAA09B,EAAA,6CAEA,SAAA1B,EAAAkB,EAAAtmB,EAAArgB,GAGA,uBAAA2mC,EAAAlB,gBAAA,OAAAkB,EAAAlB,gBAAAplB,EAAArgB,GAMA2mC,EAAAS,SAAAT,EAAAS,QAAA/mB,GAAyEuD,EAAA+iB,EAAAS,QAAA/mB,IAAAsmB,EAAAS,QAAA/mB,GAAAvmB,QAAAkG,GAA6E2mC,EAAAS,QAAA/mB,GAAA,CAAArgB,EAAA2mC,EAAAS,QAAA/mB,IAAtJsmB,EAAAvhC,GAAAib,EAAArgB,GAGA,SAAAymC,EAAA7+B,EAAAY,GACA3B,KAAqBtT,EAAQ,QAE7BqU,KAAA,GAOA,IAAAy/B,EAAA7+B,aAAA3B,EAIAlT,KAAA2zC,aAAA1/B,EAAA0/B,WAEAD,IAAA1zC,KAAA2zC,WAAA3zC,KAAA2zC,cAAA1/B,EAAA2/B,oBAIA,IAAAC,EAAA5/B,EAAAF,cACA+/B,EAAA7/B,EAAA8/B,sBACAC,EAAAh0C,KAAA2zC,WAAA,SAEA3zC,KAAA+T,cAAA8/B,GAAA,IAAAA,IAAiDH,IAAAI,GAAA,IAAAA,KAA0FE,EAG3Ih0C,KAAA+T,cAAAjI,KAAAD,MAAA7L,KAAA+T,eAKA/T,KAAAyvB,OAAA,IAAAoF,EACA70B,KAAAuE,OAAA,EACAvE,KAAAi0C,MAAA,KACAj0C,KAAAk0C,WAAA,EACAl0C,KAAAm0C,QAAA,KACAn0C,KAAAsyB,OAAA,EACAtyB,KAAAuyB,YAAA,EACAvyB,KAAA6T,SAAA,EAMA7T,KAAAqU,MAAA,EAIArU,KAAA8T,cAAA,EACA9T,KAAAo0C,iBAAA,EACAp0C,KAAAq0C,mBAAA,EACAr0C,KAAAs0C,iBAAA,EAGAt0C,KAAAgyB,WAAA,EAKAhyB,KAAAu0C,gBAAAtgC,EAAAsgC,iBAAA,OAGAv0C,KAAAw0C,WAAA,EAGAx0C,KAAAy0C,aAAA,EAEAz0C,KAAA00C,QAAA,KACA10C,KAAAqS,SAAA,KACA4B,EAAA5B,WACAsH,MAAwC/Z,EAAQ,QAAiB+Z,eACjE3Z,KAAA00C,QAAA,IAAA/6B,EAAA1F,EAAA5B,UACArS,KAAAqS,SAAA4B,EAAA5B,UAIA,SAAAwgC,EAAA5+B,GAGA,GAFAf,KAAqBtT,EAAQ,UAE7BI,gBAAA6yC,GAAA,WAAAA,EAAA5+B,GAEAjU,KAAA4T,eAAA,IAAAk/B,EAAA7+B,EAAAjU,MAGAA,KAAA8Y,UAAA,EAEA7E,IACA,oBAAAA,EAAAu0B,OAAAxoC,KAAAgU,MAAAC,EAAAu0B,MAEA,oBAAAv0B,EAAA6d,UAAA9xB,KAAAiV,SAAAhB,EAAA6d,UAGAhc,EAAArS,KAAAzD,MA2DA,SAAA20C,EAAA9/B,EAAAzC,EAAAC,EAAAuiC,EAAAC,GACA,IAKAzhC,EALAsD,EAAA7B,EAAAjB,eACA,OAAAxB,GACAsE,EAAA7C,SAAA,EACAihC,EAAAjgC,EAAA6B,KAGAm+B,IAAAzhC,EAAA2hC,EAAAr+B,EAAAtE,IACAgB,EACAyB,EAAAlD,KAAA,QAAAyB,GACKsD,EAAAi9B,YAAAvhC,KAAA7N,OAAA,GACL,kBAAA6N,GAAAsE,EAAAi9B,YAAA9sC,OAAAmuC,eAAA5iC,KAAAiD,EAAA7R,YACA4O,EAAA+gC,EAAA/gC,IAGAwiC,EACAl+B,EAAA6b,WAAA1d,EAAAlD,KAAA,YAAAzB,MAAA,qCAAkG+kC,EAAApgC,EAAA6B,EAAAtE,GAAA,GAC3FsE,EAAA4b,MACPzd,EAAAlD,KAAA,YAAAzB,MAAA,6BAEAwG,EAAA7C,SAAA,EACA6C,EAAAg+B,UAAAriC,GACAD,EAAAsE,EAAAg+B,QAAAt8B,MAAAhG,GACAsE,EAAAi9B,YAAA,IAAAvhC,EAAA7N,OAAA0wC,EAAApgC,EAAA6B,EAAAtE,GAAA,GAA4F8iC,EAAArgC,EAAA6B,IAE5Fu+B,EAAApgC,EAAA6B,EAAAtE,GAAA,KAGKwiC,IACLl+B,EAAA7C,SAAA,IAIA,OAAAshC,EAAAz+B,GAGA,SAAAu+B,EAAApgC,EAAA6B,EAAAtE,EAAAwiC,GACAl+B,EAAAy9B,SAAA,IAAAz9B,EAAAnS,SAAAmS,EAAArC,MACAQ,EAAAlD,KAAA,OAAAS,GACAyC,EAAA2zB,KAAA,KAGA9xB,EAAAnS,QAAAmS,EAAAi9B,WAAA,EAAAvhC,EAAA7N,OACAqwC,EAAAl+B,EAAA+Y,OAAAtpB,QAAAiM,GAAgDsE,EAAA+Y,OAAAvpB,KAAAkM,GAEhDsE,EAAA5C,cAAAshC,EAAAvgC,IAEAqgC,EAAArgC,EAAA6B,GAGA,SAAAq+B,EAAAr+B,EAAAtE,GACA,IAAAgB,EAIA,OAHAggC,EAAAhhC,IAAA,kBAAAA,QAAApD,IAAAoD,GAAAsE,EAAAi9B,aACAvgC,EAAA,IAAAxP,UAAA,oCAEAwP,EAUA,SAAA+hC,EAAAz+B,GACA,OAAAA,EAAA4b,QAAA5b,EAAA5C,cAAA4C,EAAAnS,OAAAmS,EAAA3C,eAAA,IAAA2C,EAAAnS,QA1HAsC,OAAAsS,eAAA05B,EAAArvC,UAAA,aACAwP,IAAA,WACA,YAAAhE,IAAAhP,KAAA4T,gBAGA5T,KAAA4T,eAAAoe,WAEA5Y,IAAA,SAAAxM,GAGA5M,KAAA4T,iBAMA5T,KAAA4T,eAAAoe,UAAAplB,MAIAimC,EAAArvC,UAAAsuB,QAAAyhB,EAAAzhB,QACA+gB,EAAArvC,UAAA6xC,WAAA9B,EAAAlhB,UACAwgB,EAAArvC,UAAAyR,SAAA,SAAAC,EAAAnC,GACA/S,KAAAkG,KAAA,MACA6M,EAAAmC,IAOA29B,EAAArvC,UAAA0C,KAAA,SAAAkM,EAAAC,GACA,IACAwiC,EADAn+B,EAAA1W,KAAA4T,eAgBA,OAbA8C,EAAAi9B,WAUAkB,GAAA,EATA,kBAAAziC,IACAC,KAAAqE,EAAA69B,gBACAliC,IAAAqE,EAAArE,WACAD,EAAAiD,EAAA4sB,KAAA7vB,EAAAC,GACAA,EAAA,IAEAwiC,GAAA,GAMAF,EAAA30C,KAAAoS,EAAAC,GAAA,EAAAwiC,IAIAhC,EAAArvC,UAAA2C,QAAA,SAAAiM,GACA,OAAAuiC,EAAA30C,KAAAoS,EAAA,aAwEAygC,EAAArvC,UAAA8xC,SAAA,WACA,WAAAt1C,KAAA4T,eAAAugC,SAIAtB,EAAArvC,UAAAk8B,YAAA,SAAAW,GAIA,OAHA1mB,MAAsC/Z,EAAQ,QAAiB+Z,eAC/D3Z,KAAA4T,eAAA8gC,QAAA,IAAA/6B,EAAA0mB,GACArgC,KAAA4T,eAAAvB,SAAAguB,EACArgC,MAIA,IAAAu1C,EAAA,QACA,SAAAC,EAAArnC,GAcA,OAbAA,GAAAonC,EACApnC,EAAAonC,GAIApnC,IACAA,OAAA,EACAA,OAAA,EACAA,OAAA,EACAA,OAAA,EACAA,OAAA,GACAA,KAEAA,EAKA,SAAAsnC,EAAAtnC,EAAAuI,GACA,OAAAvI,GAAA,OAAAuI,EAAAnS,QAAAmS,EAAA4b,MAAA,EACA5b,EAAAi9B,WAAA,EACAxlC,MAEAuI,EAAAy9B,SAAAz9B,EAAAnS,OAAAmS,EAAA+Y,OAAAqF,KAAAzhB,KAAA9O,OAA4EmS,EAAAnS,QAG5E4J,EAAAuI,EAAA3C,gBAAA2C,EAAA3C,cAAAyhC,EAAArnC,IACAA,GAAAuI,EAAAnS,OAAA4J,EAEAuI,EAAA4b,MAIA5b,EAAAnS,QAHAmS,EAAA5C,cAAA,EACA,IA0GA,SAAAghC,EAAAjgC,EAAA6B,GACA,IAAAA,EAAA4b,MAAA,CACA,GAAA5b,EAAAg+B,QAAA,CACA,IAAAtiC,EAAAsE,EAAAg+B,QAAA3jC,MACAqB,KAAA7N,SACAmS,EAAA+Y,OAAAvpB,KAAAkM,GACAsE,EAAAnS,QAAAmS,EAAAi9B,WAAA,EAAAvhC,EAAA7N,QAGAmS,EAAA4b,OAAA,EAGA8iB,EAAAvgC,IAMA,SAAAugC,EAAAvgC,GACA,IAAA6B,EAAA7B,EAAAjB,eACA8C,EAAA5C,cAAA,EACA4C,EAAA09B,kBACA1V,EAAA,eAAAhoB,EAAAy9B,SACAz9B,EAAA09B,iBAAA,EACA19B,EAAArC,KAAAwd,EAAAM,SAAAujB,EAAA7gC,GAAwD6gC,EAAA7gC,IAIxD,SAAA6gC,EAAA7gC,GACA6pB,EAAA,iBACA7pB,EAAAlD,KAAA,YACAgkC,EAAA9gC,GASA,SAAAqgC,EAAArgC,EAAA6B,GACAA,EAAA+9B,cACA/9B,EAAA+9B,aAAA,EACA5iB,EAAAM,SAAAyjB,EAAA/gC,EAAA6B,IAIA,SAAAk/B,EAAA/gC,EAAA6B,GACA,IAAA3G,EAAA2G,EAAAnS,OACA,OAAAmS,EAAA7C,UAAA6C,EAAAy9B,UAAAz9B,EAAA4b,OAAA5b,EAAAnS,OAAAmS,EAAA3C,cAAA,CAGA,GAFA2qB,EAAA,wBACA7pB,EAAA2zB,KAAA,GACAz4B,IAAA2G,EAAAnS,OAEA,MAAYwL,EAAA2G,EAAAnS,OAEZmS,EAAA+9B,aAAA,EAkJA,SAAAoB,EAAAlhB,GACA,kBACA,IAAAje,EAAAie,EAAA/gB,eACA8qB,EAAA,cAAAhoB,EAAA89B,YACA99B,EAAA89B,YAAA99B,EAAA89B,aACA,IAAA99B,EAAA89B,YAAAzB,EAAApe,EAAA,UACAje,EAAAy9B,SAAA,EACAwB,EAAAhhB,KAgFA,SAAAmhB,EAAAnrC,GACA+zB,EAAA,4BACA/zB,EAAA69B,KAAA,GAeA,SAAAnwB,EAAAxD,EAAA6B,GACAA,EAAA49B,kBACA59B,EAAA49B,iBAAA,EACAziB,EAAAM,SAAA4jB,EAAAlhC,EAAA6B,IAIA,SAAAq/B,EAAAlhC,EAAA6B,GACAA,EAAA7C,UACA6qB,EAAA,iBACA7pB,EAAA2zB,KAAA,IAGA9xB,EAAA49B,iBAAA,EACA59B,EAAA89B,WAAA,EACA3/B,EAAAlD,KAAA,UACAgkC,EAAA9gC,GACA6B,EAAAy9B,UAAAz9B,EAAA7C,SAAAgB,EAAA2zB,KAAA,GAaA,SAAAmN,EAAA9gC,GACA,IAAA6B,EAAA7B,EAAAjB,eACA8qB,EAAA,OAAAhoB,EAAAy9B,SACA,MAAAz9B,EAAAy9B,SAAA,OAAAt/B,EAAA2zB,SAmFA,SAAAwN,EAAA7nC,EAAAuI,GAEA,WAAAA,EAAAnS,OAAA,MAGAmS,EAAAi9B,WAAAze,EAAAxe,EAAA+Y,OAAA9nB,SAAmDwG,MAAAuI,EAAAnS,QAEnD2wB,EAAAxe,EAAAg+B,QAAAh+B,EAAA+Y,OAAArrB,KAAA,IAAmD,IAAAsS,EAAA+Y,OAAAlrB,OAAAmS,EAAA+Y,OAAAqF,KAAAzhB,KAAiEqD,EAAA+Y,OAAA/tB,OAAAgV,EAAAnS,QACpHmS,EAAA+Y,OAAA0F,SAGAD,EAAA+gB,EAAA9nC,EAAAuI,EAAA+Y,OAAA/Y,EAAAg+B,SAGAxf,GAVA,IAAAA,EAgBA,SAAA+gB,EAAA9nC,EAAA+nC,EAAAC,GACA,IAAAjhB,EAYA,OAXA/mB,EAAA+nC,EAAAphB,KAAAzhB,KAAA9O,QAEA2wB,EAAAghB,EAAAphB,KAAAzhB,KAAAjO,MAAA,EAAA+I,GACA+nC,EAAAphB,KAAAzhB,KAAA6iC,EAAAphB,KAAAzhB,KAAAjO,MAAA+I,IAGA+mB,EAFG/mB,IAAA+nC,EAAAphB,KAAAzhB,KAAA9O,OAEH2xC,EAAAvuC,QAGAwuC,EAAAC,EAAAjoC,EAAA+nC,GAAAG,EAAAloC,EAAA+nC,GAEAhhB,EAOA,SAAAkhB,EAAAjoC,EAAA+nC,GACA,IAAA7vC,EAAA6vC,EAAAphB,KACA3qB,EAAA,EACA+qB,EAAA7uB,EAAAgN,KACAlF,GAAA+mB,EAAA3wB,OACA,MAAA8B,IAAA4uB,KAAA,CACA,IAAAtrB,EAAAtD,EAAAgN,KACAotB,EAAAtyB,EAAAxE,EAAApF,OAAAoF,EAAApF,OAAA4J,EAGA,GAFAsyB,IAAA92B,EAAApF,OAAA2wB,GAAAvrB,EAAsCurB,GAAAvrB,EAAAvE,MAAA,EAAA+I,GACtCA,GAAAsyB,EACA,IAAAtyB,EAAA,CACAsyB,IAAA92B,EAAApF,UACA4F,EACA9D,EAAA4uB,KAAAihB,EAAAphB,KAAAzuB,EAAA4uB,KAAuCihB,EAAAphB,KAAAohB,EAAAnhB,KAAA,OAEvCmhB,EAAAphB,KAAAzuB,EACAA,EAAAgN,KAAA1J,EAAAvE,MAAAq7B,IAEA,QAEAt2B,EAGA,OADA+rC,EAAA3xC,QAAA4F,EACA+qB,EAMA,SAAAmhB,EAAAloC,EAAA+nC,GACA,IAAAhhB,EAAA7f,EAAAggB,YAAAlnB,GACA9H,EAAA6vC,EAAAphB,KACA3qB,EAAA,EACA9D,EAAAgN,KAAA8N,KAAA+T,GACA/mB,GAAA9H,EAAAgN,KAAA9O,OACA,MAAA8B,IAAA4uB,KAAA,CACA,IAAAuM,EAAAn7B,EAAAgN,KACAotB,EAAAtyB,EAAAqzB,EAAAj9B,OAAAi9B,EAAAj9B,OAAA4J,EAGA,GAFAqzB,EAAArgB,KAAA+T,IAAA3wB,OAAA4J,EAAA,EAAAsyB,GACAtyB,GAAAsyB,EACA,IAAAtyB,EAAA,CACAsyB,IAAAe,EAAAj9B,UACA4F,EACA9D,EAAA4uB,KAAAihB,EAAAphB,KAAAzuB,EAAA4uB,KAAuCihB,EAAAphB,KAAAohB,EAAAnhB,KAAA,OAEvCmhB,EAAAphB,KAAAzuB,EACAA,EAAAgN,KAAAmuB,EAAAp8B,MAAAq7B,IAEA,QAEAt2B,EAGA,OADA+rC,EAAA3xC,QAAA4F,EACA+qB,EAGA,SAAAohB,EAAAzhC,GACA,IAAA6B,EAAA7B,EAAAjB,eAIA,GAAA8C,EAAAnS,OAAA,YAAA2L,MAAA,8CAEAwG,EAAA6b,aACA7b,EAAA4b,OAAA,EACAT,EAAAM,SAAAokB,EAAA7/B,EAAA7B,IAIA,SAAA0hC,EAAA7/B,EAAA7B,GAEA6B,EAAA6b,YAAA,IAAA7b,EAAAnS,SACAmS,EAAA6b,YAAA,EACA1d,EAAAiE,UAAA,EACAjE,EAAAlD,KAAA,QAIA,SAAA7N,EAAAgmC,EAAAvb,GACA,QAAAtpB,EAAA,EAAAQ,EAAAqkC,EAAAvlC,OAAgCU,EAAAQ,EAAOR,IACvC,GAAA6kC,EAAA7kC,KAAAspB,EAAA,OAAAtpB,EAEA,SApoBA4tC,EAAArvC,UAAAglC,KAAA,SAAAr6B,GACAuwB,EAAA,OAAAvwB,GACAA,EAAArE,SAAAqE,EAAA,IACA,IAAAuI,EAAA1W,KAAA4T,eACA4iC,EAAAroC,EAOA,GALA,IAAAA,IAAAuI,EAAA09B,iBAAA,GAKA,IAAAjmC,GAAAuI,EAAA5C,eAAA4C,EAAAnS,QAAAmS,EAAA3C,eAAA2C,EAAA4b,OAGA,OAFAoM,EAAA,qBAAAhoB,EAAAnS,OAAAmS,EAAA4b,OACA,IAAA5b,EAAAnS,QAAAmS,EAAA4b,MAAAgkB,EAAAt2C,MAA6Do1C,EAAAp1C,MAC7D,KAMA,GAHAmO,EAAAsnC,EAAAtnC,EAAAuI,GAGA,IAAAvI,GAAAuI,EAAA4b,MAEA,OADA,IAAA5b,EAAAnS,QAAA+xC,EAAAt2C,MACA,KA0BA,IA4BAk1B,EA5BAuhB,EAAA//B,EAAA5C,aAiDA,OAhDA4qB,EAAA,gBAAA+X,IAGA,IAAA//B,EAAAnS,QAAAmS,EAAAnS,OAAA4J,EAAAuI,EAAA3C,iBACA0iC,GAAA,EACA/X,EAAA,6BAAA+X,IAKA//B,EAAA4b,OAAA5b,EAAA7C,SACA4iC,GAAA,EACA/X,EAAA,mBAAA+X,IACGA,IACH/X,EAAA,WACAhoB,EAAA7C,SAAA,EACA6C,EAAArC,MAAA,EAEA,IAAAqC,EAAAnS,SAAAmS,EAAA5C,cAAA,GAEA9T,KAAAgU,MAAA0C,EAAA3C,eACA2C,EAAArC,MAAA,EAGAqC,EAAA7C,UAAA1F,EAAAsnC,EAAAe,EAAA9/B,KAIAwe,EAAA/mB,EAAA,EAAA6nC,EAAA7nC,EAAAuI,GAAsC,KAEtC,OAAAwe,GACAxe,EAAA5C,cAAA,EACA3F,EAAA,GAEAuI,EAAAnS,QAAA4J,EAGA,IAAAuI,EAAAnS,SAGAmS,EAAA4b,QAAA5b,EAAA5C,cAAA,GAGA0iC,IAAAroC,GAAAuI,EAAA4b,OAAAgkB,EAAAt2C,OAGA,OAAAk1B,GAAAl1B,KAAA2R,KAAA,OAAAujB,GAEAA,GAkEA2d,EAAArvC,UAAAwQ,MAAA,SAAA7F,GACAnO,KAAA2R,KAAA,YAAAzB,MAAA,gCAGA2iC,EAAArvC,UAAA4kC,KAAA,SAAAsO,EAAAC,GACA,IAAAhiB,EAAA30B,KACA0W,EAAA1W,KAAA4T,eAEA,OAAA8C,EAAAw9B,YACA,OACAx9B,EAAAu9B,MAAAyC,EACA,MACA,OACAhgC,EAAAu9B,MAAA,CAAAv9B,EAAAu9B,MAAAyC,GACA,MACA,QACAhgC,EAAAu9B,MAAA/tC,KAAAwwC,GACA,MAEAhgC,EAAAw9B,YAAA,EACAxV,EAAA,wBAAAhoB,EAAAw9B,WAAAyC,GAEA,IAAAC,IAAAD,IAAA,IAAAA,EAAA5lC,MAAA2lC,IAAAtQ,EAAAyQ,QAAAH,IAAAtQ,EAAA0Q,OAEAC,EAAAH,EAAA59B,EAAAsvB,EAIA,SAAA0O,EAAAl+B,EAAAm+B,GACAvY,EAAA,YACA5lB,IAAA6b,GACAsiB,IAAA,IAAAA,EAAAC,aACAD,EAAAC,YAAA,EACAC,KAKA,SAAAn+B,IACA0lB,EAAA,SACAgY,EAAA3lC,MAfA2F,EAAA6b,WAAAV,EAAAM,SAAA4kB,GAA4CpiB,EAAAyiB,KAAA,MAAAL,GAE5CL,EAAAjlC,GAAA,SAAAulC,GAoBA,IAAAK,EAAAxB,EAAAlhB,GACA+hB,EAAAjlC,GAAA,QAAA4lC,GAEA,IAAAC,GAAA,EACA,SAAAH,IACAzY,EAAA,WAEAgY,EAAA7E,eAAA,QAAA0F,GACAb,EAAA7E,eAAA,SAAA2F,GACAd,EAAA7E,eAAA,QAAAwF,GACAX,EAAA7E,eAAA,QAAA54B,GACAy9B,EAAA7E,eAAA,SAAAmF,GACAriB,EAAAkd,eAAA,MAAA74B,GACA2b,EAAAkd,eAAA,MAAAvJ,GACA3T,EAAAkd,eAAA,OAAAR,GAEAiG,GAAA,GAOA5gC,EAAA89B,YAAAkC,EAAA5hC,iBAAA4hC,EAAA5hC,eAAA2iC,WAAAJ,IAOA,IAAAK,GAAA,EAEA,SAAArG,EAAAj/B,GACAssB,EAAA,UACAgZ,GAAA,EACA,IAAAxiB,EAAAwhB,EAAAt+B,MAAAhG,IACA,IAAA8iB,GAAAwiB,KAKA,IAAAhhC,EAAAw9B,YAAAx9B,EAAAu9B,QAAAyC,GAAAhgC,EAAAw9B,WAAA,QAAApwC,EAAA4S,EAAAu9B,MAAAyC,MAAAY,IACA5Y,EAAA,8BAAA/J,EAAA/gB,eAAA4gC,YACA7f,EAAA/gB,eAAA4gC,aACAkD,GAAA,GAEA/iB,EAAAgjB,SAMA,SAAA1+B,EAAA7F,GACAsrB,EAAA,UAAAtrB,GACAk1B,IACAoO,EAAA7E,eAAA,QAAA54B,GACA,IAAA85B,EAAA2D,EAAA,UAAAA,EAAA/kC,KAAA,QAAAyB,GAOA,SAAAmkC,IACAb,EAAA7E,eAAA,SAAA2F,GACAlP,IAGA,SAAAkP,IACA9Y,EAAA,YACAgY,EAAA7E,eAAA,QAAA0F,GACAjP,IAIA,SAAAA,IACA5J,EAAA,UACA/J,EAAA2T,OAAAoO,GAYA,OA1DA/hB,EAAAljB,GAAA,OAAA4/B,GA6BAS,EAAA4E,EAAA,QAAAz9B,GAOAy9B,EAAAU,KAAA,QAAAG,GAMAb,EAAAU,KAAA,SAAAI,GAQAd,EAAA/kC,KAAA,OAAAgjB,GAGAje,EAAAy9B,UACAzV,EAAA,eACA/J,EAAAtc,UAGAq+B,GAeA7D,EAAArvC,UAAA8kC,OAAA,SAAAoO,GACA,IAAAhgC,EAAA1W,KAAA4T,eACAqjC,EAAA,CAAoBC,YAAA,GAGpB,OAAAxgC,EAAAw9B,WAAA,OAAAl0C,KAGA,OAAA0W,EAAAw9B,WAEA,OAAAwC,OAAAhgC,EAAAu9B,MAAAj0C,MAEA02C,MAAAhgC,EAAAu9B,OAGAv9B,EAAAu9B,MAAA,KACAv9B,EAAAw9B,WAAA,EACAx9B,EAAAy9B,SAAA,EACAuC,KAAA/kC,KAAA,SAAA3R,KAAAi3C,GACAj3C,MAKA,IAAA02C,EAAA,CAEA,IAAAkB,EAAAlhC,EAAAu9B,MACAlkC,EAAA2G,EAAAw9B,WACAx9B,EAAAu9B,MAAA,KACAv9B,EAAAw9B,WAAA,EACAx9B,EAAAy9B,SAAA,EAEA,QAAAlvC,EAAA,EAAmBA,EAAA8K,EAAS9K,IAC5B2yC,EAAA3yC,GAAA0M,KAAA,SAAA3R,KAAAi3C,GACK,OAAAj3C,KAIL,IAAA6N,EAAA/J,EAAA4S,EAAAu9B,MAAAyC,GACA,WAAA7oC,EAAA7N,MAEA0W,EAAAu9B,MAAAxrC,OAAAoF,EAAA,GACA6I,EAAAw9B,YAAA,EACA,IAAAx9B,EAAAw9B,aAAAx9B,EAAAu9B,MAAAv9B,EAAAu9B,MAAA,IAEAyC,EAAA/kC,KAAA,SAAA3R,KAAAi3C,GAEAj3C,OAKA6yC,EAAArvC,UAAAiO,GAAA,SAAAiH,EAAArM,GACA,IAAAuvB,EAAA9lB,EAAAtS,UAAAiO,GAAAhO,KAAAzD,KAAA0Y,EAAArM,GAEA,YAAAqM,GAEA,IAAA1Y,KAAA4T,eAAAugC,SAAAn0C,KAAAqY,cACG,gBAAAK,EAAA,CACH,IAAAhC,EAAA1W,KAAA4T,eACA8C,EAAA6b,YAAA7b,EAAA29B,oBACA39B,EAAA29B,kBAAA39B,EAAA5C,cAAA,EACA4C,EAAA09B,iBAAA,EACA19B,EAAA7C,QAEO6C,EAAAnS,QACP6wC,EAAAp1C,MAFA6xB,EAAAM,SAAA2jB,EAAA91C,OAOA,OAAA47B,GAEAiX,EAAArvC,UAAAq0C,YAAAhF,EAAArvC,UAAAiO,GASAohC,EAAArvC,UAAA6U,OAAA,WACA,IAAA3B,EAAA1W,KAAA4T,eAMA,OALA8C,EAAAy9B,UACAzV,EAAA,UACAhoB,EAAAy9B,SAAA,EACA97B,EAAArY,KAAA0W,IAEA1W,MAuBA6yC,EAAArvC,UAAAm0C,MAAA,WAOA,OANAjZ,EAAA,wBAAA1+B,KAAA4T,eAAAugC,UACA,IAAAn0C,KAAA4T,eAAAugC,UACAzV,EAAA,SACA1+B,KAAA4T,eAAAugC,SAAA,EACAn0C,KAAA2R,KAAA,UAEA3R,MAYA6yC,EAAArvC,UAAAs0C,KAAA,SAAAjjC,GACA,IAAAF,EAAA3U,KAEA0W,EAAA1W,KAAA4T,eACAmkC,GAAA,EA4BA,QAAA9yC,KA1BA4P,EAAApD,GAAA,iBAEA,GADAitB,EAAA,eACAhoB,EAAAg+B,UAAAh+B,EAAA4b,MAAA,CACA,IAAAlgB,EAAAsE,EAAAg+B,QAAA3jC,MACAqB,KAAA7N,QAAAoQ,EAAAzO,KAAAkM,GAGAuC,EAAAzO,KAAA,QAGA2O,EAAApD,GAAA,gBAAAW,GAKA,GAJAssB,EAAA,gBACAhoB,EAAAg+B,UAAAtiC,EAAAsE,EAAAg+B,QAAAt8B,MAAAhG,MAGAsE,EAAAi9B,YAAA,OAAAvhC,QAAApD,IAAAoD,KAA4EsE,EAAAi9B,YAAAvhC,KAAA7N,QAAA,CAE5E,IAAA2wB,EAAAvgB,EAAAzO,KAAAkM,GACA8iB,IACA6iB,GAAA,EACAljC,EAAA8iC,YAMA9iC,OACA7F,IAAAhP,KAAAiF,IAAA,oBAAA4P,EAAA5P,KACAjF,KAAAiF,GAAA,SAAAinC,GACA,kBACA,OAAAr3B,EAAAq3B,GAAAvzB,MAAA9D,EAAAiF,YAFA,CAIO7U,IAKP,QAAAkJ,EAAA,EAAiBA,EAAAqlC,EAAAjvC,OAAyB4J,IAC1C0G,EAAApD,GAAA+hC,EAAArlC,GAAAnO,KAAA2R,KAAAuC,KAAAlU,KAAAwzC,EAAArlC,KAaA,OARAnO,KAAAgU,MAAA,SAAA7F,GACAuwB,EAAA,gBAAAvwB,GACA4pC,IACAA,GAAA,EACAljC,EAAAwD,WAIArY,MAGA6G,OAAAsS,eAAA05B,EAAArvC,UAAA,yBAIA8V,YAAA,EACAtG,IAAA,WACA,OAAAhT,KAAA4T,eAAAG,iBAKA8+B,EAAAmF,UAAAhC,yDCz3BA,MAAAtb,EAAsB96B,EAAQ,QAAQ86B,YACtC15B,EAAsBpB,EAAQ,QAAKmB,QACnCk3C,EAAsBr4C,EAAQ,QAC9Bs4C,EAAsBt4C,EAAQ,QAC9Bu4C,EAAsBv4C,EAAQ,QAC9Bw4C,EAAsBx4C,EAAQ,QAC9BoxC,EAAsBpxC,EAAQ,QAQ9BF,EAAAC,QAAA,EAAA04C,EAAApkC,KACA,MAAAY,EAAA,IAAA6lB,EACAzmB,KAAA,GACA,MAAAq9B,EAAAr9B,EAAAq9B,gBAAA,EACAG,EAAAx9B,EAAAw9B,YAAA,IACAhW,EAAAxnB,EAAAwnB,eACA6c,EAAA,CACAC,KAAAL,EACAM,WAAAL,GACGlkC,EAAAsB,SAAA,SAAA1G,KAAAwpC,GAAA,oBACH,IAAAC,EACA,MAAA10C,qBAA+BqQ,EAAAsB,yBAE/B,IAMAkjC,EANAC,EAAA,kBAAAzkC,EAAAu9B,MACAA,EAAAkH,EACA1H,EAAA9f,SAAAjd,EAAAu9B,OACA1lC,KAAA2L,IAAAxD,EAAAu9B,MAAAC,EAAA,MACAkH,EAAA7mC,KAAAwpB,MAAAmW,EAGA,MAAAmH,EAAA,IAAAR,EAAA,CAAA3Y,EAAAntB,KACAmmC,EAAAhZ,EAGA,IAAA0C,EAAA,EACA1C,EAAAhuB,GAAA,OAAAW,GAAA+vB,GAAA/vB,EAAA7N,QACAk7B,EAAA2I,KAAAvzB,EAAA,CAAsB9D,KAAA,IACtB0uB,EAAAhuB,GAAA,UAAAa,EAAA6vB,KACG,CAAG0W,YAAA,IAEN,IAAAC,EAAA,EACArR,EAAA,EACA,MAAAsR,EAAA,IAAAX,EAAA,CAAA1G,EAAAp/B,KACA,IAAAmtB,EAAAwY,EAAAj3C,EAAAq3C,EAAA3G,EAAAzuC,KAAAw4B,GACAgE,EAAAhuB,GAAA,QAAAa,GACAsmC,EAAA1yC,KAAAu5B,EAAA0C,IACAsF,GAAAtF,EACAttB,EAAAlD,KAAA,YACAhB,MAAAmoC,EACA3W,OACAl/B,IAAAyuC,EAAAzuC,IACAkP,SAAAu/B,EAAAv/B,UACO4mC,EAAA1nB,MAAAoW,GACPn1B,OAEG,CAAGumC,YAAAvH,IAEN0H,EAAA9jC,IACAod,IACAzd,EAAAlD,KAAA,QAAAuD,GAEAL,EAAA9D,QAIA,IAAAkoC,EACAC,EACAC,EAIAC,EAHAC,GAAA,EACA/mB,GAAA,EACAgnB,GAAA,EAGA,MAAAC,EAAArkC,IAEA,GADAujC,EAAA,KACAvjC,EACA8jC,EAAA9jC,QACK,GAAAmkC,GAAA/mB,GAAAgnB,GACLP,EAAAS,MAAAj1C,OAAAw0C,EAAAU,SAAAR,GAGK3mB,IAAAgnB,GACLP,EAAAS,MAAAj1C,QAAAw0C,EAAAU,QACA5kC,EAAA9D,UALA,CACA,IAAAkgB,EAAAnlB,KAAA2L,IAAA,EAAAyhC,GAAApnC,KAAAwpB,MAAA8d,IACAD,EAAAlZ,WAAAyZ,EAAAzoB,KAOA,IAAA0oB,EACAC,EACA,MAAAF,EAAA,KACAL,GAAA,EACAD,EAAAtnC,KAAAwpB,MACAqe,EAAA1B,EAAAI,EAAA5c,GACAke,EAAAloC,GAAA,QAAAunC,GACA,MAAAzjC,EAAAokC,EAAAvR,KAAA,IAAAkQ,EAAArkC,EAAAklB,KACA,IAAA0gB,EAAA,KACAtkC,EAAA9D,GAAA,YAAArC,IACAyqC,EAAAzqC,EACAspC,GAAAlH,GAAA,IACAA,GAAAqI,KAGAtkC,EAAA9D,GAAA,eAAgC6nC,GAAA,IAChC/jC,EAAA9D,GAAA,gBAAiCkoC,EAAArR,OAAA/yB,KAEjC,IAAAukC,EAAA,GACAC,EAAA,GACA,MAAAC,EAAA,CAAAC,EAAAC,KACAD,EAAA/nC,KAAA0nC,IACAA,EAAAK,EAAA/nC,IACAs/B,EAAAyI,EAAA9oB,KACA4nB,EAAA7yC,KAAA+zC,EAAAV,GACAO,EAAA5zC,KAAA+zC,GACAC,GACAH,EAAA7zC,KAAA+zC,KAIA,IAAAE,EAAA,GAAAC,EAAA,EACA7kC,EAAA9D,GAAA,OAAAwoC,IAEA,GADAA,EAAA9oB,KAAA0oB,GACAA,GAAArI,GAAAyI,EAAA9oB,KACA6oB,EAAAC,EAAAtB,GAAAsB,EAAA9oB,UACO,CACPgpB,EAAAj0C,KAAA+zC,GACAG,GAAAH,EAAA9nC,SAEA,MAAAgoC,EAAA51C,OAAA,GACA61C,EAAAD,EAAA,GAAAhoC,SAAAs/B,EACA2I,GAAAD,EAAAxyC,QAAAwK,SAGA0nC,GAAAI,EAAA9nC,WAGAoD,EAAA9D,GAAA,WACAkoC,EAAA,MAGAG,EAAAv1C,QAAA41C,EAAA51C,QACA41C,EAAA1nC,QAAAwnC,IAAuCD,EAAAC,GAAA,KAIvChB,EAAAntC,KAAA2L,IAAA,EAAA3L,KAAAuvB,KAAA,IAAAye,EAAAv1C,SAIA20C,EACAY,EAAAO,OAAA,CAAAhpB,EAAA4oB,MAAA9nC,SAAAkf,EAAA,GAEAgoB,GAAA,KAqBA,OAlBAK,IAEA7kC,EAAA9D,IAAA,MACAuhB,GAAA,EACAsmB,EAAA0B,MACAvB,EAAAuB,MACA/R,aAAA4Q,GACAQ,IACAA,EAAArR,SACAqR,EAAAtR,SAEAoQ,IACAA,EAAAnQ,SACAmQ,EAAApQ,SAEA3N,EAAAl3B,UAAAuN,IAAAtN,KAAAoR,KAGAA,uCClJA,IAAAgd,EAAUjyB,EAAQ,QAIlB26C,EAAA1zC,OAAAC,MAAA,SAAAxD,GACA,IAAAwD,EAAA,GACA,QAAA4L,KAAApP,EACAwD,EAAAZ,KAAAwM,GACG,OAAA5L,GAIHpH,EAAAC,QAAAuT,EAGA,IAAApT,EAAWF,EAAQ,QACnBE,EAAAiV,SAAgBnV,EAAQ,QAGxB,IAAAizC,EAAejzC,EAAQ,QACvBuR,EAAevR,EAAQ,QAEvBE,EAAAiV,SAAA7B,EAAA2/B,GAKA,IADA,IAAA/rC,EAAAyzC,EAAAppC,EAAA3N,WACAiE,EAAA,EAAiBA,EAAAX,EAAAvC,OAAiBkD,IAAA,CAClC,IAAAykC,EAAAplC,EAAAW,GACAyL,EAAA1P,UAAA0oC,KAAAh5B,EAAA1P,UAAA0oC,GAAA/6B,EAAA3N,UAAA0oC,IAIA,SAAAh5B,EAAAe,GACA,KAAAjU,gBAAAkT,GAAA,WAAAA,EAAAe,GAEA4+B,EAAApvC,KAAAzD,KAAAiU,GACA9C,EAAA1N,KAAAzD,KAAAiU,GAEAA,IAAA,IAAAA,EAAA6E,WAAA9Y,KAAA8Y,UAAA,GAEA7E,IAAA,IAAAA,EAAA4E,WAAA7Y,KAAA6Y,UAAA,GAEA7Y,KAAAw6C,eAAA,EACAvmC,IAAA,IAAAA,EAAAumC,gBAAAx6C,KAAAw6C,eAAA,GAEAx6C,KAAAo3C,KAAA,MAAAp+B,GAcA,SAAAA,IAGAhZ,KAAAw6C,eAAAx6C,KAAA8U,eAAAwd,OAIAT,EAAAM,SAAAsoB,EAAAz6C,MAGA,SAAAy6C,EAAA9vC,GACAA,EAAAoG,MAtBAlK,OAAAsS,eAAAjG,EAAA1P,UAAA,yBAIA8V,YAAA,EACAtG,IAAA,WACA,OAAAhT,KAAA8U,eAAAf,iBAmBAlN,OAAAsS,eAAAjG,EAAA1P,UAAA,aACAwP,IAAA,WACA,YAAAhE,IAAAhP,KAAA4T,qBAAA5E,IAAAhP,KAAA8U,iBAGA9U,KAAA4T,eAAAoe,WAAAhyB,KAAA8U,eAAAkd,YAEA5Y,IAAA,SAAAxM,QAGAoC,IAAAhP,KAAA4T,qBAAA5E,IAAAhP,KAAA8U,iBAMA9U,KAAA4T,eAAAoe,UAAAplB,EACA5M,KAAA8U,eAAAkd,UAAAplB,MAIAsG,EAAA1P,UAAAyR,SAAA,SAAAC,EAAAnC,GACA/S,KAAAkG,KAAA,MACAlG,KAAA+Q,MAEA8gB,EAAAM,SAAApf,EAAAmC,uCC/HAvV,EAAA+J,OAAA/J,EAAAkB,MAAiCjB,EAAQ,QACzCD,EAAAqK,OAAArK,EAAAoH,UAAqCnH,EAAQ,4CCH7C,SAAAyK;;;;;;;AAUA,IAAAqwC,EAAa96C,EAAQ,QACrB+6C,EAAc/6C,EAAQ,QACtBqwB,EAAcrwB,EAAQ,QAuCtB,SAAAg7C,IACA,IACA,IAAApqC,EAAA,IAAAX,WAAA,GAEA,OADAW,EAAAqqC,UAAA,CAAqBA,UAAAhrC,WAAArM,UAAAs3C,IAAA,WAAmD,YACxE,KAAAtqC,EAAAsqC,OACA,oBAAAtqC,EAAAuqC,UACA,IAAAvqC,EAAAuqC,SAAA,KAAAxrC,WACG,MAAArG,GACH,UAIA,SAAA8xC,IACA,OAAA3lC,EAAA4lC,oBACA,WACA,WAGA,SAAAC,EAAAC,EAAA52C,GACA,GAAAy2C,IAAAz2C,EACA,UAAA2H,WAAA,8BAcA,OAZAmJ,EAAA4lC,qBAEAE,EAAA,IAAAtrC,WAAAtL,GACA42C,EAAAN,UAAAxlC,EAAA7R,YAGA,OAAA23C,IACAA,EAAA,IAAA9lC,EAAA9Q,IAEA42C,EAAA52C,UAGA42C,EAaA,SAAA9lC,EAAA2a,EAAAgS,EAAAz9B,GACA,IAAA8Q,EAAA4lC,uBAAAj7C,gBAAAqV,GACA,WAAAA,EAAA2a,EAAAgS,EAAAz9B,GAIA,qBAAAyrB,EAAA,CACA,qBAAAgS,EACA,UAAA9xB,MACA,qEAGA,OAAAmlB,EAAAr1B,KAAAgwB,GAEA,OAAAiS,EAAAjiC,KAAAgwB,EAAAgS,EAAAz9B,GAWA,SAAA09B,EAAAkZ,EAAAvuC,EAAAo1B,EAAAz9B,GACA,qBAAAqI,EACA,UAAAhJ,UAAA,yCAGA,2BAAA0uC,aAAA1lC,aAAA0lC,YACA8I,EAAAD,EAAAvuC,EAAAo1B,EAAAz9B,GAGA,kBAAAqI,EACAyuC,EAAAF,EAAAvuC,EAAAo1B,GAGAsZ,EAAAH,EAAAvuC,GA4BA,SAAA2uC,EAAApZ,GACA,qBAAAA,EACA,UAAAv+B,UAAA,oCACG,GAAAu+B,EAAA,EACH,UAAAj2B,WAAA,wCAIA,SAAAkpB,EAAA+lB,EAAAhZ,EAAAC,EAAA/vB,GAEA,OADAkpC,EAAApZ,GACAA,GAAA,EACA+Y,EAAAC,EAAAhZ,QAEAnzB,IAAAozB,EAIA,kBAAA/vB,EACA6oC,EAAAC,EAAAhZ,GAAAC,OAAA/vB,GACA6oC,EAAAC,EAAAhZ,GAAAC,QAEA8Y,EAAAC,EAAAhZ,GAWA,SAAA9M,EAAA8lB,EAAAhZ,GAGA,GAFAoZ,EAAApZ,GACAgZ,EAAAD,EAAAC,EAAAhZ,EAAA,MAAAqZ,EAAArZ,KACA9sB,EAAA4lC,oBACA,QAAAh2C,EAAA,EAAmBA,EAAAk9B,IAAUl9B,EAC7Bk2C,EAAAl2C,GAAA,EAGA,OAAAk2C,EAgBA,SAAAE,EAAAF,EAAA5uC,EAAA8F,GAKA,GAJA,kBAAAA,GAAA,KAAAA,IACAA,EAAA,SAGAgD,EAAA8qB,WAAA9tB,GACA,UAAAzO,UAAA,8CAGA,IAAAW,EAAA,EAAAgL,EAAAhD,EAAA8F,GACA8oC,EAAAD,EAAAC,EAAA52C,GAEA,IAAAk3C,EAAAN,EAAA/iC,MAAA7L,EAAA8F,GASA,OAPAopC,IAAAl3C,IAIA42C,IAAA/1C,MAAA,EAAAq2C,IAGAN,EAGA,SAAAO,EAAAP,EAAA/uC,GACA,IAAA7H,EAAA6H,EAAA7H,OAAA,MAAAi3C,EAAApvC,EAAA7H,QACA42C,EAAAD,EAAAC,EAAA52C,GACA,QAAAU,EAAA,EAAiBA,EAAAV,EAAYU,GAAA,EAC7Bk2C,EAAAl2C,GAAA,IAAAmH,EAAAnH,GAEA,OAAAk2C,EAGA,SAAAC,EAAAD,EAAA/uC,EAAAuvC,EAAAp3C,GAGA,GAFA6H,EAAAmD,WAEAosC,EAAA,GAAAvvC,EAAAmD,WAAAosC,EACA,UAAAzvC,WAAA,6BAGA,GAAAE,EAAAmD,WAAAosC,GAAAp3C,GAAA,GACA,UAAA2H,WAAA,6BAmBA,OAfAE,OADA4C,IAAA2sC,QAAA3sC,IAAAzK,EACA,IAAAsL,WAAAzD,QACG4C,IAAAzK,EACH,IAAAsL,WAAAzD,EAAAuvC,GAEA,IAAA9rC,WAAAzD,EAAAuvC,EAAAp3C,GAGA8Q,EAAA4lC,qBAEAE,EAAA/uC,EACA+uC,EAAAN,UAAAxlC,EAAA7R,WAGA23C,EAAAO,EAAAP,EAAA/uC,GAEA+uC,EAGA,SAAAG,EAAAH,EAAA73C,GACA,GAAA+R,EAAAoE,SAAAnW,GAAA,CACA,IAAAyM,EAAA,EAAAyrC,EAAAl4C,EAAAiB,QAGA,OAFA42C,EAAAD,EAAAC,EAAAprC,GAEA,IAAAorC,EAAA52C,OACA42C,GAGA73C,EAAA6d,KAAAg6B,EAAA,IAAAprC,GACAorC,GAGA,GAAA73C,EAAA,CACA,wBAAAgvC,aACAhvC,EAAAmsB,kBAAA6iB,aAAA,WAAAhvC,EACA,wBAAAA,EAAAiB,QAAAq3C,GAAAt4C,EAAAiB,QACA22C,EAAAC,EAAA,GAEAO,EAAAP,EAAA73C,GAGA,cAAAA,EAAA2I,MAAAgkB,EAAA3sB,EAAA+P,MACA,OAAAqoC,EAAAP,EAAA73C,EAAA+P,MAIA,UAAAzP,UAAA,sFAGA,SAAA43C,EAAAj3C,GAGA,GAAAA,GAAAy2C,IACA,UAAA9uC,WAAA,0DACA8uC,IAAAxoC,SAAA,cAEA,SAAAjO,EAGA,SAAA89B,EAAA99B,GAIA,OAHAA,OACAA,EAAA,GAEA8Q,EAAA+f,OAAA7wB,GA+EA,SAAAgL,EAAAhD,EAAA8F,GACA,GAAAgD,EAAAoE,SAAAlN,GACA,OAAAA,EAAAhI,OAEA,wBAAA+tC,aAAA,oBAAAA,YAAAuJ,SACAvJ,YAAAuJ,OAAAtvC,iBAAA+lC,aACA,OAAA/lC,EAAAgD,WAEA,kBAAAhD,IACAA,EAAA,GAAAA,GAGA,IAAAwD,EAAAxD,EAAAhI,OACA,OAAAwL,EAAA,SAIA,IADA,IAAA+rC,GAAA,IAEA,OAAAzpC,GACA,YACA,aACA,aACA,OAAAtC,EACA,WACA,YACA,UAAAf,EACA,OAAA+sC,EAAAxvC,GAAAhI,OACA,WACA,YACA,cACA,eACA,SAAAwL,EACA,UACA,OAAAA,IAAA,EACA,aACA,OAAAisC,EAAAzvC,GAAAhI,OACA,QACA,GAAAu3C,EAAA,OAAAC,EAAAxvC,GAAAhI,OACA8N,GAAA,GAAAA,GAAAxN,cACAi3C,GAAA,GAMA,SAAAG,EAAA5pC,EAAAvB,EAAAC,GACA,IAAA+qC,GAAA,EAcA,SALA9sC,IAAA8B,KAAA,KACAA,EAAA,GAIAA,EAAA9Q,KAAAuE,OACA,SAOA,SAJAyK,IAAA+B,KAAA/Q,KAAAuE,UACAwM,EAAA/Q,KAAAuE,QAGAwM,GAAA,EACA,SAOA,GAHAA,KAAA,EACAD,KAAA,EAEAC,GAAAD,EACA,SAGAuB,MAAA,QAEA,QACA,OAAAA,GACA,UACA,OAAA6pC,EAAAl8C,KAAA8Q,EAAAC,GAEA,WACA,YACA,OAAAorC,EAAAn8C,KAAA8Q,EAAAC,GAEA,YACA,OAAAqrC,EAAAp8C,KAAA8Q,EAAAC,GAEA,aACA,aACA,OAAAsrC,EAAAr8C,KAAA8Q,EAAAC,GAEA,aACA,OAAAurC,EAAAt8C,KAAA8Q,EAAAC,GAEA,WACA,YACA,cACA,eACA,OAAAwrC,EAAAv8C,KAAA8Q,EAAAC,GAEA,QACA,GAAA+qC,EAAA,UAAAl4C,UAAA,qBAAAyO,GACAA,KAAA,IAAAxN,cACAi3C,GAAA,GASA,SAAAU,EAAA7lB,EAAAxoB,EAAAI,GACA,IAAAtJ,EAAA0xB,EAAAxoB,GACAwoB,EAAAxoB,GAAAwoB,EAAApoB,GACAooB,EAAApoB,GAAAtJ,EAmIA,SAAAw3C,EAAAhtB,EAAAitB,EAAAf,EAAAtpC,EAAAsqC,GAEA,OAAAltB,EAAAlrB,OAAA,SAmBA,GAhBA,kBAAAo3C,GACAtpC,EAAAspC,EACAA,EAAA,GACGA,EAAA,WACHA,EAAA,WACGA,GAAA,aACHA,GAAA,YAEAA,KACA5xC,MAAA4xC,KAEAA,EAAAgB,EAAA,EAAAltB,EAAAlrB,OAAA,GAIAo3C,EAAA,IAAAA,EAAAlsB,EAAAlrB,OAAAo3C,GACAA,GAAAlsB,EAAAlrB,OAAA,CACA,GAAAo4C,EAAA,SACAhB,EAAAlsB,EAAAlrB,OAAA,OACG,GAAAo3C,EAAA,GACH,IAAAgB,EACA,SADAhB,EAAA,EAUA,GALA,kBAAAe,IACAA,EAAArnC,EAAA4sB,KAAAya,EAAArqC,IAIAgD,EAAAoE,SAAAijC,GAEA,WAAAA,EAAAn4C,QACA,EAEAq4C,EAAAntB,EAAAitB,EAAAf,EAAAtpC,EAAAsqC,GACG,qBAAAD,EAEH,OADAA,GAAA,IACArnC,EAAA4lC,qBACA,oBAAAprC,WAAArM,UAAAM,QACA64C,EACA9sC,WAAArM,UAAAM,QAAAL,KAAAgsB,EAAAitB,EAAAf,GAEA9rC,WAAArM,UAAA2B,YAAA1B,KAAAgsB,EAAAitB,EAAAf,GAGAiB,EAAAntB,EAAA,CAAAitB,GAAAf,EAAAtpC,EAAAsqC,GAGA,UAAA/4C,UAAA,wCAGA,SAAAg5C,EAAApsC,EAAAksC,EAAAf,EAAAtpC,EAAAsqC,GACA,IA0BA13C,EA1BA43C,EAAA,EACAC,EAAAtsC,EAAAjM,OACAw4C,EAAAL,EAAAn4C,OAEA,QAAAyK,IAAAqD,IACAA,EAAA7I,OAAA6I,GAAAxN,cACA,SAAAwN,GAAA,UAAAA,GACA,YAAAA,GAAA,aAAAA,GAAA,CACA,GAAA7B,EAAAjM,OAAA,GAAAm4C,EAAAn4C,OAAA,EACA,SAEAs4C,EAAA,EACAC,GAAA,EACAC,GAAA,EACApB,GAAA,EAIA,SAAAnT,EAAAhH,EAAAv8B,GACA,WAAA43C,EACArb,EAAAv8B,GAEAu8B,EAAAwb,aAAA/3C,EAAA43C,GAKA,GAAAF,EAAA,CACA,IAAAM,GAAA,EACA,IAAAh4C,EAAA02C,EAAwB12C,EAAA63C,EAAe73C,IACvC,GAAAujC,EAAAh4B,EAAAvL,KAAAujC,EAAAkU,GAAA,IAAAO,EAAA,EAAAh4C,EAAAg4C,IAEA,IADA,IAAAA,MAAAh4C,GACAA,EAAAg4C,EAAA,IAAAF,EAAA,OAAAE,EAAAJ,OAEA,IAAAI,IAAAh4C,KAAAg4C,GACAA,GAAA,OAKA,IADAtB,EAAAoB,EAAAD,IAAAnB,EAAAmB,EAAAC,GACA93C,EAAA02C,EAAwB12C,GAAA,EAAQA,IAAA,CAEhC,IADA,IAAAi4C,GAAA,EACAt3C,EAAA,EAAqBA,EAAAm3C,EAAen3C,IACpC,GAAA4iC,EAAAh4B,EAAAvL,EAAAW,KAAA4iC,EAAAkU,EAAA92C,GAAA,CACAs3C,GAAA,EACA,MAGA,GAAAA,EAAA,OAAAj4C,EAIA,SAeA,SAAAk4C,EAAA3b,EAAAj1B,EAAAqoB,EAAArwB,GACAqwB,EAAA9E,OAAA8E,IAAA,EACA,IAAAwoB,EAAA5b,EAAAj9B,OAAAqwB,EACArwB,GAGAA,EAAAurB,OAAAvrB,GACAA,EAAA64C,IACA74C,EAAA64C,IAJA74C,EAAA64C,EASA,IAAAC,EAAA9wC,EAAAhI,OACA,GAAA84C,EAAA,gBAAAz5C,UAAA,sBAEAW,EAAA84C,EAAA,IACA94C,EAAA84C,EAAA,GAEA,QAAAp4C,EAAA,EAAiBA,EAAAV,IAAYU,EAAA,CAC7B,IAAAi0B,EAAApvB,SAAAyC,EAAA7H,OAAA,EAAAO,EAAA,OACA,GAAA8E,MAAAmvB,GAAA,OAAAj0B,EACAu8B,EAAA5M,EAAA3vB,GAAAi0B,EAEA,OAAAj0B,EAGA,SAAAq4C,EAAA9b,EAAAj1B,EAAAqoB,EAAArwB,GACA,OAAAg5C,GAAAxB,EAAAxvC,EAAAi1B,EAAAj9B,OAAAqwB,GAAA4M,EAAA5M,EAAArwB,GAGA,SAAAi5C,EAAAhc,EAAAj1B,EAAAqoB,EAAArwB,GACA,OAAAg5C,GAAAE,EAAAlxC,GAAAi1B,EAAA5M,EAAArwB,GAGA,SAAAm5C,EAAAlc,EAAAj1B,EAAAqoB,EAAArwB,GACA,OAAAi5C,EAAAhc,EAAAj1B,EAAAqoB,EAAArwB,GAGA,SAAAo5C,EAAAnc,EAAAj1B,EAAAqoB,EAAArwB,GACA,OAAAg5C,GAAAvB,EAAAzvC,GAAAi1B,EAAA5M,EAAArwB,GAGA,SAAAq5C,EAAApc,EAAAj1B,EAAAqoB,EAAArwB,GACA,OAAAg5C,GAAAM,EAAAtxC,EAAAi1B,EAAAj9B,OAAAqwB,GAAA4M,EAAA5M,EAAArwB,GAkFA,SAAA+3C,EAAA9a,EAAA1wB,EAAAC,GACA,WAAAD,GAAAC,IAAAywB,EAAAj9B,OACAm2C,EAAAjrC,cAAA+xB,GAEAkZ,EAAAjrC,cAAA+xB,EAAAp8B,MAAA0L,EAAAC,IAIA,SAAAorC,EAAA3a,EAAA1wB,EAAAC,GACAA,EAAAjF,KAAAg8B,IAAAtG,EAAAj9B,OAAAwM,GACA,IAAA6qB,EAAA,GAEA32B,EAAA6L,EACA,MAAA7L,EAAA8L,EAAA,CACA,IAQA+sC,EAAAC,EAAAC,EAAAC,EARAC,EAAA1c,EAAAv8B,GACAiI,EAAA,KACAixC,EAAAD,EAAA,MACAA,EAAA,MACAA,EAAA,MACA,EAEA,GAAAj5C,EAAAk5C,GAAAptC,EAGA,OAAAotC,GACA,OACAD,EAAA,MACAhxC,EAAAgxC,GAEA,MACA,OACAJ,EAAAtc,EAAAv8B,EAAA,GACA,WAAA64C,KACAG,GAAA,GAAAC,IAAA,KAAAJ,EACAG,EAAA,MACA/wC,EAAA+wC,IAGA,MACA,OACAH,EAAAtc,EAAAv8B,EAAA,GACA84C,EAAAvc,EAAAv8B,EAAA,GACA,WAAA64C,IAAA,WAAAC,KACAE,GAAA,GAAAC,IAAA,OAAAJ,IAAA,KAAAC,EACAE,EAAA,OAAAA,EAAA,OAAAA,EAAA,SACA/wC,EAAA+wC,IAGA,MACA,OACAH,EAAAtc,EAAAv8B,EAAA,GACA84C,EAAAvc,EAAAv8B,EAAA,GACA+4C,EAAAxc,EAAAv8B,EAAA,GACA,WAAA64C,IAAA,WAAAC,IAAA,WAAAC,KACAC,GAAA,GAAAC,IAAA,OAAAJ,IAAA,OAAAC,IAAA,KAAAC,EACAC,EAAA,OAAAA,EAAA,UACA/wC,EAAA+wC,IAMA,OAAA/wC,GAGAA,EAAA,MACAixC,EAAA,GACKjxC,EAAA,QAELA,GAAA,MACA0uB,EAAA11B,KAAAgH,IAAA,eACAA,EAAA,WAAAA,GAGA0uB,EAAA11B,KAAAgH,GACAjI,GAAAk5C,EAGA,OAAAC,EAAAxiB,GA98BAj8B,EAAA0V,SACA1V,EAAA0iC,aACA1iC,EAAA0+C,kBAAA,GA0BAhpC,EAAA4lC,yBAAAjsC,IAAA3E,EAAA4wC,oBACA5wC,EAAA4wC,oBACAL,IAKAj7C,EAAAq7C,eAkEA3lC,EAAAipC,SAAA,KAGAjpC,EAAAkpC,SAAA,SAAA/tC,GAEA,OADAA,EAAAqqC,UAAAxlC,EAAA7R,UACAgN,GA2BA6E,EAAA4sB,KAAA,SAAAr1B,EAAAo1B,EAAAz9B,GACA,OAAA09B,EAAA,KAAAr1B,EAAAo1B,EAAAz9B,IAGA8Q,EAAA4lC,sBACA5lC,EAAA7R,UAAAq3C,UAAAhrC,WAAArM,UACA6R,EAAAwlC,UAAAhrC,WACA,qBAAA2uC,eAAAC,SACAppC,EAAAmpC,OAAAC,WAAAppC,GAEAxO,OAAAsS,eAAA9D,EAAAmpC,OAAAC,QAAA,CACA7xC,MAAA,KACA2M,cAAA,KAiCAlE,EAAA+f,MAAA,SAAA+M,EAAAC,EAAA/vB,GACA,OAAA+iB,EAAA,KAAA+M,EAAAC,EAAA/vB,IAiBAgD,EAAAggB,YAAA,SAAA8M,GACA,OAAA9M,EAAA,KAAA8M,IAKA9sB,EAAA6sB,gBAAA,SAAAC,GACA,OAAA9M,EAAA,KAAA8M,IAiHA9sB,EAAAoE,SAAA,SAAAkd,GACA,cAAAA,MAAA+nB,YAGArpC,EAAAspC,QAAA,SAAAvvC,EAAAunB,GACA,IAAAthB,EAAAoE,SAAArK,KAAAiG,EAAAoE,SAAAkd,GACA,UAAA/yB,UAAA,6BAGA,GAAAwL,IAAAunB,EAAA,SAKA,IAHA,IAAApI,EAAAnf,EAAA7K,OACAq6C,EAAAjoB,EAAApyB,OAEAU,EAAA,EAAA8K,EAAAjE,KAAAg8B,IAAAvZ,EAAAqwB,GAAuC35C,EAAA8K,IAAS9K,EAChD,GAAAmK,EAAAnK,KAAA0xB,EAAA1xB,GAAA,CACAspB,EAAAnf,EAAAnK,GACA25C,EAAAjoB,EAAA1xB,GACA,MAIA,OAAAspB,EAAAqwB,GAAA,EACAA,EAAArwB,EAAA,EACA,GAGAlZ,EAAA8qB,WAAA,SAAA9tB,GACA,OAAA7I,OAAA6I,GAAAxN,eACA,UACA,WACA,YACA,YACA,aACA,aACA,aACA,WACA,YACA,cACA,eACA,SACA,QACA,WAIAwQ,EAAA3T,OAAA,SAAAw0C,EAAA3xC,GACA,IAAA0rB,EAAAimB,GACA,UAAAtyC,UAAA,+CAGA,OAAAsyC,EAAA3xC,OACA,OAAA8Q,EAAA+f,MAAA,GAGA,IAAAnwB,EACA,QAAA+J,IAAAzK,EAEA,IADAA,EAAA,EACAU,EAAA,EAAeA,EAAAixC,EAAA3xC,SAAiBU,EAChCV,GAAA2xC,EAAAjxC,GAAAV,OAIA,IAAAkrB,EAAApa,EAAAggB,YAAA9wB,GACAq0B,EAAA,EACA,IAAA3zB,EAAA,EAAaA,EAAAixC,EAAA3xC,SAAiBU,EAAA,CAC9B,IAAAu8B,EAAA0U,EAAAjxC,GACA,IAAAoQ,EAAAoE,SAAA+nB,GACA,UAAA59B,UAAA,+CAEA49B,EAAArgB,KAAAsO,EAAAmJ,GACAA,GAAA4I,EAAAj9B,OAEA,OAAAkrB,GA8CApa,EAAA9F,aA0EA8F,EAAA7R,UAAAk7C,WAAA,EAQArpC,EAAA7R,UAAAq7C,OAAA,WACA,IAAA9uC,EAAA/P,KAAAuE,OACA,GAAAwL,EAAA,MACA,UAAA7D,WAAA,6CAEA,QAAAjH,EAAA,EAAiBA,EAAA8K,EAAS9K,GAAA,EAC1Bu3C,EAAAx8C,KAAAiF,IAAA,GAEA,OAAAjF,MAGAqV,EAAA7R,UAAAs7C,OAAA,WACA,IAAA/uC,EAAA/P,KAAAuE,OACA,GAAAwL,EAAA,MACA,UAAA7D,WAAA,6CAEA,QAAAjH,EAAA,EAAiBA,EAAA8K,EAAS9K,GAAA,EAC1Bu3C,EAAAx8C,KAAAiF,IAAA,GACAu3C,EAAAx8C,KAAAiF,EAAA,EAAAA,EAAA,GAEA,OAAAjF,MAGAqV,EAAA7R,UAAAu7C,OAAA,WACA,IAAAhvC,EAAA/P,KAAAuE,OACA,GAAAwL,EAAA,MACA,UAAA7D,WAAA,6CAEA,QAAAjH,EAAA,EAAiBA,EAAA8K,EAAS9K,GAAA,EAC1Bu3C,EAAAx8C,KAAAiF,IAAA,GACAu3C,EAAAx8C,KAAAiF,EAAA,EAAAA,EAAA,GACAu3C,EAAAx8C,KAAAiF,EAAA,EAAAA,EAAA,GACAu3C,EAAAx8C,KAAAiF,EAAA,EAAAA,EAAA,GAEA,OAAAjF,MAGAqV,EAAA7R,UAAAgP,SAAA,WACA,IAAAjO,EAAA,EAAAvE,KAAAuE,OACA,WAAAA,EAAA,GACA,IAAAuV,UAAAvV,OAAA43C,EAAAn8C,KAAA,EAAAuE,GACA03C,EAAAtjC,MAAA3Y,KAAA8Z,YAGAzE,EAAA7R,UAAAw7C,OAAA,SAAAroB,GACA,IAAAthB,EAAAoE,SAAAkd,GAAA,UAAA/yB,UAAA,6BACA,OAAA5D,OAAA22B,GACA,IAAAthB,EAAAspC,QAAA3+C,KAAA22B,IAGAthB,EAAA7R,UAAA8xB,QAAA,WACA,IAAA3rB,EAAA,GACA8N,EAAA9X,EAAA0+C,kBAKA,OAJAr+C,KAAAuE,OAAA,IACAoF,EAAA3J,KAAAwS,SAAA,QAAAiF,GAAA3S,MAAA,SAAkDV,KAAA,KAClDpE,KAAAuE,OAAAkT,IAAA9N,GAAA,UAEA,WAAAA,EAAA,KAGA0L,EAAA7R,UAAAm7C,QAAA,SAAArqB,EAAAxjB,EAAAC,EAAAkuC,EAAAC,GACA,IAAA7pC,EAAAoE,SAAA6a,GACA,UAAA1wB,UAAA,6BAgBA,QAbAoL,IAAA8B,IACAA,EAAA,QAEA9B,IAAA+B,IACAA,EAAAujB,IAAA/vB,OAAA,QAEAyK,IAAAiwC,IACAA,EAAA,QAEAjwC,IAAAkwC,IACAA,EAAAl/C,KAAAuE,QAGAuM,EAAA,GAAAC,EAAAujB,EAAA/vB,QAAA06C,EAAA,GAAAC,EAAAl/C,KAAAuE,OACA,UAAA2H,WAAA,sBAGA,GAAA+yC,GAAAC,GAAApuC,GAAAC,EACA,SAEA,GAAAkuC,GAAAC,EACA,SAEA,GAAApuC,GAAAC,EACA,SAQA,GALAD,KAAA,EACAC,KAAA,EACAkuC,KAAA,EACAC,KAAA,EAEAl/C,OAAAs0B,EAAA,SASA,IAPA,IAAA/F,EAAA2wB,EAAAD,EACAL,EAAA7tC,EAAAD,EACAf,EAAAjE,KAAAg8B,IAAAvZ,EAAAqwB,GAEAO,EAAAn/C,KAAAoF,MAAA65C,EAAAC,GACAE,EAAA9qB,EAAAlvB,MAAA0L,EAAAC,GAEA9L,EAAA,EAAiBA,EAAA8K,IAAS9K,EAC1B,GAAAk6C,EAAAl6C,KAAAm6C,EAAAn6C,GAAA,CACAspB,EAAA4wB,EAAAl6C,GACA25C,EAAAQ,EAAAn6C,GACA,MAIA,OAAAspB,EAAAqwB,GAAA,EACAA,EAAArwB,EAAA,EACA,GA6HAlZ,EAAA7R,UAAAs4B,SAAA,SAAA4gB,EAAAf,EAAAtpC,GACA,WAAArS,KAAA8D,QAAA44C,EAAAf,EAAAtpC,IAGAgD,EAAA7R,UAAAM,QAAA,SAAA44C,EAAAf,EAAAtpC,GACA,OAAAoqC,EAAAz8C,KAAA08C,EAAAf,EAAAtpC,GAAA,IAGAgD,EAAA7R,UAAA2B,YAAA,SAAAu3C,EAAAf,EAAAtpC,GACA,OAAAoqC,EAAAz8C,KAAA08C,EAAAf,EAAAtpC,GAAA,IAkDAgD,EAAA7R,UAAA4U,MAAA,SAAA7L,EAAAqoB,EAAArwB,EAAA8N,GAEA,QAAArD,IAAA4lB,EACAviB,EAAA,OACA9N,EAAAvE,KAAAuE,OACAqwB,EAAA,OAEG,QAAA5lB,IAAAzK,GAAA,kBAAAqwB,EACHviB,EAAAuiB,EACArwB,EAAAvE,KAAAuE,OACAqwB,EAAA,MAEG,KAAA7E,SAAA6E,GAWH,UAAA1kB,MACA,2EAXA0kB,GAAA,EACA7E,SAAAxrB,IACAA,GAAA,OACAyK,IAAAqD,MAAA,UAEAA,EAAA9N,EACAA,OAAAyK,GASA,IAAAouC,EAAAp9C,KAAAuE,OAAAqwB,EAGA,SAFA5lB,IAAAzK,KAAA64C,KAAA74C,EAAA64C,GAEA7wC,EAAAhI,OAAA,IAAAA,EAAA,GAAAqwB,EAAA,IAAAA,EAAA50B,KAAAuE,OACA,UAAA2H,WAAA,0CAGAmG,MAAA,QAGA,IADA,IAAAypC,GAAA,IAEA,OAAAzpC,GACA,UACA,OAAA8qC,EAAAn9C,KAAAuM,EAAAqoB,EAAArwB,GAEA,WACA,YACA,OAAA+4C,EAAAt9C,KAAAuM,EAAAqoB,EAAArwB,GAEA,YACA,OAAAi5C,EAAAx9C,KAAAuM,EAAAqoB,EAAArwB,GAEA,aACA,aACA,OAAAm5C,EAAA19C,KAAAuM,EAAAqoB,EAAArwB,GAEA,aAEA,OAAAo5C,EAAA39C,KAAAuM,EAAAqoB,EAAArwB,GAEA,WACA,YACA,cACA,eACA,OAAAq5C,EAAA59C,KAAAuM,EAAAqoB,EAAArwB,GAEA,QACA,GAAAu3C,EAAA,UAAAl4C,UAAA,qBAAAyO,GACAA,GAAA,GAAAA,GAAAxN,cACAi3C,GAAA,IAKAzmC,EAAA7R,UAAA67C,OAAA,WACA,OACApzC,KAAA,SACAoH,KAAAvD,MAAAtM,UAAA4B,MAAA3B,KAAAzD,KAAAs/C,MAAAt/C,KAAA,KAwFA,IAAAu/C,EAAA,KAEA,SAAAnB,EAAAoB,GACA,IAAAzvC,EAAAyvC,EAAAj7C,OACA,GAAAwL,GAAAwvC,EACA,OAAA/1C,OAAAC,aAAAkP,MAAAnP,OAAAg2C,GAIA,IAAA5jB,EAAA,GACA32B,EAAA,EACA,MAAAA,EAAA8K,EACA6rB,GAAApyB,OAAAC,aAAAkP,MACAnP,OACAg2C,EAAAp6C,MAAAH,KAAAs6C,IAGA,OAAA3jB,EAGA,SAAAwgB,EAAA5a,EAAA1wB,EAAAC,GACA,IAAAmkB,EAAA,GACAnkB,EAAAjF,KAAAg8B,IAAAtG,EAAAj9B,OAAAwM,GAEA,QAAA9L,EAAA6L,EAAqB7L,EAAA8L,IAAS9L,EAC9BiwB,GAAA1rB,OAAAC,aAAA,IAAA+3B,EAAAv8B,IAEA,OAAAiwB,EAGA,SAAAmnB,EAAA7a,EAAA1wB,EAAAC,GACA,IAAAmkB,EAAA,GACAnkB,EAAAjF,KAAAg8B,IAAAtG,EAAAj9B,OAAAwM,GAEA,QAAA9L,EAAA6L,EAAqB7L,EAAA8L,IAAS9L,EAC9BiwB,GAAA1rB,OAAAC,aAAA+3B,EAAAv8B,IAEA,OAAAiwB,EAGA,SAAAgnB,EAAA1a,EAAA1wB,EAAAC,GACA,IAAAhB,EAAAyxB,EAAAj9B,SAEAuM,KAAA,KAAAA,EAAA,KACAC,KAAA,GAAAA,EAAAhB,KAAAgB,EAAAhB,GAGA,IADA,IAAApC,EAAA,GACA1I,EAAA6L,EAAqB7L,EAAA8L,IAAS9L,EAC9B0I,GAAA8xC,EAAAje,EAAAv8B,IAEA,OAAA0I,EAGA,SAAA4uC,EAAA/a,EAAA1wB,EAAAC,GAGA,IAFA,IAAA2uC,EAAAle,EAAAp8B,MAAA0L,EAAAC,GACA6qB,EAAA,GACA32B,EAAA,EAAiBA,EAAAy6C,EAAAn7C,OAAkBU,GAAA,EACnC22B,GAAApyB,OAAAC,aAAAi2C,EAAAz6C,GAAA,IAAAy6C,EAAAz6C,EAAA,IAEA,OAAA22B,EA0CA,SAAA+jB,EAAA/qB,EAAAgrB,EAAAr7C,GACA,GAAAqwB,EAAA,OAAAA,EAAA,YAAA1oB,WAAA,sBACA,GAAA0oB,EAAAgrB,EAAAr7C,EAAA,UAAA2H,WAAA,yCA+JA,SAAA2zC,EAAAre,EAAA50B,EAAAgoB,EAAAgrB,EAAAnoC,EAAAqwB,GACA,IAAAzyB,EAAAoE,SAAA+nB,GAAA,UAAA59B,UAAA,+CACA,GAAAgJ,EAAA6K,GAAA7K,EAAAk7B,EAAA,UAAA57B,WAAA,qCACA,GAAA0oB,EAAAgrB,EAAApe,EAAAj9B,OAAA,UAAA2H,WAAA,sBAkDA,SAAA4zC,EAAAte,EAAA50B,EAAAgoB,EAAAmrB,GACAnzC,EAAA,IAAAA,EAAA,MAAAA,EAAA,GACA,QAAA3H,EAAA,EAAAW,EAAAkG,KAAAg8B,IAAAtG,EAAAj9B,OAAAqwB,EAAA,GAAuD3vB,EAAAW,IAAOX,EAC9Du8B,EAAA5M,EAAA3vB,IAAA2H,EAAA,QAAAmzC,EAAA96C,EAAA,EAAAA,MACA,GAAA86C,EAAA96C,EAAA,EAAAA,GA8BA,SAAA+6C,EAAAxe,EAAA50B,EAAAgoB,EAAAmrB,GACAnzC,EAAA,IAAAA,EAAA,WAAAA,EAAA,GACA,QAAA3H,EAAA,EAAAW,EAAAkG,KAAAg8B,IAAAtG,EAAAj9B,OAAAqwB,EAAA,GAAuD3vB,EAAAW,IAAOX,EAC9Du8B,EAAA5M,EAAA3vB,GAAA2H,IAAA,GAAAmzC,EAAA96C,EAAA,EAAAA,GAAA,IAmJA,SAAAg7C,EAAAze,EAAA50B,EAAAgoB,EAAAgrB,EAAAnoC,EAAAqwB,GACA,GAAAlT,EAAAgrB,EAAApe,EAAAj9B,OAAA,UAAA2H,WAAA,sBACA,GAAA0oB,EAAA,YAAA1oB,WAAA,sBAGA,SAAAg0C,EAAA1e,EAAA50B,EAAAgoB,EAAAmrB,EAAAI,GAKA,OAJAA,GACAF,EAAAze,EAAA50B,EAAAgoB,EAAA,gDAEA+lB,EAAAviC,MAAAopB,EAAA50B,EAAAgoB,EAAAmrB,EAAA,MACAnrB,EAAA,EAWA,SAAAwrB,EAAA5e,EAAA50B,EAAAgoB,EAAAmrB,EAAAI,GAKA,OAJAA,GACAF,EAAAze,EAAA50B,EAAAgoB,EAAA,kDAEA+lB,EAAAviC,MAAAopB,EAAA50B,EAAAgoB,EAAAmrB,EAAA,MACAnrB,EAAA,EA/cAvf,EAAA7R,UAAA4B,MAAA,SAAA0L,EAAAC,GACA,IAoBAsvC,EApBAtwC,EAAA/P,KAAAuE,OAqBA,GApBAuM,MACAC,OAAA/B,IAAA+B,EAAAhB,IAAAgB,EAEAD,EAAA,GACAA,GAAAf,EACAe,EAAA,IAAAA,EAAA,IACGA,EAAAf,IACHe,EAAAf,GAGAgB,EAAA,GACAA,GAAAhB,EACAgB,EAAA,IAAAA,EAAA,IACGA,EAAAhB,IACHgB,EAAAhB,GAGAgB,EAAAD,IAAAC,EAAAD,GAGAuE,EAAA4lC,oBACAoF,EAAArgD,KAAA+6C,SAAAjqC,EAAAC,GACAsvC,EAAAxF,UAAAxlC,EAAA7R,cACG,CACH,IAAA88C,EAAAvvC,EAAAD,EACAuvC,EAAA,IAAAhrC,EAAAirC,OAAAtxC,GACA,QAAA/J,EAAA,EAAmBA,EAAAq7C,IAAcr7C,EACjCo7C,EAAAp7C,GAAAjF,KAAAiF,EAAA6L,GAIA,OAAAuvC,GAWAhrC,EAAA7R,UAAA+8C,WAAA,SAAA3rB,EAAArlB,EAAA4wC,GACAvrB,GAAA,EACArlB,GAAA,EACA4wC,GAAAR,EAAA/qB,EAAArlB,EAAAvP,KAAAuE,QAEA,IAAAm4C,EAAA18C,KAAA40B,GACA4rB,EAAA,EACAv7C,EAAA,EACA,QAAAA,EAAAsK,IAAAixC,GAAA,KACA9D,GAAA18C,KAAA40B,EAAA3vB,GAAAu7C,EAGA,OAAA9D,GAGArnC,EAAA7R,UAAAi9C,WAAA,SAAA7rB,EAAArlB,EAAA4wC,GACAvrB,GAAA,EACArlB,GAAA,EACA4wC,GACAR,EAAA/qB,EAAArlB,EAAAvP,KAAAuE,QAGA,IAAAm4C,EAAA18C,KAAA40B,IAAArlB,GACAixC,EAAA,EACA,MAAAjxC,EAAA,IAAAixC,GAAA,KACA9D,GAAA18C,KAAA40B,IAAArlB,GAAAixC,EAGA,OAAA9D,GAGArnC,EAAA7R,UAAAk9C,UAAA,SAAA9rB,EAAAurB,GAEA,OADAA,GAAAR,EAAA/qB,EAAA,EAAA50B,KAAAuE,QACAvE,KAAA40B,IAGAvf,EAAA7R,UAAAm9C,aAAA,SAAA/rB,EAAAurB,GAEA,OADAA,GAAAR,EAAA/qB,EAAA,EAAA50B,KAAAuE,QACAvE,KAAA40B,GAAA50B,KAAA40B,EAAA,OAGAvf,EAAA7R,UAAAw5C,aAAA,SAAApoB,EAAAurB,GAEA,OADAA,GAAAR,EAAA/qB,EAAA,EAAA50B,KAAAuE,QACAvE,KAAA40B,IAAA,EAAA50B,KAAA40B,EAAA,IAGAvf,EAAA7R,UAAAo9C,aAAA,SAAAhsB,EAAAurB,GAGA,OAFAA,GAAAR,EAAA/qB,EAAA,EAAA50B,KAAAuE,SAEAvE,KAAA40B,GACA50B,KAAA40B,EAAA,MACA50B,KAAA40B,EAAA,QACA,SAAA50B,KAAA40B,EAAA,IAGAvf,EAAA7R,UAAAq9C,aAAA,SAAAjsB,EAAAurB,GAGA,OAFAA,GAAAR,EAAA/qB,EAAA,EAAA50B,KAAAuE,QAEA,SAAAvE,KAAA40B,IACA50B,KAAA40B,EAAA,OACA50B,KAAA40B,EAAA,MACA50B,KAAA40B,EAAA,KAGAvf,EAAA7R,UAAAs9C,UAAA,SAAAlsB,EAAArlB,EAAA4wC,GACAvrB,GAAA,EACArlB,GAAA,EACA4wC,GAAAR,EAAA/qB,EAAArlB,EAAAvP,KAAAuE,QAEA,IAAAm4C,EAAA18C,KAAA40B,GACA4rB,EAAA,EACAv7C,EAAA,EACA,QAAAA,EAAAsK,IAAAixC,GAAA,KACA9D,GAAA18C,KAAA40B,EAAA3vB,GAAAu7C,EAMA,OAJAA,GAAA,IAEA9D,GAAA8D,IAAA9D,GAAA5wC,KAAAo9B,IAAA,IAAA35B,IAEAmtC,GAGArnC,EAAA7R,UAAAu9C,UAAA,SAAAnsB,EAAArlB,EAAA4wC,GACAvrB,GAAA,EACArlB,GAAA,EACA4wC,GAAAR,EAAA/qB,EAAArlB,EAAAvP,KAAAuE,QAEA,IAAAU,EAAAsK,EACAixC,EAAA,EACA9D,EAAA18C,KAAA40B,IAAA3vB,GACA,MAAAA,EAAA,IAAAu7C,GAAA,KACA9D,GAAA18C,KAAA40B,IAAA3vB,GAAAu7C,EAMA,OAJAA,GAAA,IAEA9D,GAAA8D,IAAA9D,GAAA5wC,KAAAo9B,IAAA,IAAA35B,IAEAmtC,GAGArnC,EAAA7R,UAAAw9C,SAAA,SAAApsB,EAAAurB,GAEA,OADAA,GAAAR,EAAA/qB,EAAA,EAAA50B,KAAAuE,QACA,IAAAvE,KAAA40B,IACA,OAAA50B,KAAA40B,GAAA,GADA50B,KAAA40B,IAIAvf,EAAA7R,UAAAy9C,YAAA,SAAArsB,EAAAurB,GACAA,GAAAR,EAAA/qB,EAAA,EAAA50B,KAAAuE,QACA,IAAAm4C,EAAA18C,KAAA40B,GAAA50B,KAAA40B,EAAA,MACA,aAAA8nB,EAAA,WAAAA,KAGArnC,EAAA7R,UAAA09C,YAAA,SAAAtsB,EAAAurB,GACAA,GAAAR,EAAA/qB,EAAA,EAAA50B,KAAAuE,QACA,IAAAm4C,EAAA18C,KAAA40B,EAAA,GAAA50B,KAAA40B,IAAA,EACA,aAAA8nB,EAAA,WAAAA,KAGArnC,EAAA7R,UAAA29C,YAAA,SAAAvsB,EAAAurB,GAGA,OAFAA,GAAAR,EAAA/qB,EAAA,EAAA50B,KAAAuE,QAEAvE,KAAA40B,GACA50B,KAAA40B,EAAA,MACA50B,KAAA40B,EAAA,OACA50B,KAAA40B,EAAA,QAGAvf,EAAA7R,UAAA49C,YAAA,SAAAxsB,EAAAurB,GAGA,OAFAA,GAAAR,EAAA/qB,EAAA,EAAA50B,KAAAuE,QAEAvE,KAAA40B,IAAA,GACA50B,KAAA40B,EAAA,OACA50B,KAAA40B,EAAA,MACA50B,KAAA40B,EAAA,IAGAvf,EAAA7R,UAAA69C,YAAA,SAAAzsB,EAAAurB,GAEA,OADAA,GAAAR,EAAA/qB,EAAA,EAAA50B,KAAAuE,QACAo2C,EAAAnS,KAAAxoC,KAAA40B,GAAA,SAGAvf,EAAA7R,UAAA89C,YAAA,SAAA1sB,EAAAurB,GAEA,OADAA,GAAAR,EAAA/qB,EAAA,EAAA50B,KAAAuE,QACAo2C,EAAAnS,KAAAxoC,KAAA40B,GAAA,SAGAvf,EAAA7R,UAAA+9C,aAAA,SAAA3sB,EAAAurB,GAEA,OADAA,GAAAR,EAAA/qB,EAAA,EAAA50B,KAAAuE,QACAo2C,EAAAnS,KAAAxoC,KAAA40B,GAAA,SAGAvf,EAAA7R,UAAAg+C,aAAA,SAAA5sB,EAAAurB,GAEA,OADAA,GAAAR,EAAA/qB,EAAA,EAAA50B,KAAAuE,QACAo2C,EAAAnS,KAAAxoC,KAAA40B,GAAA,SASAvf,EAAA7R,UAAAi+C,YAAA,SAAA70C,EAAAgoB,EAAArlB,EAAA4wC,GAIA,GAHAvzC,KACAgoB,GAAA,EACArlB,GAAA,GACA4wC,EAAA,CACA,IAAAuB,EAAA51C,KAAAo9B,IAAA,IAAA35B,GAAA,EACAswC,EAAA7/C,KAAA4M,EAAAgoB,EAAArlB,EAAAmyC,EAAA,GAGA,IAAAlB,EAAA,EACAv7C,EAAA,EACAjF,KAAA40B,GAAA,IAAAhoB,EACA,QAAA3H,EAAAsK,IAAAixC,GAAA,KACAxgD,KAAA40B,EAAA3vB,GAAA2H,EAAA4zC,EAAA,IAGA,OAAA5rB,EAAArlB,GAGA8F,EAAA7R,UAAAm+C,YAAA,SAAA/0C,EAAAgoB,EAAArlB,EAAA4wC,GAIA,GAHAvzC,KACAgoB,GAAA,EACArlB,GAAA,GACA4wC,EAAA,CACA,IAAAuB,EAAA51C,KAAAo9B,IAAA,IAAA35B,GAAA,EACAswC,EAAA7/C,KAAA4M,EAAAgoB,EAAArlB,EAAAmyC,EAAA,GAGA,IAAAz8C,EAAAsK,EAAA,EACAixC,EAAA,EACAxgD,KAAA40B,EAAA3vB,GAAA,IAAA2H,EACA,QAAA3H,GAAA,IAAAu7C,GAAA,KACAxgD,KAAA40B,EAAA3vB,GAAA2H,EAAA4zC,EAAA,IAGA,OAAA5rB,EAAArlB,GAGA8F,EAAA7R,UAAAo+C,WAAA,SAAAh1C,EAAAgoB,EAAAurB,GAMA,OALAvzC,KACAgoB,GAAA,EACAurB,GAAAN,EAAA7/C,KAAA4M,EAAAgoB,EAAA,SACAvf,EAAA4lC,sBAAAruC,EAAAd,KAAAD,MAAAe,IACA5M,KAAA40B,GAAA,IAAAhoB,EACAgoB,EAAA,GAWAvf,EAAA7R,UAAAq+C,cAAA,SAAAj1C,EAAAgoB,EAAAurB,GAUA,OATAvzC,KACAgoB,GAAA,EACAurB,GAAAN,EAAA7/C,KAAA4M,EAAAgoB,EAAA,WACAvf,EAAA4lC,qBACAj7C,KAAA40B,GAAA,IAAAhoB,EACA5M,KAAA40B,EAAA,GAAAhoB,IAAA,GAEAkzC,EAAA9/C,KAAA4M,EAAAgoB,GAAA,GAEAA,EAAA,GAGAvf,EAAA7R,UAAAs+C,cAAA,SAAAl1C,EAAAgoB,EAAAurB,GAUA,OATAvzC,KACAgoB,GAAA,EACAurB,GAAAN,EAAA7/C,KAAA4M,EAAAgoB,EAAA,WACAvf,EAAA4lC,qBACAj7C,KAAA40B,GAAAhoB,IAAA,EACA5M,KAAA40B,EAAA,OAAAhoB,GAEAkzC,EAAA9/C,KAAA4M,EAAAgoB,GAAA,GAEAA,EAAA,GAUAvf,EAAA7R,UAAAu+C,cAAA,SAAAn1C,EAAAgoB,EAAAurB,GAYA,OAXAvzC,KACAgoB,GAAA,EACAurB,GAAAN,EAAA7/C,KAAA4M,EAAAgoB,EAAA,gBACAvf,EAAA4lC,qBACAj7C,KAAA40B,EAAA,GAAAhoB,IAAA,GACA5M,KAAA40B,EAAA,GAAAhoB,IAAA,GACA5M,KAAA40B,EAAA,GAAAhoB,IAAA,EACA5M,KAAA40B,GAAA,IAAAhoB,GAEAozC,EAAAhgD,KAAA4M,EAAAgoB,GAAA,GAEAA,EAAA,GAGAvf,EAAA7R,UAAAw+C,cAAA,SAAAp1C,EAAAgoB,EAAAurB,GAYA,OAXAvzC,KACAgoB,GAAA,EACAurB,GAAAN,EAAA7/C,KAAA4M,EAAAgoB,EAAA,gBACAvf,EAAA4lC,qBACAj7C,KAAA40B,GAAAhoB,IAAA,GACA5M,KAAA40B,EAAA,GAAAhoB,IAAA,GACA5M,KAAA40B,EAAA,GAAAhoB,IAAA,EACA5M,KAAA40B,EAAA,OAAAhoB,GAEAozC,EAAAhgD,KAAA4M,EAAAgoB,GAAA,GAEAA,EAAA,GAGAvf,EAAA7R,UAAAy+C,WAAA,SAAAr1C,EAAAgoB,EAAArlB,EAAA4wC,GAGA,GAFAvzC,KACAgoB,GAAA,GACAurB,EAAA,CACA,IAAA+B,EAAAp2C,KAAAo9B,IAAA,IAAA35B,EAAA,GAEAswC,EAAA7/C,KAAA4M,EAAAgoB,EAAArlB,EAAA2yC,EAAA,GAAAA,GAGA,IAAAj9C,EAAA,EACAu7C,EAAA,EACAl1B,EAAA,EACAtrB,KAAA40B,GAAA,IAAAhoB,EACA,QAAA3H,EAAAsK,IAAAixC,GAAA,KACA5zC,EAAA,OAAA0e,GAAA,IAAAtrB,KAAA40B,EAAA3vB,EAAA,KACAqmB,EAAA,GAEAtrB,KAAA40B,EAAA3vB,IAAA2H,EAAA4zC,GAAA,GAAAl1B,EAAA,IAGA,OAAAsJ,EAAArlB,GAGA8F,EAAA7R,UAAA2+C,WAAA,SAAAv1C,EAAAgoB,EAAArlB,EAAA4wC,GAGA,GAFAvzC,KACAgoB,GAAA,GACAurB,EAAA,CACA,IAAA+B,EAAAp2C,KAAAo9B,IAAA,IAAA35B,EAAA,GAEAswC,EAAA7/C,KAAA4M,EAAAgoB,EAAArlB,EAAA2yC,EAAA,GAAAA,GAGA,IAAAj9C,EAAAsK,EAAA,EACAixC,EAAA,EACAl1B,EAAA,EACAtrB,KAAA40B,EAAA3vB,GAAA,IAAA2H,EACA,QAAA3H,GAAA,IAAAu7C,GAAA,KACA5zC,EAAA,OAAA0e,GAAA,IAAAtrB,KAAA40B,EAAA3vB,EAAA,KACAqmB,EAAA,GAEAtrB,KAAA40B,EAAA3vB,IAAA2H,EAAA4zC,GAAA,GAAAl1B,EAAA,IAGA,OAAAsJ,EAAArlB,GAGA8F,EAAA7R,UAAA4+C,UAAA,SAAAx1C,EAAAgoB,EAAAurB,GAOA,OANAvzC,KACAgoB,GAAA,EACAurB,GAAAN,EAAA7/C,KAAA4M,EAAAgoB,EAAA,YACAvf,EAAA4lC,sBAAAruC,EAAAd,KAAAD,MAAAe,IACAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,GACA5M,KAAA40B,GAAA,IAAAhoB,EACAgoB,EAAA,GAGAvf,EAAA7R,UAAA6+C,aAAA,SAAAz1C,EAAAgoB,EAAAurB,GAUA,OATAvzC,KACAgoB,GAAA,EACAurB,GAAAN,EAAA7/C,KAAA4M,EAAAgoB,EAAA,gBACAvf,EAAA4lC,qBACAj7C,KAAA40B,GAAA,IAAAhoB,EACA5M,KAAA40B,EAAA,GAAAhoB,IAAA,GAEAkzC,EAAA9/C,KAAA4M,EAAAgoB,GAAA,GAEAA,EAAA,GAGAvf,EAAA7R,UAAA8+C,aAAA,SAAA11C,EAAAgoB,EAAAurB,GAUA,OATAvzC,KACAgoB,GAAA,EACAurB,GAAAN,EAAA7/C,KAAA4M,EAAAgoB,EAAA,gBACAvf,EAAA4lC,qBACAj7C,KAAA40B,GAAAhoB,IAAA,EACA5M,KAAA40B,EAAA,OAAAhoB,GAEAkzC,EAAA9/C,KAAA4M,EAAAgoB,GAAA,GAEAA,EAAA,GAGAvf,EAAA7R,UAAA++C,aAAA,SAAA31C,EAAAgoB,EAAAurB,GAYA,OAXAvzC,KACAgoB,GAAA,EACAurB,GAAAN,EAAA7/C,KAAA4M,EAAAgoB,EAAA,0BACAvf,EAAA4lC,qBACAj7C,KAAA40B,GAAA,IAAAhoB,EACA5M,KAAA40B,EAAA,GAAAhoB,IAAA,EACA5M,KAAA40B,EAAA,GAAAhoB,IAAA,GACA5M,KAAA40B,EAAA,GAAAhoB,IAAA,IAEAozC,EAAAhgD,KAAA4M,EAAAgoB,GAAA,GAEAA,EAAA,GAGAvf,EAAA7R,UAAAg/C,aAAA,SAAA51C,EAAAgoB,EAAAurB,GAaA,OAZAvzC,KACAgoB,GAAA,EACAurB,GAAAN,EAAA7/C,KAAA4M,EAAAgoB,EAAA,0BACAhoB,EAAA,IAAAA,EAAA,WAAAA,EAAA,GACAyI,EAAA4lC,qBACAj7C,KAAA40B,GAAAhoB,IAAA,GACA5M,KAAA40B,EAAA,GAAAhoB,IAAA,GACA5M,KAAA40B,EAAA,GAAAhoB,IAAA,EACA5M,KAAA40B,EAAA,OAAAhoB,GAEAozC,EAAAhgD,KAAA4M,EAAAgoB,GAAA,GAEAA,EAAA,GAgBAvf,EAAA7R,UAAAi/C,aAAA,SAAA71C,EAAAgoB,EAAAurB,GACA,OAAAD,EAAAlgD,KAAA4M,EAAAgoB,GAAA,EAAAurB,IAGA9qC,EAAA7R,UAAAk/C,aAAA,SAAA91C,EAAAgoB,EAAAurB,GACA,OAAAD,EAAAlgD,KAAA4M,EAAAgoB,GAAA,EAAAurB,IAWA9qC,EAAA7R,UAAAm/C,cAAA,SAAA/1C,EAAAgoB,EAAAurB,GACA,OAAAC,EAAApgD,KAAA4M,EAAAgoB,GAAA,EAAAurB,IAGA9qC,EAAA7R,UAAAo/C,cAAA,SAAAh2C,EAAAgoB,EAAAurB,GACA,OAAAC,EAAApgD,KAAA4M,EAAAgoB,GAAA,EAAAurB,IAIA9qC,EAAA7R,UAAA2d,KAAA,SAAAmT,EAAAuuB,EAAA/xC,EAAAC,GAQA,GAPAD,MAAA,GACAC,GAAA,IAAAA,MAAA/Q,KAAAuE,QACAs+C,GAAAvuB,EAAA/vB,SAAAs+C,EAAAvuB,EAAA/vB,QACAs+C,MAAA,GACA9xC,EAAA,GAAAA,EAAAD,IAAAC,EAAAD,GAGAC,IAAAD,EAAA,SACA,OAAAwjB,EAAA/vB,QAAA,IAAAvE,KAAAuE,OAAA,SAGA,GAAAs+C,EAAA,EACA,UAAA32C,WAAA,6BAEA,GAAA4E,EAAA,GAAAA,GAAA9Q,KAAAuE,OAAA,UAAA2H,WAAA,6BACA,GAAA6E,EAAA,YAAA7E,WAAA,2BAGA6E,EAAA/Q,KAAAuE,SAAAwM,EAAA/Q,KAAAuE,QACA+vB,EAAA/vB,OAAAs+C,EAAA9xC,EAAAD,IACAC,EAAAujB,EAAA/vB,OAAAs+C,EAAA/xC,GAGA,IACA7L,EADA8K,EAAAgB,EAAAD,EAGA,GAAA9Q,OAAAs0B,GAAAxjB,EAAA+xC,KAAA9xC,EAEA,IAAA9L,EAAA8K,EAAA,EAAqB9K,GAAA,IAAQA,EAC7BqvB,EAAArvB,EAAA49C,GAAA7iD,KAAAiF,EAAA6L,QAEG,GAAAf,EAAA,MAAAsF,EAAA4lC,oBAEH,IAAAh2C,EAAA,EAAeA,EAAA8K,IAAS9K,EACxBqvB,EAAArvB,EAAA49C,GAAA7iD,KAAAiF,EAAA6L,QAGAjB,WAAArM,UAAA4V,IAAA3V,KACA6wB,EACAt0B,KAAA+6C,SAAAjqC,IAAAf,GACA8yC,GAIA,OAAA9yC,GAOAsF,EAAA7R,UAAA4+B,KAAA,SAAAsa,EAAA5rC,EAAAC,EAAAsB,GAEA,qBAAAqqC,EAAA,CASA,GARA,kBAAA5rC,GACAuB,EAAAvB,EACAA,EAAA,EACAC,EAAA/Q,KAAAuE,QACK,kBAAAwM,IACLsB,EAAAtB,EACAA,EAAA/Q,KAAAuE,QAEA,IAAAm4C,EAAAn4C,OAAA,CACA,IAAAsF,EAAA6yC,EAAA52C,WAAA,GACA+D,EAAA,MACA6yC,EAAA7yC,GAGA,QAAAmF,IAAAqD,GAAA,kBAAAA,EACA,UAAAzO,UAAA,6BAEA,qBAAAyO,IAAAgD,EAAA8qB,WAAA9tB,GACA,UAAAzO,UAAA,qBAAAyO,OAEG,kBAAAqqC,IACHA,GAAA,KAIA,GAAA5rC,EAAA,GAAA9Q,KAAAuE,OAAAuM,GAAA9Q,KAAAuE,OAAAwM,EACA,UAAA7E,WAAA,sBAGA,GAAA6E,GAAAD,EACA,OAAA9Q,KAQA,IAAAiF,EACA,GANA6L,KAAA,EACAC,OAAA/B,IAAA+B,EAAA/Q,KAAAuE,OAAAwM,IAAA,EAEA2rC,MAAA,GAGA,kBAAAA,EACA,IAAAz3C,EAAA6L,EAAmB7L,EAAA8L,IAAS9L,EAC5BjF,KAAAiF,GAAAy3C,MAEG,CACH,IAAAgD,EAAArqC,EAAAoE,SAAAijC,GACAA,EACAX,EAAA,IAAA1mC,EAAAqnC,EAAArqC,GAAAG,YACAzC,EAAA2vC,EAAAn7C,OACA,IAAAU,EAAA,EAAeA,EAAA8L,EAAAD,IAAiB7L,EAChCjF,KAAAiF,EAAA6L,GAAA4uC,EAAAz6C,EAAA8K,GAIA,OAAA/P,MAMA,IAAA8iD,EAAA,qBAEA,SAAAC,EAAAp5C,GAIA,GAFAA,EAAAq5C,EAAAr5C,GAAAxF,QAAA2+C,EAAA,IAEAn5C,EAAApF,OAAA,WAEA,MAAAoF,EAAApF,OAAA,MACAoF,GAAA,IAEA,OAAAA,EAGA,SAAAq5C,EAAAr5C,GACA,OAAAA,EAAArF,KAAAqF,EAAArF,OACAqF,EAAAxF,QAAA,iBAGA,SAAAs7C,EAAAtxC,GACA,OAAAA,EAAA,OAAAA,EAAAqE,SAAA,IACArE,EAAAqE,SAAA,IAGA,SAAAupC,EAAAxvC,EAAA02C,GAEA,IAAA/1C,EADA+1C,KAAAha,IAMA,IAJA,IAAA1kC,EAAAgI,EAAAhI,OACA2+C,EAAA,KACAxD,EAAA,GAEAz6C,EAAA,EAAiBA,EAAAV,IAAYU,EAAA,CAI7B,GAHAiI,EAAAX,EAAAzG,WAAAb,GAGAiI,EAAA,OAAAA,EAAA,OAEA,IAAAg2C,EAAA,CAEA,GAAAh2C,EAAA,QAEA+1C,GAAA,OAAAvD,EAAAx5C,KAAA,aACA,SACS,GAAAjB,EAAA,IAAAV,EAAA,EAET0+C,GAAA,OAAAvD,EAAAx5C,KAAA,aACA,SAIAg9C,EAAAh2C,EAEA,SAIA,GAAAA,EAAA,QACA+1C,GAAA,OAAAvD,EAAAx5C,KAAA,aACAg9C,EAAAh2C,EACA,SAIAA,EAAA,OAAAg2C,EAAA,UAAAh2C,EAAA,YACKg2C,IAELD,GAAA,OAAAvD,EAAAx5C,KAAA,aAMA,GAHAg9C,EAAA,KAGAh2C,EAAA,KACA,IAAA+1C,GAAA,WACAvD,EAAAx5C,KAAAgH,QACK,GAAAA,EAAA,MACL,IAAA+1C,GAAA,WACAvD,EAAAx5C,KACAgH,GAAA,MACA,GAAAA,EAAA,UAEK,GAAAA,EAAA,OACL,IAAA+1C,GAAA,WACAvD,EAAAx5C,KACAgH,GAAA,OACAA,GAAA,SACA,GAAAA,EAAA,SAEK,MAAAA,EAAA,SASL,UAAAgD,MAAA,sBARA,IAAA+yC,GAAA,WACAvD,EAAAx5C,KACAgH,GAAA,OACAA,GAAA,UACAA,GAAA,SACA,GAAAA,EAAA,MAOA,OAAAwyC,EAGA,SAAAjC,EAAA9zC,GAEA,IADA,IAAAw5C,EAAA,GACAl+C,EAAA,EAAiBA,EAAA0E,EAAApF,SAAgBU,EAEjCk+C,EAAAj9C,KAAA,IAAAyD,EAAA7D,WAAAb,IAEA,OAAAk+C,EAGA,SAAAtF,EAAAl0C,EAAAs5C,GAGA,IAFA,IAAA94C,EAAAi5C,EAAAC,EACAF,EAAA,GACAl+C,EAAA,EAAiBA,EAAA0E,EAAApF,SAAgBU,EAAA,CACjC,IAAAg+C,GAAA,WAEA94C,EAAAR,EAAA7D,WAAAb,GACAm+C,EAAAj5C,GAAA,EACAk5C,EAAAl5C,EAAA,IACAg5C,EAAAj9C,KAAAm9C,GACAF,EAAAj9C,KAAAk9C,GAGA,OAAAD,EAGA,SAAAnH,EAAAryC,GACA,OAAA+wC,EAAAlrC,YAAAuzC,EAAAp5C,IAGA,SAAA4zC,GAAA5oB,EAAAmN,EAAAlN,EAAArwB,GACA,QAAAU,EAAA,EAAiBA,EAAAV,IAAYU,EAAA,CAC7B,GAAAA,EAAA2vB,GAAAkN,EAAAv9B,QAAAU,GAAA0vB,EAAApwB,OAAA,MACAu9B,EAAA78B,EAAA2vB,GAAAD,EAAA1vB,GAEA,OAAAA,EAGA,SAAA22C,GAAAc,GACA,OAAAA,iECluDA,SAAAjnB,EAAAppB,EAAAi3C,GACA,GAAA1mB,EAAA,iBACA,OAAAvwB,EAGA,IAAAk3C,GAAA,EACA,SAAAC,IACA,IAAAD,EAAA,CACA,GAAA3mB,EAAA,oBACA,UAAA1sB,MAAAozC,GACO1mB,EAAA,oBACPmC,QAAA0kB,MAAAH,GAEAvkB,QAAAC,KAAAskB,GAEAC,GAAA,EAEA,OAAAl3C,EAAAsM,MAAA3Y,KAAA8Z,WAGA,OAAA0pC,EAWA,SAAA5mB,EAAAxP,GAEA,IACA,IAAA/iB,EAAAq5C,aAAA,SACG,MAAAvkB,GACH,SAEA,IAAAud,EAAAryC,EAAAq5C,aAAAt2B,GACA,aAAAsvB,GACA,SAAAlzC,OAAAkzC,GAAA73C,cA5DAnF,EAAAC,QAAA81B,mECLA,IAAAkuB,EAAA,WAA0B,IAAAC,EAAA5jD,KAAa6jD,EAAAD,EAAAE,eAA0BC,EAAAH,EAAAI,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBE,YAAA,QAAmB,CAAAF,EAAA,oBAC7HG,EAAA,GCDIC,EAAM,WAAgB,IAAAP,EAAA5jD,KAAa6jD,EAAAD,EAAAE,eAA0BC,EAAAH,EAAAI,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBE,YAAA,SAAoB,CAAAF,EAAA,QAAaK,MAAA,CAAOC,OAAA,KAAa,CAAAN,EAAA,OAAYE,YAAA,oBAA+B,CAAAF,EAAA,SAAcO,WAAA,EAAal3B,KAAA,QAAAm3B,QAAA,UAAA33C,MAAAg3C,EAAA,YAAAY,WAAA,gBAAgFP,YAAA,eAAAG,MAAA,CAAoCn4C,KAAA,OAAAw4C,YAAA,YAAAC,aAAA,YAAAC,mBAAA,gBAAmGC,SAAA,CAAWh4C,MAAAg3C,EAAA,aAA0BnyC,GAAA,CAAK/D,MAAA,SAAAm3C,GAAyBA,EAAAvwB,OAAAwwB,YAAsClB,EAAAmB,YAAAF,EAAAvwB,OAAA1nB,WAAsCm3C,EAAA,OAAYE,YAAA,sBAAiC,CAAAF,EAAA,UAAeE,YAAA,4BAAAG,MAAA,CAA+Cn4C,KAAA,UAAgBwF,GAAA,CAAKuzC,MAAApB,EAAAqB,cAAyB,CAAArB,EAAAsB,GAAA,kBAAAnB,EAAA,OAAqCE,YAAA,OAAkBL,EAAAuB,GAAAvB,EAAA,mBAAAwB,GAAwC,OAAArB,EAAA,OAAiBrxC,IAAA0yC,EAAAC,MAAApB,YAAA,qCAAgE,CAAAF,EAAA,OAAYE,YAAA,QAAmB,CAAAL,EAAA0B,GAAA,MAAAvB,EAAA,OAA2BE,YAAA,eAAAG,MAAA,CAAkCzvB,IAAAywB,EAAAG,cAAAC,IAAA,oBAAkDzB,EAAA,OAAYE,YAAA,aAAwB,CAAAF,EAAA,KAAUE,YAAA,uBAAkC,CAAAL,EAAAsB,GAAAtB,EAAA6B,GAAAL,EAAAC,UAAAtB,EAAA,KAAwCE,YAAA,sBAAiC,CAAAL,EAAAsB,GAAAtB,EAAA6B,GAAAL,EAAAhpB,gBAAAwnB,EAAA0B,GAAA,cAA2D,MAClvCI,EAAe,YAAiB,IAAA9B,EAAA5jD,KAAa6jD,EAAAD,EAAAE,eAA0BC,EAAAH,EAAAI,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBE,YAAA,SAAoB,CAAAF,EAAA,KAAUE,YAAA,mBAA8B,WAAc,IAAAL,EAAA5jD,KAAa6jD,EAAAD,EAAAE,eAA0BC,EAAAH,EAAAI,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBE,YAAA,eAA0B,CAAAF,EAAA,UAAeE,YAAA,kBAAAG,MAAA,CAAqCn4C,KAAA,WAAiB,CAAA23C,EAAAsB,GAAA,8BC8B7WS,EAAA,CACAv4B,KAAA,aACAw4B,MAAA,GACAvyC,KAAA,WACA,OACAwyC,UAAA,GACAd,YAAA,KAGAe,QAAA,CACAb,YAAA,eAAAtwC,EAAA3U,KACAA,KAAA+kD,aACAgB,EAAA,gBAAA/lD,KAAA+kD,YAAA,SAAA7vC,EAAAwkB,GACAxkB,EACA6pB,QAAA/yB,MAAAkJ,IAEAP,EAAAkxC,UAAA3/C,KAAAwzB,GACAqF,QAAAsK,IAAA3P,SChDqVssB,EAAA,0BCQrVC,EAAgBp/C,OAAAq/C,EAAA,KAAAr/C,CACdm/C,EACA7B,EACAuB,GACF,EACA,KACA,WACA,MAIeS,EAAAF,UCTfG,EAAA,CACAh5B,KAAA,UACAi5B,WAAA,CACAF,gBCbiVG,EAAA,ECO7UC,EAAY1/C,OAAAq/C,EAAA,KAAAr/C,CACdy/C,EACA3C,EACAO,GACF,EACA,KACA,KACA,MAIesC,EAAA,WAAAD,gCClBf7mD,EAAAC,QAAiBC,EAAQ,QAAY86B,mCCArC,SAAA0L,EAAA/wB,EAAAhL,GAAA,IAAA0/B,EAAiBnqC,EAAQ,QACzBmV,EAAenV,EAAQ,QACvBiV,EAAajV,EAAQ,QAErBuqC,EAAAxqC,EAAAyqC,YAAA,CACAqc,OAAA,EACAC,OAAA,EACAC,iBAAA,EACAjZ,QAAA,EACAC,KAAA,GAGAzD,EAAAvqC,EAAAuqC,gBAAA,SAAAwB,EAAA1B,EAAAmB,EAAAyb,GACA,IAAAj8C,EAAA3K,KAiBA,GAhBA6U,EAAAg+B,SAAApvC,KAAAkH,GAEAA,EAAA2gC,MAAAH,EACAxgC,EAAA+wB,QAAA,GACA/wB,EAAAk8C,WAAA,GACAl8C,EAAAm8C,SAAA,GACAn8C,EAAAo8C,YAAA,GAGAp8C,EAAA8G,GAAA,iBAEA20B,EAAAjU,SAAA,WACAxnB,EAAAgH,KAAA,aAIA,UAAAw5B,EAAA,CAYA,GAXAxgC,EAAAoiC,eAAA/C,EAEAr/B,EAAA1H,IAAA+mC,EAAA/mC,IACA0H,EAAAk9B,WAAAmC,EAAA3M,OACA1yB,EAAAq8C,cAAAhd,EAAAid,WAEAjd,EAAAtO,QAAAjpB,QAAA,SAAAq5B,EAAAp5B,GACA/H,EAAA+wB,QAAAhpB,EAAA7N,eAAAinC,EACAnhC,EAAAk8C,WAAA3gD,KAAAwM,EAAAo5B,KAGA/B,EAAAqI,eAAA,CACA,IAAAv5B,EAAA,IAAAw5B,eAAA,CACAj6B,MAAA,SAAAhG,GACA,WAAA2tB,QAAA,SAAAh/B,EAAAi/B,GACAr1B,EAAAqhC,WACAhM,IACOr1B,EAAAzE,KAAA,IAAAmP,EAAAjD,IACPrR,IAEA4J,EAAAu8C,aAAAnmD,KAIAuX,MAAA,WACAjO,EAAAk+B,aAAAqe,GACAj8C,EAAAqhC,YACArhC,EAAAzE,KAAA,OAEAmiC,MAAA,SAAAnzB,GACAvK,EAAAqhC,YACArhC,EAAAgH,KAAA,QAAAuD,MAIA,IAMA,YALA80B,EAAAza,KAAA43B,OAAAtuC,GAAAuuC,MAAA,SAAAlyC,GACA7K,EAAAk+B,aAAAqe,GACAj8C,EAAAqhC,YACArhC,EAAAgH,KAAA,QAAAuD,KAGI,MAAAhM,KAGJ,IAAAm+C,EAAArd,EAAAza,KAAA+3B,YACA,SAAA9e,IACA6e,EAAA7e,OAAAsE,KAAA,SAAA5lC,GACA,IAAAyD,EAAAqhC,WAAA,CAEA,GAAA9kC,EAAA0N,KAGA,OAFAvK,EAAAk+B,aAAAqe,QACAj8C,EAAAzE,KAAA,MAGAyE,EAAAzE,KAAA,IAAAmP,EAAAnO,EAAA0F,QACA47B,OACI4e,MAAA,SAAAlyC,GACJ7K,EAAAk+B,aAAAqe,GACAj8C,EAAAqhC,YACArhC,EAAAgH,KAAA,QAAAuD,KAGAszB,QACE,CACF79B,EAAAsiC,KAAAvB,EACA/gC,EAAA48C,KAAA,EAEA58C,EAAA1H,IAAAyoC,EAAA8b,YACA78C,EAAAk9B,WAAA6D,EAAArO,OACA1yB,EAAAq8C,cAAAtb,EAAAub,WACA,IAAAvrB,EAAAgQ,EAAA+b,wBAAAxjD,MAAA,SAoBA,GAnBAy3B,EAAAjpB,QAAA,SAAAq5B,GACA,IAAA4b,EAAA5b,EAAAhnC,MAAA,oBACA,GAAA4iD,EAAA,CACA,IAAAh1C,EAAAg1C,EAAA,GAAA7iD,cACA,eAAA6N,QACA1D,IAAArE,EAAA+wB,QAAAhpB,KACA/H,EAAA+wB,QAAAhpB,GAAA,IAEA/H,EAAA+wB,QAAAhpB,GAAAxM,KAAAwhD,EAAA,UACK14C,IAAArE,EAAA+wB,QAAAhpB,GACL/H,EAAA+wB,QAAAhpB,IAAA,KAAAg1C,EAAA,GAEA/8C,EAAA+wB,QAAAhpB,GAAAg1C,EAAA,GAEA/8C,EAAAk8C,WAAA3gD,KAAAwhD,EAAA,GAAAA,EAAA,OAIA/8C,EAAAg9C,SAAA,kBACA5d,EAAAsB,iBAAA,CACA,IAAAuc,EAAAj9C,EAAAk8C,WAAA,aACA,GAAAe,EAAA,CACA,IAAAC,EAAAD,EAAA9iD,MAAA,2BACA+iD,IACAl9C,EAAAg9C,SAAAE,EAAA,GAAAhjD,eAGA8F,EAAAg9C,WACAh9C,EAAAg9C,SAAA,YAKA5yC,EAAAm1B,EAAAr1B,EAAAg+B,UAEA3I,EAAA1mC,UAAAwQ,MAAA,WACA,IAAArJ,EAAA3K,KAEAe,EAAA4J,EAAAu8C,aACAnmD,IACA4J,EAAAu8C,aAAA,KACAnmD,MAIAmpC,EAAA1mC,UAAAoqC,eAAA,WACA,IAAAjjC,EAAA3K,KAEA0rC,EAAA/gC,EAAAsiC,KAEAjD,EAAA,KACA,OAAAr/B,EAAA2gC,OACA,mBACA,GAAAI,EAAA+B,aAAAtD,EAAAwD,KACA,MACA,IAEA3D,EAAA,IAAA3/B,EAAAuoC,QAAAlH,EAAAoc,cAAAC,UACI,MAAA7+C,IACJ,UAAA8gC,EAAA,CACAr/B,EAAAzE,KAAA,IAAAmP,EAAA20B,IACA,MAGA,WACA,IACAA,EAAA0B,EAAAsc,aACI,MAAA9+C,GACJyB,EAAA2gC,MAAA,eACA,MAEA,GAAAtB,EAAAzlC,OAAAoG,EAAA48C,KAAA,CACA,IAAAU,EAAAje,EAAAtlC,OAAAiG,EAAA48C,MACA,sBAAA58C,EAAAg9C,SAAA,CAEA,IADA,IAAAl4B,EAAA,IAAApa,EAAA4yC,EAAA1jD,QACAU,EAAA,EAAoBA,EAAAgjD,EAAA1jD,OAAoBU,IACxCwqB,EAAAxqB,GAAA,IAAAgjD,EAAAniD,WAAAb,GAEA0F,EAAAzE,KAAAupB,QAEA9kB,EAAAzE,KAAA+hD,EAAAt9C,EAAAg9C,UAEAh9C,EAAA48C,KAAAvd,EAAAzlC,OAEA,MACA,kBACA,GAAAmnC,EAAA+B,aAAAtD,EAAAwD,OAAAjC,EAAA1B,SACA,MACAA,EAAA0B,EAAA1B,SACAr/B,EAAAzE,KAAA,IAAAmP,EAAA,IAAAxF,WAAAm6B,KACA,MACA,8BAEA,GADAA,EAAA0B,EAAA1B,SACA0B,EAAA+B,aAAAtD,EAAAuD,UAAA1D,EACA,MACAr/B,EAAAzE,KAAA,IAAAmP,EAAA,IAAAxF,WAAAm6B,KACA,MACA,gBAEA,GADAA,EAAA0B,EAAA1B,SACA0B,EAAA+B,aAAAtD,EAAAuD,QACA,MACA,IAAA2Z,EAAA,IAAAh9C,EAAA69C,eACAb,EAAAxZ,WAAA,WACAwZ,EAAAngD,OAAAqI,WAAA5E,EAAA48C,OACA58C,EAAAzE,KAAA,IAAAmP,EAAA,IAAAxF,WAAAw3C,EAAAngD,OAAA9B,MAAAuF,EAAA48C,SACA58C,EAAA48C,KAAAF,EAAAngD,OAAAqI,aAGA83C,EAAAc,OAAA,WACAx9C,EAAAzE,KAAA,OAGAmhD,EAAAe,kBAAApe,GACA,MAIAr/B,EAAAsiC,KAAAQ,aAAAtD,EAAAwD,MAAA,cAAAhjC,EAAA2gC,OACA3gC,EAAAzE,KAAA,+EC7NA,MAAAiL,EAAkBvR,EAAQ,QAAQuR,SAClCmE,EAAkB1V,EAAQ,QAC1BoxC,EAAkBpxC,EAAQ,QAS1BF,EAAAC,QAAA,cAAAwR,EACAC,YAAAi3C,GAKA,IAAAC,EAJAj3C,QACArR,KAAA4Y,QAAAtD,EAAAM,cAAA,GAA4CO,eAAA,IAC5CnW,KAAA4Y,QAAAnH,GAAA,QAAAzR,KAAA2R,KAAAuC,KAAAlU,KAAA,UAGA,IAEAuoD,EACAC,EAAA5zB,EAAAziB,EAAAs2C,EAGAnP,EACAoP,EACAC,EARAC,EAAA,EACA12C,EAAA,EAGA22C,EAAA,GACAC,GAAA,EAKA,MAAAC,EAAAp/C,IACA,MAAAq/C,EAAA,CACAC,iBAAAZ,EACAv4B,OAAA5d,EACAg3C,KAAAN,GAEA,OAAAj/C,EAAAxF,QAAA,cAAAoK,EAAA46C,IAAAH,EAAAG,KAGAnpD,KAAA4Y,QAAAnH,GAAA,UAAA8tB,IACA,OAAAA,EAAAnS,MACA,UACAw7B,EACA,IAAA92C,KAAAytB,EAAAlS,WAAA+7B,uBAAAr3C,UACAunC,EAAA,YAAA/Z,EAAAlS,WAAAphB,KACA,MACA,aAEAiG,EAAA,EACAs2C,EAAA,IACAr2C,EAAA,EACAyiB,EAAA,EACA6zB,EAAA,GACAC,EAAA,EACAC,EAAA3X,EAAAzf,YAAAgO,EAAAlS,WAAAvc,QAAA,EACA,MACA,kBACAoB,EAAApI,SAAAy1B,EAAAlS,WAAAg8B,cAAAn3C,EACAs2C,EAAA1+C,SAAAy1B,EAAAlS,WAAAm7B,cACAr2C,EAAArI,SAAAy1B,EAAAlS,WAAAlb,aACAyiB,EAAA9qB,SAAAy1B,EAAAlS,WAAAi8B,yBAAA10B,EACA,MACA,sBACA2zB,EAAAhpB,EAAAlS,WACAnb,EAAApI,SAAAy1B,EAAAlS,WAAAg8B,cAAAn3C,EACAs2C,EAAA1+C,SAAAy1B,EAAAlS,WAAAm7B,cACA,MACA,sBACA,cACAF,EAAA/oB,EAAAnS,KACA,MACA,QACAy7B,EAAA3iD,KAAA,CACA4D,SAAAy1B,EAAAlS,WAAAqD,GACA5mB,SAAAy1B,EAAAlS,WAAAiE,KAEA,MACA,oBACA,qBAeA,GAdAo3B,IACA,MAAAL,IACAA,EAAA9oB,EAAAlS,WAAA8L,IAEA2vB,EAAAvpB,EAAAlS,WAAA8L,KAAAkvB,EAAA,GACAS,IACAH,IACAC,GAAAD,GAEA/zB,IACAg0B,GAAAh0B,EAAA4zB,EAAA,KAEAxoD,KAAA2R,KAAA,YAAAi3C,IAEAE,GAAAP,GAAAM,EAAAtkD,OAAA,CACAgkD,EAAAgB,gBACAvpD,KAAA2R,KAAA,QACA1O,IAAAwlD,EAAAhwC,OAAA7R,QAAAxC,KAAA,IACA2kD,EAAAR,EAAAgB,gBACAr3C,MAAA,EACAC,SAAA,IAGA,QAAAA,EAAAq3C,KAAAX,EAAA,CACA12C,IAAAq2C,EAAA,IACAgB,KAAA,EACA,QAAAvkD,EAAA,EAA6BA,EAAAukD,EAAYvkD,IACzCjF,KAAA2R,KAAA,QACA1O,IAAAwlD,EAAAhwC,OAAA7R,QAAAxC,KAAA,IACA2kD,EAAAR,EAAAjsB,OACApqB,QACAC,aAEAy2C,GAAAz2C,GAIA,MACA,qBACA22C,GACA9oD,KAAA2R,KAAA,QACA1O,IAAAwlD,EAAAhwC,OAAA7R,QAAAxC,KAAA,IAAAm7B,EAAAlS,WAAAo8B,UACAv3C,QACAC,SAAA,IAGA,MACA,iBACA,GAAA22C,EAAA,CACA,IAAAY,EAAAb,EAAAlhD,QACAgiD,GAAAD,KAAA,IAAAv3C,GAAAq2C,EAAA,IACAxoD,KAAA2R,KAAA,QACA1O,IAAAwlD,EAAAhwC,OAAA7R,QAAAxC,KAAA,IAAAm7B,EAAAlS,WAAAiP,MACApqB,QACAC,SAAAw3C,IAEAf,GAAAe,EAEA,SAIA,MAAAC,EAAA,KACAtQ,GAAqBt5C,KAAA2R,KAAA,WACrBm3C,GACA9oD,KAAA2R,KAAA,QAAAzB,yBAAoDm4C,iBAEpDroD,KAAA2R,KAAA,QAGA3R,KAAA4Y,QAAAnH,GAAA,WAAAyb,IACA,OAAAA,GACA,oBACA,qBACAw7B,IACA,MACA,kBACAI,IACA9oD,KAAA2R,KAAA,YACAi4C,IACA5pD,KAAA4Y,QAAAS,sBAEA,SAIArZ,KAAA4Y,QAAAnH,GAAA,OAAAob,IACA,YAAAy7B,IACAG,EAAAC,GAAA77B,EACAy7B,EAAA,QAIAtoD,KAAAyR,GAAA,SAAAm4C,GAGAx4C,OAAAgB,EAAAC,EAAAC,GACAtS,KAAA4Y,QAAAR,MAAAhG,EAAAC,GACAC,4BC/KA5S,EAAAC,QAAiBC,EAAQ,QAAYqT,gCCqBrCvT,EAAAC,QAAAmW,EAEA,IAAA+zC,EAASjqD,EAAQ,QAAQgyB,aACzB7c,EAAenV,EAAQ,QAiBvB,SAAAkW,IACA+zC,EAAApmD,KAAAzD,MAhBA+U,EAAAe,EAAA+zC,GACA/zC,EAAA+8B,SAAkBjzC,EAAQ,QAC1BkW,EAAA3E,SAAkBvR,EAAQ,QAC1BkW,EAAA5C,OAAgBtT,EAAQ,QACxBkW,EAAA7C,UAAmBrT,EAAQ,QAC3BkW,EAAA4kB,YAAqB96B,EAAQ,QAG7BkW,WAWAA,EAAAtS,UAAA4kC,KAAA,SAAAsO,EAAAziC,GACA,IAAAvQ,EAAA1D,KAEA,SAAAqxC,EAAAj/B,GACAskC,EAAA79B,WACA,IAAA69B,EAAAt+B,MAAAhG,IAAA1O,EAAAi0C,OACAj0C,EAAAi0C,QAOA,SAAAN,IACA3zC,EAAAoV,UAAApV,EAAA2U,QACA3U,EAAA2U,SAJA3U,EAAA+N,GAAA,OAAA4/B,GAQAqF,EAAAjlC,GAAA,QAAA4lC,GAIAX,EAAAoT,UAAA71C,IAAA,IAAAA,EAAAlD,MACArN,EAAA+N,GAAA,MAAAuH,GACAtV,EAAA+N,GAAA,QAAA8lC,IAGA,IAAAwS,GAAA,EACA,SAAA/wC,IACA+wC,IACAA,GAAA,EAEArT,EAAA3lC,OAIA,SAAAwmC,IACAwS,IACAA,GAAA,EAEA,oBAAArT,EAAA5kB,SAAA4kB,EAAA5kB,WAIA,SAAA7Y,EAAA7F,GAEA,GADA+jC,IACA,IAAA0S,EAAAG,cAAAhqD,KAAA,SACA,MAAAoT,EAQA,SAAA+jC,IACAzzC,EAAAmuC,eAAA,OAAAR,GACAqF,EAAA7E,eAAA,QAAAwF,GAEA3zC,EAAAmuC,eAAA,MAAA74B,GACAtV,EAAAmuC,eAAA,QAAA0F,GAEA7zC,EAAAmuC,eAAA,QAAA54B,GACAy9B,EAAA7E,eAAA,QAAA54B,GAEAvV,EAAAmuC,eAAA,MAAAsF,GACAzzC,EAAAmuC,eAAA,QAAAsF,GAEAT,EAAA7E,eAAA,QAAAsF,GAWA,OA5BAzzC,EAAA+N,GAAA,QAAAwH,GACAy9B,EAAAjlC,GAAA,QAAAwH,GAmBAvV,EAAA+N,GAAA,MAAA0lC,GACAzzC,EAAA+N,GAAA,QAAA0lC,GAEAT,EAAAjlC,GAAA,QAAA0lC,GAEAT,EAAA/kC,KAAA,OAAAjO,GAGAgzC,yBC7HA,IAAArhC,EAAazV,EAAQ,QAAQyV,OAE7B3V,EAAAC,QAAA,SAAA6hC,GAEA,GAAAA,aAAA3xB,WAAA,CAEA,OAAA2xB,EAAAma,YAAAna,EAAAjyB,aAAAiyB,EAAA/R,OAAAlgB,WACA,OAAAiyB,EAAA/R,OACG,uBAAA+R,EAAA/R,OAAArqB,MAEH,OAAAo8B,EAAA/R,OAAArqB,MAAAo8B,EAAAma,WAAAna,EAAAma,WAAAna,EAAAjyB,YAIA,GAAA8F,EAAAoE,SAAA+nB,GAAA,CAKA,IAFA,IAAAyoB,EAAA,IAAAp6C,WAAA2xB,EAAAj9B,QACAwL,EAAAyxB,EAAAj9B,OACAU,EAAA,EAAiBA,EAAA8K,EAAS9K,IAC1BglD,EAAAhlD,GAAAu8B,EAAAv8B,GAEA,OAAAglD,EAAAx6B,OAEA,UAAAvf,MAAA,kDCxBAxQ,EAAAC,QAAA,MAOAyR,YAAA84C,EAAAj2C,GACAjU,KAAAmqD,QAAAD,EACAj2C,KAAA,GACAjU,KAAAoqD,aAAAn2C,EAAA4kC,aAAA,EACA74C,KAAAw5C,MAAA,GACAx5C,KAAAqxB,MAAA,EACArxB,KAAAy5C,OAAA,EAUAroC,KAAA6oC,EAAA3nC,GACAtS,KAAAw5C,MAAAtzC,KAAA,CAAqB+zC,OAAA3nC,aACrBtS,KAAAqxB,QACArxB,KAAAqqD,QAOAj5C,QACA,GAAApR,KAAAy5C,QAAAz5C,KAAAoqD,eAAApqD,KAAAw5C,MAAAj1C,OAAiE,OACjE,MAAA01C,KAAWA,EAAA3nC,YAAiBtS,KAAAw5C,MAAA7xC,QAC5B,IAAA2iD,GAAA,EACAtqD,KAAAy5C,SACAz5C,KAAAmqD,QAAAlQ,EAAA/kC,IACAo1C,IACAtqD,KAAAy5C,SACA6Q,GAAA,EACAh4C,GAAqBA,EAAA4C,GACrBlV,KAAAqqD,WAQAj5C,MACApR,KAAAw5C,MAAA,yCCpDA,SAAApT,EAAA/7B,GA6BA,IAAAwnB,EAAUjyB,EAAQ,QAelB,SAAA2qD,EAAA7zC,GACA,IAAA/B,EAAA3U,KAEAA,KAAAi1B,KAAA,KACAj1B,KAAAg1B,MAAA,KACAh1B,KAAAwqD,OAAA,WACAC,EAAA91C,EAAA+B,IAlBAhX,EAAAC,QAAAwR,EAwBA,IAIA+B,EAJAw3C,GAAAtkB,EAAAukB,SAAA,kBAAA7mD,QAAAsiC,EAAAt3B,QAAA1J,MAAA,SAAAgsC,aAAAvf,EAAAM,SAOAhhB,EAAAy5C,gBAGA,IAAA9qD,EAAWF,EAAQ,QACnBE,EAAAiV,SAAgBnV,EAAQ,QAIxB,IAAAirD,EAAA,CACAp1B,UAAa71B,EAAQ,SAKrBkW,EAAalW,EAAQ,QAKrByV,EAAazV,EAAQ,QAAayV,OAClC69B,EAAA7oC,EAAAwF,YAAA,aACA,SAAAsjC,EAAA/gC,GACA,OAAAiD,EAAA4sB,KAAA7vB,GAEA,SAAAghC,EAAA9vC,GACA,OAAA+R,EAAAoE,SAAAnW,iBAAA4vC,EAKA,IA2IA4X,EA3IAvX,EAAkB3zC,EAAQ,QAI1B,SAAAmrD,KAEA,SAAAH,EAAA32C,EAAAY,GACA3B,KAAqBtT,EAAQ,QAE7BqU,KAAA,GAOA,IAAAy/B,EAAA7+B,aAAA3B,EAIAlT,KAAA2zC,aAAA1/B,EAAA0/B,WAEAD,IAAA1zC,KAAA2zC,WAAA3zC,KAAA2zC,cAAA1/B,EAAA+2C,oBAKA,IAAAnX,EAAA5/B,EAAAF,cACAk3C,EAAAh3C,EAAAi3C,sBACAlX,EAAAh0C,KAAA2zC,WAAA,SAEA3zC,KAAA+T,cAAA8/B,GAAA,IAAAA,IAAiDH,IAAAuX,GAAA,IAAAA,KAA0FjX,EAG3Ih0C,KAAA+T,cAAAjI,KAAAD,MAAA7L,KAAA+T,eAGA/T,KAAAmrD,aAAA,EAGAnrD,KAAAy3C,WAAA,EAEAz3C,KAAAwyB,QAAA,EAEAxyB,KAAAsyB,OAAA,EAEAtyB,KAAAyyB,UAAA,EAGAzyB,KAAAgyB,WAAA,EAKA,IAAAo5B,GAAA,IAAAn3C,EAAAo3C,cACArrD,KAAAqrD,eAAAD,EAKAprD,KAAAu0C,gBAAAtgC,EAAAsgC,iBAAA,OAKAv0C,KAAAuE,OAAA,EAGAvE,KAAAsrD,SAAA,EAGAtrD,KAAAurD,OAAA,EAMAvrD,KAAAqU,MAAA,EAKArU,KAAAwrD,kBAAA,EAGAxrD,KAAAyrD,QAAA,SAAAr4C,GACAq4C,EAAA52C,EAAAzB,IAIApT,KAAAyT,QAAA,KAGAzT,KAAA0rD,SAAA,EAEA1rD,KAAA2rD,gBAAA,KACA3rD,KAAA4rD,oBAAA,KAIA5rD,KAAA6rD,UAAA,EAIA7rD,KAAA8rD,aAAA,EAGA9rD,KAAAkyB,cAAA,EAGAlyB,KAAA+rD,qBAAA,EAIA/rD,KAAAgsD,mBAAA,IAAAzB,EAAAvqD,MA0CA,SAAAmR,EAAA8C,GAUA,GATAf,KAAqBtT,EAAQ,SAS7BkrD,EAAArnD,KAAA0N,EAAAnR,yBAAAkT,GACA,WAAA/B,EAAA8C,GAGAjU,KAAA8U,eAAA,IAAA81C,EAAA32C,EAAAjU,MAGAA,KAAA6Y,UAAA,EAEA5E,IACA,oBAAAA,EAAAmE,QAAApY,KAAAgV,OAAAf,EAAAmE,OAEA,oBAAAnE,EAAAg4C,SAAAjsD,KAAAksD,QAAAj4C,EAAAg4C,QAEA,oBAAAh4C,EAAA6d,UAAA9xB,KAAAiV,SAAAhB,EAAA6d,SAEA,oBAAA7d,EAAAk4C,QAAAnsD,KAAAosD,OAAAn4C,EAAAk4C,QAGAr2C,EAAArS,KAAAzD,MAQA,SAAAqsD,EAAAx3C,EAAA9B,GACA,IAAAK,EAAA,IAAAlD,MAAA,mBAEA2E,EAAAlD,KAAA,QAAAyB,GACAye,EAAAM,SAAApf,EAAAK,GAMA,SAAAk5C,EAAAz3C,EAAA6B,EAAAtE,EAAAW,GACA,IAAAw5C,GAAA,EACAn5C,GAAA,EAYA,OAVA,OAAAhB,EACAgB,EAAA,IAAAxP,UAAA,uCACG,kBAAAwO,QAAApD,IAAAoD,GAAAsE,EAAAi9B,aACHvgC,EAAA,IAAAxP,UAAA,oCAEAwP,IACAyB,EAAAlD,KAAA,QAAAyB,GACAye,EAAAM,SAAApf,EAAAK,GACAm5C,GAAA,GAEAA,EAqDA,SAAAC,EAAA91C,EAAAtE,EAAAC,GAIA,OAHAqE,EAAAi9B,aAAA,IAAAj9B,EAAA20C,eAAA,kBAAAj5C,IACAA,EAAAiD,EAAA4sB,KAAA7vB,EAAAC,IAEAD,EAgBA,SAAAq6C,EAAA53C,EAAA6B,EAAAg2C,EAAAt6C,EAAAC,EAAAU,GACA,IAAA25C,EAAA,CACA,IAAAC,EAAAH,EAAA91C,EAAAtE,EAAAC,GACAD,IAAAu6C,IACAD,GAAA,EACAr6C,EAAA,SACAD,EAAAu6C,GAGA,IAAA58C,EAAA2G,EAAAi9B,WAAA,EAAAvhC,EAAA7N,OAEAmS,EAAAnS,QAAAwL,EAEA,IAAAmlB,EAAAxe,EAAAnS,OAAAmS,EAAA3C,cAIA,GAFAmhB,IAAAxe,EAAA+gC,WAAA,GAEA/gC,EAAA40C,SAAA50C,EAAA60C,OAAA,CACA,IAAAjjD,EAAAoO,EAAAk1C,oBACAl1C,EAAAk1C,oBAAA,CACAx5C,QACAC,WACAq6C,QACAp6C,SAAAS,EACAkiB,KAAA,MAEA3sB,EACAA,EAAA2sB,KAAAve,EAAAk1C,oBAEAl1C,EAAAi1C,gBAAAj1C,EAAAk1C,oBAEAl1C,EAAAq1C,sBAAA,OAEAa,EAAA/3C,EAAA6B,GAAA,EAAA3G,EAAAqC,EAAAC,EAAAU,GAGA,OAAAmiB,EAGA,SAAA03B,EAAA/3C,EAAA6B,EAAAu1C,EAAAl8C,EAAAqC,EAAAC,EAAAU,GACA2D,EAAAg1C,SAAA37C,EACA2G,EAAAjD,QAAAV,EACA2D,EAAA40C,SAAA,EACA50C,EAAArC,MAAA,EACA43C,EAAAp3C,EAAAq3C,QAAA95C,EAAAsE,EAAA+0C,SAAmD52C,EAAAG,OAAA5C,EAAAC,EAAAqE,EAAA+0C,SACnD/0C,EAAArC,MAAA,EAGA,SAAAw4C,EAAAh4C,EAAA6B,EAAArC,EAAAjB,EAAAL,KACA2D,EAAAm1C,UAEAx3C,GAGAwd,EAAAM,SAAApf,EAAAK,GAGAye,EAAAM,SAAA26B,EAAAj4C,EAAA6B,GACA7B,EAAAC,eAAAod,cAAA,EACArd,EAAAlD,KAAA,QAAAyB,KAIAL,EAAAK,GACAyB,EAAAC,eAAAod,cAAA,EACArd,EAAAlD,KAAA,QAAAyB,GAGA05C,EAAAj4C,EAAA6B,IAIA,SAAAq2C,EAAAr2C,GACAA,EAAA40C,SAAA,EACA50C,EAAAjD,QAAA,KACAiD,EAAAnS,QAAAmS,EAAAg1C,SACAh1C,EAAAg1C,SAAA,EAGA,SAAAD,EAAA52C,EAAAzB,GACA,IAAAsD,EAAA7B,EAAAC,eACAT,EAAAqC,EAAArC,KACAtB,EAAA2D,EAAAjD,QAIA,GAFAs5C,EAAAr2C,GAEAtD,EAAAy5C,EAAAh4C,EAAA6B,EAAArC,EAAAjB,EAAAL,OAAoD,CAEpD,IAAA0f,EAAAu6B,EAAAt2C,GAEA+b,GAAA/b,EAAA60C,QAAA70C,EAAA80C,mBAAA90C,EAAAi1C,iBACAsB,EAAAp4C,EAAA6B,GAGArC,EAEAq2C,EAAAwC,EAAAr4C,EAAA6B,EAAA+b,EAAA1f,GAGAm6C,EAAAr4C,EAAA6B,EAAA+b,EAAA1f,IAKA,SAAAm6C,EAAAr4C,EAAA6B,EAAA+b,EAAA1f,GACA0f,GAAA06B,EAAAt4C,EAAA6B,GACAA,EAAAm1C,YACA94C,IACA+5C,EAAAj4C,EAAA6B,GAMA,SAAAy2C,EAAAt4C,EAAA6B,GACA,IAAAA,EAAAnS,QAAAmS,EAAA+gC,YACA/gC,EAAA+gC,WAAA,EACA5iC,EAAAlD,KAAA,UAKA,SAAAs7C,EAAAp4C,EAAA6B,GACAA,EAAA80C,kBAAA,EACA,IAAAx2B,EAAAte,EAAAi1C,gBAEA,GAAA92C,EAAAq3C,SAAAl3B,KAAAC,KAAA,CAEA,IAAAxvB,EAAAiR,EAAAq1C,qBACAt8B,EAAA,IAAA3f,MAAArK,GACA2nD,EAAA12C,EAAAs1C,mBACAoB,EAAAp4B,QAEA,IAAAq4B,EAAA,EACAC,GAAA,EACA,MAAAt4B,EACAvF,EAAA49B,GAAAr4B,EACAA,EAAA03B,QAAAY,GAAA,GACAt4B,IAAAC,KACAo4B,GAAA,EAEA59B,EAAA69B,aAEAV,EAAA/3C,EAAA6B,GAAA,EAAAA,EAAAnS,OAAAkrB,EAAA,GAAA29B,EAAA5C,QAIA9zC,EAAAm1C,YACAn1C,EAAAk1C,oBAAA,KACAwB,EAAAn4B,MACAve,EAAAs1C,mBAAAoB,EAAAn4B,KACAm4B,EAAAn4B,KAAA,MAEAve,EAAAs1C,mBAAA,IAAAzB,EAAA7zC,GAEAA,EAAAq1C,qBAAA,MACG,CAEH,MAAA/2B,EAAA,CACA,IAAA5iB,EAAA4iB,EAAA5iB,MACAC,EAAA2iB,EAAA3iB,SACAU,EAAAiiB,EAAA1iB,SACAvC,EAAA2G,EAAAi9B,WAAA,EAAAvhC,EAAA7N,OASA,GAPAqoD,EAAA/3C,EAAA6B,GAAA,EAAA3G,EAAAqC,EAAAC,EAAAU,GACAiiB,IAAAC,KACAve,EAAAq1C,uBAKAr1C,EAAA40C,QACA,MAIA,OAAAt2B,IAAAte,EAAAk1C,oBAAA,MAGAl1C,EAAAi1C,gBAAA32B,EACAte,EAAA80C,kBAAA,EAiCA,SAAAwB,EAAAt2C,GACA,OAAAA,EAAA8b,QAAA,IAAA9b,EAAAnS,QAAA,OAAAmS,EAAAi1C,kBAAAj1C,EAAA+b,WAAA/b,EAAA40C,QAEA,SAAAiC,EAAA14C,EAAA6B,GACA7B,EAAAu3C,OAAA,SAAAl3C,GACAwB,EAAAm1C,YACA32C,GACAL,EAAAlD,KAAA,QAAAuD,GAEAwB,EAAAo1C,aAAA,EACAj3C,EAAAlD,KAAA,aACAm7C,EAAAj4C,EAAA6B,KAGA,SAAAhC,EAAAG,EAAA6B,GACAA,EAAAo1C,aAAAp1C,EAAAy0C,cACA,oBAAAt2C,EAAAu3C,QACA11C,EAAAm1C,YACAn1C,EAAAy0C,aAAA,EACAt5B,EAAAM,SAAAo7B,EAAA14C,EAAA6B,KAEAA,EAAAo1C,aAAA,EACAj3C,EAAAlD,KAAA,eAKA,SAAAm7C,EAAAj4C,EAAA6B,GACA,IAAA82C,EAAAR,EAAAt2C,GAQA,OAPA82C,IACA94C,EAAAG,EAAA6B,GACA,IAAAA,EAAAm1C,YACAn1C,EAAA+b,UAAA,EACA5d,EAAAlD,KAAA,YAGA67C,EAGA,SAAAC,EAAA54C,EAAA6B,EAAA3D,GACA2D,EAAA8b,QAAA,EACAs6B,EAAAj4C,EAAA6B,GACA3D,IACA2D,EAAA+b,SAAAZ,EAAAM,SAAApf,GAAyC8B,EAAAuiC,KAAA,SAAArkC,IAEzC2D,EAAA4b,OAAA,EACAzd,EAAAgE,UAAA,EAGA,SAAA4xC,EAAAiD,EAAAh3C,EAAAxB,GACA,IAAA8f,EAAA04B,EAAA14B,MACA04B,EAAA14B,MAAA,KACA,MAAAA,EAAA,CACA,IAAAjiB,EAAAiiB,EAAA1iB,SACAoE,EAAAm1C,YACA94C,EAAAmC,GACA8f,IAAAC,KAEAve,EAAAs1C,mBACAt1C,EAAAs1C,mBAAA/2B,KAAAy4B,EAEAh3C,EAAAs1C,mBAAA0B,EAljBA5tD,EAAAiV,SAAA5D,EAAA2E,GAmHA80C,EAAApnD,UAAAmqD,UAAA,WACA,IAAAC,EAAA5tD,KAAA2rD,gBACAh+C,EAAA,GACA,MAAAigD,EACAjgD,EAAAzH,KAAA0nD,GACAA,IAAA34B,KAEA,OAAAtnB,GAGA,WACA,IACA9G,OAAAsS,eAAAyxC,EAAApnD,UAAA,UACAwP,IAAA63C,EAAAp1B,UAAA,WACA,OAAAz1B,KAAA2tD,aACO,0FAEJ,MAAAxuB,KAPH,GAaA,oBAAAqf,eAAAqP,aAAA,oBAAAC,SAAAtqD,UAAAg7C,OAAAqP,cACA/C,EAAAgD,SAAAtqD,UAAAg7C,OAAAqP,aACAhnD,OAAAsS,eAAAhI,EAAAqtC,OAAAqP,YAAA,CACAjhD,MAAA,SAAAmhD,GACA,QAAAjD,EAAArnD,KAAAzD,KAAA+tD,IACA/tD,OAAAmR,IAEA48C,KAAAj5C,0BAAA81C,OAIAE,EAAA,SAAAiD,GACA,OAAAA,aAAA/tD,MAqCAmR,EAAA3N,UAAA4kC,KAAA,WACApoC,KAAA2R,KAAA,YAAAzB,MAAA,+BA8BAiB,EAAA3N,UAAA4U,MAAA,SAAAhG,EAAAC,EAAAU,GACA,IAAA2D,EAAA1W,KAAA8U,eACAogB,GAAA,EACAw3B,GAAAh2C,EAAAi9B,YAAAP,EAAAhhC,GAoBA,OAlBAs6C,IAAAr3C,EAAAoE,SAAArH,KACAA,EAAA+gC,EAAA/gC,IAGA,oBAAAC,IACAU,EAAAV,EACAA,EAAA,MAGAq6C,EAAAr6C,EAAA,SAAiCA,MAAAqE,EAAA69B,iBAEjC,oBAAAxhC,MAAAg4C,GAEAr0C,EAAA4b,MAAA+5B,EAAArsD,KAAA+S,IAA2C25C,GAAAJ,EAAAtsD,KAAA0W,EAAAtE,EAAAW,MAC3C2D,EAAAm1C,YACA32B,EAAAu3B,EAAAzsD,KAAA0W,EAAAg2C,EAAAt6C,EAAAC,EAAAU,IAGAmiB,GAGA/jB,EAAA3N,UAAAwqD,KAAA,WACA,IAAAt3C,EAAA1W,KAAA8U,eAEA4B,EAAA60C,UAGAp6C,EAAA3N,UAAAyqD,OAAA,WACA,IAAAv3C,EAAA1W,KAAA8U,eAEA4B,EAAA60C,SACA70C,EAAA60C,SAEA70C,EAAA40C,SAAA50C,EAAA60C,QAAA70C,EAAA+b,UAAA/b,EAAA80C,mBAAA90C,EAAAi1C,iBAAAsB,EAAAjtD,KAAA0W,KAIAvF,EAAA3N,UAAA0qD,mBAAA,SAAA77C,GAGA,GADA,kBAAAA,QAAAxN,iBACA,2FAAAf,SAAAuO,EAAA,IAAAxN,gBAAA,aAAAjB,UAAA,qBAAAyO,GAEA,OADArS,KAAA8U,eAAAy/B,gBAAAliC,EACArS,MAUA6G,OAAAsS,eAAAhI,EAAA3N,UAAA,yBAIA8V,YAAA,EACAtG,IAAA,WACA,OAAAhT,KAAA8U,eAAAf,iBA8LA5C,EAAA3N,UAAAwR,OAAA,SAAA5C,EAAAC,EAAAU,GACAA,EAAA,IAAA7C,MAAA,iCAGAiB,EAAA3N,UAAA0oD,QAAA,KAEA/6C,EAAA3N,UAAAuN,IAAA,SAAAqB,EAAAC,EAAAU,GACA,IAAA2D,EAAA1W,KAAA8U,eAEA,oBAAA1C,GACAW,EAAAX,EACAA,EAAA,KACAC,EAAA,MACG,oBAAAA,IACHU,EAAAV,EACAA,EAAA,MAGA,OAAAD,QAAApD,IAAAoD,GAAApS,KAAAoY,MAAAhG,EAAAC,GAGAqE,EAAA60C,SACA70C,EAAA60C,OAAA,EACAvrD,KAAAiuD,UAIAv3C,EAAA8b,QAAA9b,EAAA+b,UAAAg7B,EAAAztD,KAAA0W,EAAA3D,IAoEAlM,OAAAsS,eAAAhI,EAAA3N,UAAA,aACAwP,IAAA,WACA,YAAAhE,IAAAhP,KAAA8U,gBAGA9U,KAAA8U,eAAAkd,WAEA5Y,IAAA,SAAAxM,GAGA5M,KAAA8U,iBAMA9U,KAAA8U,eAAAkd,UAAAplB,MAIAuE,EAAA3N,UAAAsuB,QAAAyhB,EAAAzhB,QACA3gB,EAAA3N,UAAA6xC,WAAA9B,EAAAlhB,UACAlhB,EAAA3N,UAAAyR,SAAA,SAAAC,EAAAnC,GACA/S,KAAA+Q,MACAgC,EAAAmC,wECtpBA,IAAAi5C,EAAA,SAAA1mD,GACA,cAAAA,GACA,aACA,OAAAA,EAEA,cACA,OAAAA,EAAA,eAEA,aACA,OAAAsoB,SAAAtoB,KAAA,GAEA,QACA,WAIA/H,EAAAC,QAAA,SAAA2D,EAAAimC,EAAAC,EAAApc,GAOA,OANAmc,KAAA,IACAC,KAAA,IACA,OAAAlmC,IACAA,OAAA0L,GAGA,kBAAA1L,EACA6I,EAAAouC,EAAAj3C,GAAA,SAAAuC,GACA,IAAAuoD,EAAA3nD,mBAAA0nD,EAAAtoD,IAAA2jC,EACA,OAAAvZ,EAAA3sB,EAAAuC,IACAsG,EAAA7I,EAAAuC,GAAA,SAAA4B,GACA,OAAA2mD,EAAA3nD,mBAAA0nD,EAAA1mD,MACSrD,KAAAmlC,GAET6kB,EAAA3nD,mBAAA0nD,EAAA7qD,EAAAuC,OAEKzB,KAAAmlC,GAILnc,EACA3mB,mBAAA0nD,EAAA/gC,IAAAoc,EACA/iC,mBAAA0nD,EAAA7qD,IAFA,IAKA,IAAA2sB,EAAAngB,MAAAmgB,SAAA,SAAA6Z,GACA,yBAAAjjC,OAAArD,UAAAgP,SAAA/O,KAAAqmC,IAGA,SAAA39B,EAAA29B,EAAA5R,GACA,GAAA4R,EAAA39B,IAAA,OAAA29B,EAAA39B,IAAA+rB,GAEA,IADA,IAAA0D,EAAA,GACA32B,EAAA,EAAiBA,EAAA6kC,EAAAvlC,OAAeU,IAChC22B,EAAA11B,KAAAgyB,EAAA4R,EAAA7kC,OAEA,OAAA22B,EAGA,IAAA2e,EAAA1zC,OAAAC,MAAA,SAAAxD,GACA,IAAAs4B,EAAA,GACA,QAAAlpB,KAAApP,EACAuD,OAAArD,UAAAmP,eAAAlP,KAAAH,EAAAoP,IAAAkpB,EAAA11B,KAAAwM,GAEA,OAAAkpB,uBChFAl8B,EAAAC,QAAA,CAEA0uD,EAAA,CACAC,UAAA,MACAz3B,WAAA,OACAxkB,SAAA,iBACAk8C,QAAA,KACAp3B,QAAA,OACAI,cAAA,MACAP,aAAA,IAGAw3B,EAAA,CACAF,UAAA,MACAz3B,WAAA,OACAxkB,SAAA,iBACAk8C,QAAA,KACAp3B,QAAA,MACAI,cAAA,MACAP,aAAA,IAGAy3B,GAAA,CACAH,UAAA,MACAz3B,WAAA,KACAxkB,SAAA,gBACAk8C,QAAA,KACAp3B,QAAA,MACAI,cAAA,MACAP,aAAA,MAGA03B,GAAA,CACAJ,UAAA,MACAz3B,WAAA,OACAxkB,SAAA,gBACAk8C,QAAA,SACAp3B,QAAA,OACAI,cAAA,MACAP,aAAA,IAGA23B,GAAA,CACAL,UAAA,MACAz3B,WAAA,OACAxkB,SAAA,QACAk8C,QAAA,WACAp3B,QAAA,MACAI,cAAA,MACAP,aAAA,IAGA43B,GAAA,CACAN,UAAA,MACAz3B,WAAA,OACAxkB,SAAA,QACAk8C,QAAA,OACAp3B,QAAA,MACAI,cAAA,MACAP,aAAA,KAGAtD,GAAA,CACA46B,UAAA,MACAz3B,WAAA,OACAxkB,SAAA,QACAk8C,QAAA,OACAp3B,QAAA,MACAI,cAAA,MACAP,aAAA,KAGA63B,GAAA,CACAP,UAAA,MACAz3B,WAAA,OACAxkB,SAAA,QACAk8C,QAAA,OACAp3B,QAAA,QACAI,cAAA,MACAP,aAAA,KAGA83B,GAAA,CACAR,UAAA,MACAz3B,WAAA,OACAxkB,SAAA,gBACAk8C,QAAA,SACAp3B,QAAA,QACAI,cAAA,MACAP,aAAA,IAGA+3B,GAAA,CACAT,UAAA,MACAz3B,WAAA,QACAxkB,SAAA,QACAk8C,QAAA,OACAp3B,QAAA,QACAI,cAAA,MACAP,aAAA,KAGApD,GAAA,CACA06B,UAAA,MACAz3B,WAAA,QACAxkB,SAAA,QACAk8C,QAAA,OACAp3B,QAAA,QACAI,cAAA,MACAP,aAAA,KAGAg4B,GAAA,CACAV,UAAA,OACAz3B,WAAA,OACAxkB,SAAA,MACAk8C,QAAA,KACAp3B,QAAA,WACAI,cAAA,SACAP,aAAA,KAGAi4B,GAAA,CACAX,UAAA,OACAz3B,WAAA,OACAxkB,SAAA,MACAk8C,QAAA,KACAp3B,QAAA,IACAI,cAAA,SACAP,aAAA,KAGAk4B,GAAA,CACAZ,UAAA,OACAz3B,WAAA,OACAxkB,SAAA,MACAk8C,QAAA,KACAp3B,QAAA,IACAI,cAAA,SACAP,aAAA,KAGAm4B,GAAA,CACAb,UAAA,OACAz3B,WAAA,QACAxkB,SAAA,MACAk8C,QAAA,KACAp3B,QAAA,KACAI,cAAA,SACAP,aAAA,KAGAo4B,GAAA,CACAd,UAAA,MACAz3B,WAAA,OACAxkB,SAAA,QACAk8C,QAAA,KACAp3B,QAAA,MACAI,cAAA,MACAP,aAAA,IAGAq4B,GAAA,CACAf,UAAA,MACAz3B,WAAA,OACAxkB,SAAA,QACAk8C,QAAA,KACAp3B,QAAA,MACAI,cAAA,MACAP,aAAA,IAGAs4B,GAAA,CACAhB,UAAA,MACAz3B,WAAA,OACAxkB,SAAA,QACAk8C,QAAA,KACAp3B,QAAA,MACAI,cAAA,MACAP,aAAA,KAGAu4B,GAAA,CACAjB,UAAA,MACAz3B,WAAA,QACAxkB,SAAA,QACAk8C,QAAA,KACAp3B,QAAA,MACAI,cAAA,MACAP,aAAA,KAGAsL,IAAA,CACAgsB,UAAA,OACAz3B,WAAA,OACAxkB,SAAA,MACAk8C,QAAA,KACAp3B,QAAA,KACAI,cAAA,SACAP,aAAA,KAGAuL,IAAA,CACA+rB,UAAA,OACAz3B,WAAA,OACAxkB,SAAA,MACAk8C,QAAA,KACAp3B,QAAA,KACAI,cAAA,SACAP,aAAA,KAGAwL,IAAA,CACA8rB,UAAA,OACAz3B,WAAA,OACAxkB,SAAA,MACAk8C,QAAA,KACAp3B,QAAA,KACAI,cAAA,SACAP,aAAA,KAIAw4B,IAAA,CACAlB,UAAA,MACAz3B,WAAA,OACAxkB,SAAA,QACAk8C,QAAA,OACAp3B,QAAA,UACAI,cAAA,KACAP,aAAA,MAGAy4B,IAAA,CACAnB,UAAA,MACAz3B,WAAA,OACAxkB,SAAA,QACAk8C,QAAA,OACAp3B,QAAA,UACAI,cAAA,KACAP,aAAA,MAGA04B,IAAA,CACApB,UAAA,MACAz3B,WAAA,OACAxkB,SAAA,QACAk8C,QAAA,OACAp3B,QAAA,QACAI,cAAA,KACAP,aAAA,MAGA24B,IAAA,CACArB,UAAA,MACAz3B,WAAA,OACAxkB,SAAA,QACAk8C,QAAA,OACAp3B,QAAA,QACAI,cAAA,KACAP,aAAA,MAGA44B,IAAA,CACAtB,UAAA,MACAz3B,WAAA,QACAxkB,SAAA,QACAk8C,QAAA,OACAp3B,QAAA,QACAI,cAAA,KACAP,aAAA,MAGA64B,IAAA,CACAvB,UAAA,MACAz3B,WAAA,QACAxkB,SAAA,QACAk8C,QAAA,OACAp3B,QAAA,UACAI,cAAA,KACAP,aAAA,MAGA84B,IAAA,CACAxB,UAAA,MACAz3B,WAAA,OACAxkB,SAAA,QACAk8C,QAAA,OACAp3B,QAAA,MACAI,cAAA,KACAP,aAAA,MAGA+4B,IAAA,CACAzB,UAAA,OACAz3B,WAAA,OACAxkB,SAAA,MACAk8C,QAAA,YACAp3B,QAAA,UACAI,cAAA,KACAP,aAAA,MAGAg5B,IAAA,CACA1B,UAAA,OACAz3B,WAAA,OACAxkB,SAAA,MACAk8C,QAAA,YACAp3B,QAAA,OACAI,cAAA,KACAP,aAAA,MAGAi5B,IAAA,CACA3B,UAAA,OACAz3B,WAAA,OACAxkB,SAAA,MACAk8C,QAAA,YACAp3B,QAAA,MACAI,cAAA,KACAP,aAAA,MAGAk5B,IAAA,CACA5B,UAAA,OACAz3B,WAAA,OACAxkB,SAAA,MACAk8C,QAAA,YACAp3B,QAAA,UACAI,cAAA,KACAP,aAAA,MAGAm5B,IAAA,CACA7B,UAAA,OACAz3B,WAAA,QACAxkB,SAAA,MACAk8C,QAAA,YACAp3B,QAAA,MACAI,cAAA,KACAP,aAAA,MAGAo5B,IAAA,CACA9B,UAAA,MACAz3B,WAAA,QACAxkB,SAAA,QACAk8C,QAAA,OACAp3B,QAAA,QACAI,cAAA,KACAP,aAAA,MAGAq5B,IAAA,CACA/B,UAAA,MACAz3B,WAAA,QACAxkB,SAAA,QACAk8C,QAAA,OACAp3B,QAAA,UACAI,cAAA,KACAP,aAAA,MAGAs5B,IAAA,CACAhC,UAAA,OACAz3B,WAAA,QACAxkB,SAAA,MACAk8C,QAAA,YACAp3B,QAAA,IACAI,cAAA,KACAP,aAAA,MAGAu5B,IAAA,CACAjC,UAAA,OACAz3B,WAAA,QACAxkB,SAAA,MACAk8C,QAAA,YACAp3B,QAAA,QACAI,cAAA,KACAP,aAAA,MAGAw5B,IAAA,CACAlC,UAAA,OACAz3B,WAAA,aACAxkB,SAAA,MACAk8C,QAAA,YACAp3B,QAAA,OACAI,cAAA,KACAP,aAAA,MAGAy5B,IAAA,CACAnC,UAAA,MACAz3B,WAAA,OACAxkB,SAAA,QACAk8C,QAAA,OACAp3B,QAAA,QACAI,cAAA,KACAP,aAAA,MAGA05B,IAAA,CACApC,UAAA,MACAz3B,WAAA,QACAxkB,SAAA,QACAk8C,QAAA,OACAp3B,QAAA,MACAI,cAAA,KACAP,aAAA,MAGAqM,IAAA,CACAirB,UAAA,OACAz3B,WAAA,WACAxkB,SAAA,MACAk8C,QAAA,YACAp3B,QAAA,MACAI,cAAA,KACAP,aAAA,MAGAsM,IAAA,CACAgrB,UAAA,OACAz3B,WAAA,YACAxkB,SAAA,MACAk8C,QAAA,YACAp3B,QAAA,IACAI,cAAA,KACAP,aAAA,MAGA0M,IAAA,CACA4qB,UAAA,OACAz3B,WAAA,YACAxkB,SAAA,MACAk8C,QAAA,YACAp3B,QAAA,KACAI,cAAA,KACAP,aAAA,MAGA25B,IAAA,CACArC,UAAA,OACAz3B,WAAA,QACAxkB,SAAA,MACAk8C,QAAA,YACAp3B,QAAA,QACAI,cAAA,KACAP,aAAA,MAGA45B,IAAA,CACAtC,UAAA,OACAz3B,WAAA,YACAxkB,SAAA,MACAk8C,QAAA,YACAp3B,QAAA,QACAI,cAAA,KACAP,aAAA,MAGA65B,IAAA,CACAvC,UAAA,OACAz3B,WAAA,gBACAxkB,SAAA,MACAk8C,QAAA,YACAp3B,QAAA,OACAI,cAAA,KACAP,aAAA,MAGA85B,IAAA,CACAxC,UAAA,OACAz3B,WAAA,gBACAxkB,SAAA,MACAk8C,QAAA,YACAp3B,QAAA,WACAI,cAAA,KACAP,aAAA,MAGA+5B,IAAA,CACAzC,UAAA,OACAz3B,WAAA,gBACAxkB,SAAA,MACAk8C,QAAA,YACAp3B,QAAA,OACAI,cAAA,KACAP,aAAA,MAGAg6B,IAAA,CACA1C,UAAA,OACAz3B,WAAA,gBACAxkB,SAAA,MACAk8C,QAAA,YACAp3B,QAAA,MACAI,cAAA,KACAP,aAAA,MAGAi6B,IAAA,CACA3C,UAAA,OACAz3B,WAAA,gBACAxkB,SAAA,MACAk8C,QAAA,YACAp3B,QAAA,IACAI,cAAA,KACAP,aAAA,MAGAk6B,IAAA,CACA5C,UAAA,OACAz3B,WAAA,iBACAxkB,SAAA,MACAk8C,QAAA,YACAp3B,QAAA,QACAI,cAAA,KACAP,aAAA,MAGAm6B,IAAA,CACA7C,UAAA,OACAz3B,WAAA,iBACAxkB,SAAA,MACAk8C,QAAA,YACAp3B,QAAA,MACAI,cAAA,KACAP,aAAA,MAGAo6B,IAAA,CACA9C,UAAA,OACAz3B,WAAA,iBACAxkB,SAAA,MACAk8C,QAAA,YACAp3B,QAAA,QACAI,cAAA,KACAP,aAAA,MAIAq6B,IAAA,CACA/C,UAAA,MACAz3B,WAAA,KACAxkB,SAAA,KACAk8C,QAAA,KACAp3B,QAAA,KACAI,cAAA,MACAP,aAAA,IAGAs6B,IAAA,CACAhD,UAAA,MACAz3B,WAAA,KACAxkB,SAAA,KACAk8C,QAAA,KACAp3B,QAAA,KACAI,cAAA,MACAP,aAAA,KAGAu6B,IAAA,CACAjD,UAAA,MACAz3B,WAAA,KACAxkB,SAAA,KACAk8C,QAAA,KACAp3B,QAAA,KACAI,cAAA,MACAP,aAAA,KAGAw6B,IAAA,CACAlD,UAAA,OACAz3B,WAAA,KACAxkB,SAAA,KACAk8C,QAAA,KACAp3B,QAAA,KACAI,cAAA,SACAP,aAAA,KAGAy6B,IAAA,CACAnD,UAAA,OACAz3B,WAAA,KACAxkB,SAAA,KACAk8C,QAAA,KACAp3B,QAAA,KACAI,cAAA,SACAP,aAAA,KAGA06B,IAAA,CACApD,UAAA,OACAz3B,WAAA,KACAxkB,SAAA,KACAk8C,QAAA,KACAp3B,QAAA,KACAI,cAAA,OACAP,aAAA,IAEA26B,IAAA,CACArD,UAAA,OACAz3B,WAAA,KACAxkB,SAAA,KACAk8C,QAAA,KACAp3B,QAAA,KACAI,cAAA,OACAP,aAAA,IAEA46B,IAAA,CACAtD,UAAA,OACAz3B,WAAA,KACAxkB,SAAA,KACAk8C,QAAA,KACAp3B,QAAA,KACAI,cAAA,OACAP,aAAA,KAIA66B,GAAA,CACAvD,UAAA,KACAz3B,WAAA,OACAxkB,SAAA,QACAk8C,QAAA,OACAp3B,QAAA,MACAI,cAAA,MACAP,aAAA,IAGA86B,GAAA,CACAxD,UAAA,KACAz3B,WAAA,OACAxkB,SAAA,QACAk8C,QAAA,OACAp3B,QAAA,WACAI,cAAA,MACAP,aAAA,IAGA+6B,GAAA,CACAzD,UAAA,KACAz3B,WAAA,OACAxkB,SAAA,QACAk8C,QAAA,OACAp3B,QAAA,QACAI,cAAA,MACAP,aAAA,KAGAg7B,GAAA,CACA1D,UAAA,KACAz3B,WAAA,OACAxkB,SAAA,QACAk8C,QAAA,OACAp3B,QAAA,WACAI,cAAA,MACAP,aAAA,KAGAi7B,GAAA,CACA3D,UAAA,KACAz3B,WAAA,OACAxkB,SAAA,QACAk8C,QAAA,OACAp3B,QAAA,QACAI,cAAA,MACAP,aAAA,KAGAk7B,GAAA,CACA5D,UAAA,KACAz3B,WAAA,QACAxkB,SAAA,QACAk8C,QAAA,OACAp3B,QAAA,QACAI,cAAA,MACAP,aAAA,KAGAm7B,IAAA,CACA7D,UAAA,MACAz3B,WAAA,OACAxkB,SAAA,QACAk8C,QAAA,YACAp3B,QAAA,IACAI,cAAA,MACAP,aAAA,KAGAo7B,IAAA,CACA9D,UAAA,KACAz3B,WAAA,KACAxkB,SAAA,KACAk8C,QAAA,KACAp3B,QAAA,KACAI,cAAA,MACAP,aAAA,IAGAq7B,IAAA,CACA/D,UAAA,KACAz3B,WAAA,KACAxkB,SAAA,KACAk8C,QAAA,KACAp3B,QAAA,KACAI,cAAA,MACAP,aAAA,IAGAs7B,IAAA,CACAhE,UAAA,KACAz3B,WAAA,OACAxkB,SAAA,QACAk8C,QAAA,WACAp3B,QAAA,WACAI,cAAA,MACAP,aAAA,IAGAu7B,IAAA,CACAjE,UAAA,KACAz3B,WAAA,OACAxkB,SAAA,QACAk8C,QAAA,WACAp3B,QAAA,OACAI,cAAA,MACAP,aAAA,2BC7tBAr3B,EAAAD,EAAAC,QAA2BC,EAAQ,QACnCD,EAAAmW,OAAAnW,EACAA,EAAAkzC,SAAAlzC,EACAA,EAAAwR,SAAmBvR,EAAQ,QAC3BD,EAAAuT,OAAiBtT,EAAQ,QACzBD,EAAAsT,UAAoBrT,EAAQ,QAC5BD,EAAA+6B,YAAsB96B,EAAQ,4BCN9B,IAAA4S,EAAA,GAAiBA,SAEjB9S,EAAAC,QAAAmQ,MAAAmgB,SAAA,SAAAzf,GACA,wBAAAgC,EAAA/O,KAAA+M,iDCHA,MAAAolB,EAAiBh2B,EAAQ,QACzBqD,EAAiBrD,EAAQ,QACzB4yD,EAAiB5yD,EAAQ,QAAegiC,gBACxC9hC,EAAiBF,EAAQ,QAGzBk7B,EAAA,mCACA23B,EAAA,CAAAljC,EAAAnC,KACA,OAAAttB,EAAA24B,QAAAlJ,qBAA+CnC,eAAK,OAUpDztB,EAAA08B,oBAAA,CAAAlC,IACA,MAAAvf,EAAA,6DACAwhB,EAAAjC,EAAAr1B,MAAA8V,GACA,OAAAwhB,EACAo2B,EAAA9oD,OAAA5J,EAAAo6B,UAAAkC,EAAA,UASAz8B,EAAA48B,cAAA,CAAAhN,IACA,IAAAmjC,EAAA5yD,EAAA24B,QAAAlJ,EACA,sCACA,gEACA,QAAAmjC,EACA,SAGA,MAAAjpB,EAAA,6IACAkpB,EAAA,4DACAC,EAAA,yBACAt2B,EAAA,GAEA5T,EAAAkqC,EAAAnuD,KAAAiuD,GAKA,IAAA5tD,EAJA4jB,IACA4T,EAAA5T,MAAAzlB,EAAAlC,QAAA+5B,EAAApS,EAAA,KAIA,aAAA5jB,EAAA2kC,EAAAhlC,KAAAiuD,IAAA,CACA,KAAAhgD,EAAA9F,EAAAimD,GAAA/tD,EACA4N,EAAA8/C,EAAA9oD,OAAAgJ,GAAApO,OAAAH,QAAA,WAAAU,cACA,MAAAiuD,EAAAH,EAAAluD,KAAAmI,GACA,GAAAkmD,EAAA,CACA,KAAAC,EAAAC,EAAAC,GAAAH,EACAC,EACAz2B,EAAAy2B,KAAAjpD,SAAAipD,GACOF,IACPv2B,EAAAy2B,KAAAjpD,SAAA+oD,IAEAjmD,IAAAxH,MAAA,EAAA0tD,EAAAjlD,OACA,SAAA6E,GAAA,mBAAAugD,IACArmD,GAAAqmD,GAEA32B,EAAA5pB,EAAA,QAAAzP,EAAAlC,QAAA+5B,EAAAk4B,GAEA12B,EAAA5pB,GAAA8/C,EAAA9oD,OAAAkD,GAEA,OAAA0vB,IASA,MAAA42B,EAAA,2BACAC,EAAA,oDACAxzD,EAAAs8B,UAAA,CAAA1M,IACA,IAAA6jC,EAAAtzD,EAAA24B,QAAAlJ,EACA,mDACA,0EACA,QAAA6jC,EACA,SAEA,MAAAC,EAAAb,EAAA9oD,OAAA5J,EAAA24B,QAAA34B,EAAA24B,QACA26B,EAAA,oDACAE,EAAAF,EAAAtuD,MAAAouD,GACAK,EAAAH,EAAAtuD,MAAAquD,GACAK,EAAAf,EAAAljC,EAAA,aACAkkC,EAAAH,IAAA,GAAAxzD,EAAA24B,QACA34B,EAAA24B,QAAAlJ,EAAA,oDACA,OACA4J,GAAAq6B,EACApmC,KAAAimC,EACAK,OAAAzwD,EAAAlC,QAAA+5B,EAAAh7B,EAAA24B,QAAA26B,EACA,qBACAO,WAAAJ,EACAK,KAAAH,EACAI,YAAA,mCAAAL,EACAM,SAAA,gCAAAL,KAWA9zD,EAAAw8B,aAAA,CAAA5M,IACA,OAAAzd,KAAAjR,MAAA4xD,EAAAljC,EAAA,oBAWA5vB,EAAA88B,iBAAA,CAAAlN,IACA,IAAAoN,EAAA78B,EAAA24B,QAAAlJ,EAAA,mCAA8D,MAC9D,IACAoN,EAAAzO,KAAArtB,MAAA87B,GACG,MAAAznB,GACH,SAEA,OAAAynB,EAAA14B,MAAA,KAAAkI,IAAA8sB,GAAArD,EAAA/0B,MAAAo4B,yCC7GA,IAOA86B,EAPAC,EAAA,kBAAAC,gBAAA,KACAC,EAAAF,GAAA,oBAAAA,EAAAr7C,MACAq7C,EAAAr7C,MACA,SAAA2b,EAAA6/B,EAAAt6C,GACA,OAAAi0C,SAAAtqD,UAAAmV,MAAAlV,KAAA6wB,EAAA6/B,EAAAt6C,IAiBA,SAAAu6C,EAAAC,GACAt1B,iBAAAC,MAAAD,QAAAC,KAAAq1B,GAbAN,EADAC,GAAA,oBAAAA,EAAAM,QACAN,EAAAM,QACCztD,OAAA0tD,sBACD,SAAAjgC,GACA,OAAAztB,OAAA2tD,oBAAAlgC,GACA5yB,OAAAmF,OAAA0tD,sBAAAjgC,KAGA,SAAAA,GACA,OAAAztB,OAAA2tD,oBAAAlgC,IAQA,IAAAmgC,EAAA3kC,OAAA/lB,OAAA,SAAA6C,GACA,OAAAA,OAGA,SAAAglB,IACAA,EAAA8iC,KAAAjxD,KAAAzD,MAEAN,EAAAC,QAAAiyB,EAGAA,iBAEAA,EAAApuB,UAAAiwC,aAAAzkC,EACA4iB,EAAApuB,UAAAmxD,aAAA,EACA/iC,EAAApuB,UAAAoxD,mBAAA5lD,EAIA,IAAA6lD,EAAA,GAoCA,SAAAC,EAAA3Z,GACA,YAAAnsC,IAAAmsC,EAAAyZ,cACAhjC,EAAAijC,oBACA1Z,EAAAyZ,cAmDA,SAAAG,EAAAzgC,EAAAroB,EAAA+oD,EAAAC,GACA,IAAA1mD,EACA2mD,EACAC,EAEA,uBAAAH,EACA,UAAApxD,UAAA,0EAAAoxD,GAqBA,GAlBAE,EAAA5gC,EAAAmf,aACAzkC,IAAAkmD,GACAA,EAAA5gC,EAAAmf,QAAA5sC,OAAAiQ,OAAA,MACAwd,EAAAqgC,aAAA,SAIA3lD,IAAAkmD,EAAAE,cACA9gC,EAAA3iB,KAAA,cAAA1F,EACA+oD,yBAIAE,EAAA5gC,EAAAmf,SAEA0hB,EAAAD,EAAAjpD,SAGA+C,IAAAmmD,EAEAA,EAAAD,EAAAjpD,GAAA+oD,IACA1gC,EAAAqgC,kBAeA,GAbA,oBAAAQ,EAEAA,EAAAD,EAAAjpD,GACAgpD,EAAA,CAAAD,EAAAG,GAAA,CAAAA,EAAAH,GAEKC,EACLE,EAAAhvD,QAAA6uD,GAEAG,EAAAjvD,KAAA8uD,GAIAzmD,EAAAumD,EAAAxgC,GACA/lB,EAAA,GAAA4mD,EAAA5wD,OAAAgK,IAAA4mD,EAAA5R,OAAA,CACA4R,EAAA5R,QAAA,EAGA,IAAAx1C,EAAA,IAAAmC,MAAA,+CACAilD,EAAA5wD,OAAA,IAAAiF,OAAAyC,GAAA,qEAGA8B,EAAAqf,KAAA,8BACArf,EAAAilC,QAAA1e,EACAvmB,EAAA9B,OACA8B,EAAAs/C,MAAA8H,EAAA5wD,OACA6vD,EAAArmD,GAIA,OAAAumB,EAcA,SAAA+gC,IAEA,IADA,IAAAx7C,EAAA,GACA5U,EAAA,EAAiBA,EAAA6U,UAAAvV,OAAsBU,IAAA4U,EAAA3T,KAAA4T,UAAA7U,IACvCjF,KAAAs1D,QACAt1D,KAAAs0B,OAAAud,eAAA7xC,KAAAiM,KAAAjM,KAAAu1D,QACAv1D,KAAAs1D,OAAA,EACApB,EAAAl0D,KAAAg1D,SAAAh1D,KAAAs0B,OAAAza,IAIA,SAAA27C,EAAAlhC,EAAAroB,EAAA+oD,GACA,IAAAt+C,EAAA,CAAe4+C,OAAA,EAAAC,YAAAvmD,EAAAslB,SAAAroB,OAAA+oD,YACfS,EAAAJ,EAAAnhD,KAAAwC,GAGA,OAFA++C,EAAAT,WACAt+C,EAAA6+C,OAAAE,EACAA,EAgIA,SAAAC,EAAAphC,EAAAroB,EAAA0pD,GACA,IAAAT,EAAA5gC,EAAAmf,QAEA,QAAAzkC,IAAAkmD,EACA,SAEA,IAAAU,EAAAV,EAAAjpD,GACA,YAAA+C,IAAA4mD,EACA,GAEA,oBAAAA,EACAD,EAAA,CAAAC,EAAAZ,UAAAY,GAAA,CAAAA,GAEAD,EACAE,EAAAD,GAAAE,EAAAF,IAAArxD,QAoBA,SAAAylD,EAAA/9C,GACA,IAAAipD,EAAAl1D,KAAAyzC,QAEA,QAAAzkC,IAAAkmD,EAAA,CACA,IAAAU,EAAAV,EAAAjpD,GAEA,uBAAA2pD,EACA,SACK,QAAA5mD,IAAA4mD,EACL,OAAAA,EAAArxD,OAIA,SAOA,SAAAuxD,EAAAtlD,EAAArC,GAEA,IADA,IAAAgT,EAAA,IAAArR,MAAA3B,GACAlJ,EAAA,EAAiBA,EAAAkJ,IAAOlJ,EACxBkc,EAAAlc,GAAAuL,EAAAvL,GACA,OAAAkc,EAGA,SAAA40C,EAAA7f,EAAAroC,GACA,KAAQA,EAAA,EAAAqoC,EAAA3xC,OAAyBsJ,IACjCqoC,EAAAroC,GAAAqoC,EAAAroC,EAAA,GACAqoC,EAAAhuC,MAGA,SAAA2tD,EAAArlD,GAEA,IADA,IAAA0kB,EAAA,IAAAplB,MAAAU,EAAAjM,QACAU,EAAA,EAAiBA,EAAAiwB,EAAA3wB,SAAgBU,EACjCiwB,EAAAjwB,GAAAuL,EAAAvL,GAAA+vD,UAAAxkD,EAAAvL,GAEA,OAAAiwB,EA1XAruB,OAAAsS,eAAAyY,EAAA,uBACAtY,YAAA,EACAtG,IAAA,WACA,OAAA6hD,GAEAz7C,IAAA,SAAA4W,GACA,qBAAAA,KAAA,GAAAykC,EAAAzkC,GACA,UAAA9jB,WAAA,kGAAA8jB,EAAA,KAEA6kC,EAAA7kC,KAIA4B,EAAA8iC,KAAA,gBAEA1lD,IAAAhP,KAAAyzC,SACAzzC,KAAAyzC,UAAA5sC,OAAAmuC,eAAAh1C,MAAAyzC,UACAzzC,KAAAyzC,QAAA5sC,OAAAiQ,OAAA,MACA9W,KAAA20D,aAAA,GAGA30D,KAAA40D,cAAA50D,KAAA40D,oBAAA5lD,GAKA4iB,EAAApuB,UAAAwyD,gBAAA,SAAA7nD,GACA,qBAAAA,KAAA,GAAAsmD,EAAAtmD,GACA,UAAAjC,WAAA,gFAAAiC,EAAA,KAGA,OADAnO,KAAA40D,cAAAzmD,EACAnO,MASA4xB,EAAApuB,UAAAyyD,gBAAA,WACA,OAAAnB,EAAA90D,OAGA4xB,EAAApuB,UAAAmO,KAAA,SAAA1F,GAEA,IADA,IAAA4N,EAAA,GACA5U,EAAA,EAAiBA,EAAA6U,UAAAvV,OAAsBU,IAAA4U,EAAA3T,KAAA4T,UAAA7U,IACvC,IAAAixD,EAAA,UAAAjqD,EAEAipD,EAAAl1D,KAAAyzC,QACA,QAAAzkC,IAAAkmD,EACAgB,UAAAlnD,IAAAkmD,EAAAlpD,WACA,IAAAkqD,EACA,SAGA,GAAAA,EAAA,CACA,IAAA9iD,EAGA,GAFAyG,EAAAtV,OAAA,IACA6O,EAAAyG,EAAA,IACAzG,aAAAlD,MAGA,MAAAkD,EAGA,IAAA8B,EAAA,IAAAhF,MAAA,oBAAAkD,EAAA,KAAAA,EAAA4Z,QAAA,SAEA,MADA9X,EAAA8zC,QAAA51C,EACA8B,EAGA,IAAA0E,EAAAs7C,EAAAjpD,GAEA,QAAA+C,IAAA4K,EACA,SAEA,uBAAAA,EACAs6C,EAAAt6C,EAAA5Z,KAAA6Z,OAEA,KAAA9J,EAAA6J,EAAArV,OACA0uC,EAAA6iB,EAAAl8C,EAAA7J,GACA,IAAA9K,EAAA,EAAmBA,EAAA8K,IAAS9K,EAC5BivD,EAAAjhB,EAAAhuC,GAAAjF,KAAA6Z,GAGA,UAmEA+X,EAAApuB,UAAAq0C,YAAA,SAAA5rC,EAAA+oD,GACA,OAAAD,EAAA/0D,KAAAiM,EAAA+oD,GAAA,IAGApjC,EAAApuB,UAAAiO,GAAAmgB,EAAApuB,UAAAq0C,YAEAjmB,EAAApuB,UAAAsuC,gBACA,SAAA7lC,EAAA+oD,GACA,OAAAD,EAAA/0D,KAAAiM,EAAA+oD,GAAA,IAqBApjC,EAAApuB,UAAA4zC,KAAA,SAAAnrC,EAAA+oD,GACA,uBAAAA,EACA,UAAApxD,UAAA,0EAAAoxD,GAGA,OADAh1D,KAAAyR,GAAAxF,EAAAupD,EAAAx1D,KAAAiM,EAAA+oD,IACAh1D,MAGA4xB,EAAApuB,UAAA2yD,oBACA,SAAAlqD,EAAA+oD,GACA,uBAAAA,EACA,UAAApxD,UAAA,0EAAAoxD,GAGA,OADAh1D,KAAA8xC,gBAAA7lC,EAAAupD,EAAAx1D,KAAAiM,EAAA+oD,IACAh1D,MAIA4xB,EAAApuB,UAAAquC,eACA,SAAA5lC,EAAA+oD,GACA,IAAA9e,EAAAgf,EAAA79C,EAAApS,EAAAmxD,EAEA,uBAAApB,EACA,UAAApxD,UAAA,0EAAAoxD,GAIA,GADAE,EAAAl1D,KAAAyzC,aACAzkC,IAAAkmD,EACA,OAAAl1D,KAGA,GADAk2C,EAAAgf,EAAAjpD,QACA+C,IAAAknC,EACA,OAAAl2C,KAEA,GAAAk2C,IAAA8e,GAAA9e,EAAA8e,aACA,MAAAh1D,KAAA20D,aACA30D,KAAAyzC,QAAA5sC,OAAAiQ,OAAA,cAEAo+C,EAAAjpD,GACAipD,EAAArjB,gBACA7xC,KAAA2R,KAAA,iBAAA1F,EAAAiqC,EAAA8e,mBAEO,uBAAA9e,EAAA,CAGP,IAFA7+B,GAAA,EAEApS,EAAAixC,EAAA3xC,OAAA,EAAiCU,GAAA,EAAQA,IACzC,GAAAixC,EAAAjxC,KAAA+vD,GAAA9e,EAAAjxC,GAAA+vD,aAAA,CACAoB,EAAAlgB,EAAAjxC,GAAA+vD,SACA39C,EAAApS,EACA,MAIA,GAAAoS,EAAA,EACA,OAAArX,KAEA,IAAAqX,EACA6+B,EAAAvuC,QAEAouD,EAAA7f,EAAA7+B,GAGA,IAAA6+B,EAAA3xC,SACA2wD,EAAAjpD,GAAAiqC,EAAA,SAEAlnC,IAAAkmD,EAAArjB,gBACA7xC,KAAA2R,KAAA,iBAAA1F,EAAAmqD,GAAApB,GAGA,OAAAh1D,MAGA4xB,EAAApuB,UAAA6yD,IAAAzkC,EAAApuB,UAAAquC,eAEAjgB,EAAApuB,UAAA6V,mBACA,SAAApN,GACA,IAAAgnC,EAAAiiB,EAAAjwD,EAGA,GADAiwD,EAAAl1D,KAAAyzC,aACAzkC,IAAAkmD,EACA,OAAAl1D,KAGA,QAAAgP,IAAAkmD,EAAArjB,eAUA,OATA,IAAA/3B,UAAAvV,QACAvE,KAAAyzC,QAAA5sC,OAAAiQ,OAAA,MACA9W,KAAA20D,aAAA,QACS3lD,IAAAkmD,EAAAjpD,KACT,MAAAjM,KAAA20D,aACA30D,KAAAyzC,QAAA5sC,OAAAiQ,OAAA,aAEAo+C,EAAAjpD,IAEAjM,KAIA,OAAA8Z,UAAAvV,OAAA,CACA,IACAmO,EADA5L,EAAAD,OAAAC,KAAAouD,GAEA,IAAAjwD,EAAA,EAAmBA,EAAA6B,EAAAvC,SAAiBU,EACpCyN,EAAA5L,EAAA7B,GACA,mBAAAyN,GACA1S,KAAAqZ,mBAAA3G,GAKA,OAHA1S,KAAAqZ,mBAAA,kBACArZ,KAAAyzC,QAAA5sC,OAAAiQ,OAAA,MACA9W,KAAA20D,aAAA,EACA30D,KAKA,GAFAizC,EAAAiiB,EAAAjpD,GAEA,oBAAAgnC,EACAjzC,KAAA6xC,eAAA5lC,EAAAgnC,QACO,QAAAjkC,IAAAikC,EAEP,IAAAhuC,EAAAguC,EAAA1uC,OAAA,EAAsCU,GAAA,EAAQA,IAC9CjF,KAAA6xC,eAAA5lC,EAAAgnC,EAAAhuC,IAIA,OAAAjF,MAoBA4xB,EAAApuB,UAAAyvC,UAAA,SAAAhnC,GACA,OAAAypD,EAAA11D,KAAAiM,GAAA,IAGA2lB,EAAApuB,UAAA8yD,aAAA,SAAArqD,GACA,OAAAypD,EAAA11D,KAAAiM,GAAA,IAGA2lB,EAAAo4B,cAAA,SAAAhX,EAAA/mC,GACA,0BAAA+mC,EAAAgX,cACAhX,EAAAgX,cAAA/9C,GAEA+9C,EAAAvmD,KAAAuvC,EAAA/mC,IAIA2lB,EAAApuB,UAAAwmD,gBAiBAp4B,EAAApuB,UAAA+yD,WAAA,WACA,OAAAv2D,KAAA20D,aAAA,EAAAZ,EAAA/zD,KAAAyzC,SAAA","file":"js/about.7a7dae6f.js","sourcesContent":["module.exports = require('./lib/_stream_duplex.js');\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar punycode = require('punycode');\nvar util = require('./util');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && util.isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!util.isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n      splitter =\n          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (util.isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      util.isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (util.isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!util.isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host || srcPath.length > 1) &&\n      (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n","var ENTITIES = [['Aacute', [193]], ['aacute', [225]], ['Abreve', [258]], ['abreve', [259]], ['ac', [8766]], ['acd', [8767]], ['acE', [8766, 819]], ['Acirc', [194]], ['acirc', [226]], ['acute', [180]], ['Acy', [1040]], ['acy', [1072]], ['AElig', [198]], ['aelig', [230]], ['af', [8289]], ['Afr', [120068]], ['afr', [120094]], ['Agrave', [192]], ['agrave', [224]], ['alefsym', [8501]], ['aleph', [8501]], ['Alpha', [913]], ['alpha', [945]], ['Amacr', [256]], ['amacr', [257]], ['amalg', [10815]], ['amp', [38]], ['AMP', [38]], ['andand', [10837]], ['And', [10835]], ['and', [8743]], ['andd', [10844]], ['andslope', [10840]], ['andv', [10842]], ['ang', [8736]], ['ange', [10660]], ['angle', [8736]], ['angmsdaa', [10664]], ['angmsdab', [10665]], ['angmsdac', [10666]], ['angmsdad', [10667]], ['angmsdae', [10668]], ['angmsdaf', [10669]], ['angmsdag', [10670]], ['angmsdah', [10671]], ['angmsd', [8737]], ['angrt', [8735]], ['angrtvb', [8894]], ['angrtvbd', [10653]], ['angsph', [8738]], ['angst', [197]], ['angzarr', [9084]], ['Aogon', [260]], ['aogon', [261]], ['Aopf', [120120]], ['aopf', [120146]], ['apacir', [10863]], ['ap', [8776]], ['apE', [10864]], ['ape', [8778]], ['apid', [8779]], ['apos', [39]], ['ApplyFunction', [8289]], ['approx', [8776]], ['approxeq', [8778]], ['Aring', [197]], ['aring', [229]], ['Ascr', [119964]], ['ascr', [119990]], ['Assign', [8788]], ['ast', [42]], ['asymp', [8776]], ['asympeq', [8781]], ['Atilde', [195]], ['atilde', [227]], ['Auml', [196]], ['auml', [228]], ['awconint', [8755]], ['awint', [10769]], ['backcong', [8780]], ['backepsilon', [1014]], ['backprime', [8245]], ['backsim', [8765]], ['backsimeq', [8909]], ['Backslash', [8726]], ['Barv', [10983]], ['barvee', [8893]], ['barwed', [8965]], ['Barwed', [8966]], ['barwedge', [8965]], ['bbrk', [9141]], ['bbrktbrk', [9142]], ['bcong', [8780]], ['Bcy', [1041]], ['bcy', [1073]], ['bdquo', [8222]], ['becaus', [8757]], ['because', [8757]], ['Because', [8757]], ['bemptyv', [10672]], ['bepsi', [1014]], ['bernou', [8492]], ['Bernoullis', [8492]], ['Beta', [914]], ['beta', [946]], ['beth', [8502]], ['between', [8812]], ['Bfr', [120069]], ['bfr', [120095]], ['bigcap', [8898]], ['bigcirc', [9711]], ['bigcup', [8899]], ['bigodot', [10752]], ['bigoplus', [10753]], ['bigotimes', [10754]], ['bigsqcup', [10758]], ['bigstar', [9733]], ['bigtriangledown', [9661]], ['bigtriangleup', [9651]], ['biguplus', [10756]], ['bigvee', [8897]], ['bigwedge', [8896]], ['bkarow', [10509]], ['blacklozenge', [10731]], ['blacksquare', [9642]], ['blacktriangle', [9652]], ['blacktriangledown', [9662]], ['blacktriangleleft', [9666]], ['blacktriangleright', [9656]], ['blank', [9251]], ['blk12', [9618]], ['blk14', [9617]], ['blk34', [9619]], ['block', [9608]], ['bne', [61, 8421]], ['bnequiv', [8801, 8421]], ['bNot', [10989]], ['bnot', [8976]], ['Bopf', [120121]], ['bopf', [120147]], ['bot', [8869]], ['bottom', [8869]], ['bowtie', [8904]], ['boxbox', [10697]], ['boxdl', [9488]], ['boxdL', [9557]], ['boxDl', [9558]], ['boxDL', [9559]], ['boxdr', [9484]], ['boxdR', [9554]], ['boxDr', [9555]], ['boxDR', [9556]], ['boxh', [9472]], ['boxH', [9552]], ['boxhd', [9516]], ['boxHd', [9572]], ['boxhD', [9573]], ['boxHD', [9574]], ['boxhu', [9524]], ['boxHu', [9575]], ['boxhU', [9576]], ['boxHU', [9577]], ['boxminus', [8863]], ['boxplus', [8862]], ['boxtimes', [8864]], ['boxul', [9496]], ['boxuL', [9563]], ['boxUl', [9564]], ['boxUL', [9565]], ['boxur', [9492]], ['boxuR', [9560]], ['boxUr', [9561]], ['boxUR', [9562]], ['boxv', [9474]], ['boxV', [9553]], ['boxvh', [9532]], ['boxvH', [9578]], ['boxVh', [9579]], ['boxVH', [9580]], ['boxvl', [9508]], ['boxvL', [9569]], ['boxVl', [9570]], ['boxVL', [9571]], ['boxvr', [9500]], ['boxvR', [9566]], ['boxVr', [9567]], ['boxVR', [9568]], ['bprime', [8245]], ['breve', [728]], ['Breve', [728]], ['brvbar', [166]], ['bscr', [119991]], ['Bscr', [8492]], ['bsemi', [8271]], ['bsim', [8765]], ['bsime', [8909]], ['bsolb', [10693]], ['bsol', [92]], ['bsolhsub', [10184]], ['bull', [8226]], ['bullet', [8226]], ['bump', [8782]], ['bumpE', [10926]], ['bumpe', [8783]], ['Bumpeq', [8782]], ['bumpeq', [8783]], ['Cacute', [262]], ['cacute', [263]], ['capand', [10820]], ['capbrcup', [10825]], ['capcap', [10827]], ['cap', [8745]], ['Cap', [8914]], ['capcup', [10823]], ['capdot', [10816]], ['CapitalDifferentialD', [8517]], ['caps', [8745, 65024]], ['caret', [8257]], ['caron', [711]], ['Cayleys', [8493]], ['ccaps', [10829]], ['Ccaron', [268]], ['ccaron', [269]], ['Ccedil', [199]], ['ccedil', [231]], ['Ccirc', [264]], ['ccirc', [265]], ['Cconint', [8752]], ['ccups', [10828]], ['ccupssm', [10832]], ['Cdot', [266]], ['cdot', [267]], ['cedil', [184]], ['Cedilla', [184]], ['cemptyv', [10674]], ['cent', [162]], ['centerdot', [183]], ['CenterDot', [183]], ['cfr', [120096]], ['Cfr', [8493]], ['CHcy', [1063]], ['chcy', [1095]], ['check', [10003]], ['checkmark', [10003]], ['Chi', [935]], ['chi', [967]], ['circ', [710]], ['circeq', [8791]], ['circlearrowleft', [8634]], ['circlearrowright', [8635]], ['circledast', [8859]], ['circledcirc', [8858]], ['circleddash', [8861]], ['CircleDot', [8857]], ['circledR', [174]], ['circledS', [9416]], ['CircleMinus', [8854]], ['CirclePlus', [8853]], ['CircleTimes', [8855]], ['cir', [9675]], ['cirE', [10691]], ['cire', [8791]], ['cirfnint', [10768]], ['cirmid', [10991]], ['cirscir', [10690]], ['ClockwiseContourIntegral', [8754]], ['clubs', [9827]], ['clubsuit', [9827]], ['colon', [58]], ['Colon', [8759]], ['Colone', [10868]], ['colone', [8788]], ['coloneq', [8788]], ['comma', [44]], ['commat', [64]], ['comp', [8705]], ['compfn', [8728]], ['complement', [8705]], ['complexes', [8450]], ['cong', [8773]], ['congdot', [10861]], ['Congruent', [8801]], ['conint', [8750]], ['Conint', [8751]], ['ContourIntegral', [8750]], ['copf', [120148]], ['Copf', [8450]], ['coprod', [8720]], ['Coproduct', [8720]], ['copy', [169]], ['COPY', [169]], ['copysr', [8471]], ['CounterClockwiseContourIntegral', [8755]], ['crarr', [8629]], ['cross', [10007]], ['Cross', [10799]], ['Cscr', [119966]], ['cscr', [119992]], ['csub', [10959]], ['csube', [10961]], ['csup', [10960]], ['csupe', [10962]], ['ctdot', [8943]], ['cudarrl', [10552]], ['cudarrr', [10549]], ['cuepr', [8926]], ['cuesc', [8927]], ['cularr', [8630]], ['cularrp', [10557]], ['cupbrcap', [10824]], ['cupcap', [10822]], ['CupCap', [8781]], ['cup', [8746]], ['Cup', [8915]], ['cupcup', [10826]], ['cupdot', [8845]], ['cupor', [10821]], ['cups', [8746, 65024]], ['curarr', [8631]], ['curarrm', [10556]], ['curlyeqprec', [8926]], ['curlyeqsucc', [8927]], ['curlyvee', [8910]], ['curlywedge', [8911]], ['curren', [164]], ['curvearrowleft', [8630]], ['curvearrowright', [8631]], ['cuvee', [8910]], ['cuwed', [8911]], ['cwconint', [8754]], ['cwint', [8753]], ['cylcty', [9005]], ['dagger', [8224]], ['Dagger', [8225]], ['daleth', [8504]], ['darr', [8595]], ['Darr', [8609]], ['dArr', [8659]], ['dash', [8208]], ['Dashv', [10980]], ['dashv', [8867]], ['dbkarow', [10511]], ['dblac', [733]], ['Dcaron', [270]], ['dcaron', [271]], ['Dcy', [1044]], ['dcy', [1076]], ['ddagger', [8225]], ['ddarr', [8650]], ['DD', [8517]], ['dd', [8518]], ['DDotrahd', [10513]], ['ddotseq', [10871]], ['deg', [176]], ['Del', [8711]], ['Delta', [916]], ['delta', [948]], ['demptyv', [10673]], ['dfisht', [10623]], ['Dfr', [120071]], ['dfr', [120097]], ['dHar', [10597]], ['dharl', [8643]], ['dharr', [8642]], ['DiacriticalAcute', [180]], ['DiacriticalDot', [729]], ['DiacriticalDoubleAcute', [733]], ['DiacriticalGrave', [96]], ['DiacriticalTilde', [732]], ['diam', [8900]], ['diamond', [8900]], ['Diamond', [8900]], ['diamondsuit', [9830]], ['diams', [9830]], ['die', [168]], ['DifferentialD', [8518]], ['digamma', [989]], ['disin', [8946]], ['div', [247]], ['divide', [247]], ['divideontimes', [8903]], ['divonx', [8903]], ['DJcy', [1026]], ['djcy', [1106]], ['dlcorn', [8990]], ['dlcrop', [8973]], ['dollar', [36]], ['Dopf', [120123]], ['dopf', [120149]], ['Dot', [168]], ['dot', [729]], ['DotDot', [8412]], ['doteq', [8784]], ['doteqdot', [8785]], ['DotEqual', [8784]], ['dotminus', [8760]], ['dotplus', [8724]], ['dotsquare', [8865]], ['doublebarwedge', [8966]], ['DoubleContourIntegral', [8751]], ['DoubleDot', [168]], ['DoubleDownArrow', [8659]], ['DoubleLeftArrow', [8656]], ['DoubleLeftRightArrow', [8660]], ['DoubleLeftTee', [10980]], ['DoubleLongLeftArrow', [10232]], ['DoubleLongLeftRightArrow', [10234]], ['DoubleLongRightArrow', [10233]], ['DoubleRightArrow', [8658]], ['DoubleRightTee', [8872]], ['DoubleUpArrow', [8657]], ['DoubleUpDownArrow', [8661]], ['DoubleVerticalBar', [8741]], ['DownArrowBar', [10515]], ['downarrow', [8595]], ['DownArrow', [8595]], ['Downarrow', [8659]], ['DownArrowUpArrow', [8693]], ['DownBreve', [785]], ['downdownarrows', [8650]], ['downharpoonleft', [8643]], ['downharpoonright', [8642]], ['DownLeftRightVector', [10576]], ['DownLeftTeeVector', [10590]], ['DownLeftVectorBar', [10582]], ['DownLeftVector', [8637]], ['DownRightTeeVector', [10591]], ['DownRightVectorBar', [10583]], ['DownRightVector', [8641]], ['DownTeeArrow', [8615]], ['DownTee', [8868]], ['drbkarow', [10512]], ['drcorn', [8991]], ['drcrop', [8972]], ['Dscr', [119967]], ['dscr', [119993]], ['DScy', [1029]], ['dscy', [1109]], ['dsol', [10742]], ['Dstrok', [272]], ['dstrok', [273]], ['dtdot', [8945]], ['dtri', [9663]], ['dtrif', [9662]], ['duarr', [8693]], ['duhar', [10607]], ['dwangle', [10662]], ['DZcy', [1039]], ['dzcy', [1119]], ['dzigrarr', [10239]], ['Eacute', [201]], ['eacute', [233]], ['easter', [10862]], ['Ecaron', [282]], ['ecaron', [283]], ['Ecirc', [202]], ['ecirc', [234]], ['ecir', [8790]], ['ecolon', [8789]], ['Ecy', [1069]], ['ecy', [1101]], ['eDDot', [10871]], ['Edot', [278]], ['edot', [279]], ['eDot', [8785]], ['ee', [8519]], ['efDot', [8786]], ['Efr', [120072]], ['efr', [120098]], ['eg', [10906]], ['Egrave', [200]], ['egrave', [232]], ['egs', [10902]], ['egsdot', [10904]], ['el', [10905]], ['Element', [8712]], ['elinters', [9191]], ['ell', [8467]], ['els', [10901]], ['elsdot', [10903]], ['Emacr', [274]], ['emacr', [275]], ['empty', [8709]], ['emptyset', [8709]], ['EmptySmallSquare', [9723]], ['emptyv', [8709]], ['EmptyVerySmallSquare', [9643]], ['emsp13', [8196]], ['emsp14', [8197]], ['emsp', [8195]], ['ENG', [330]], ['eng', [331]], ['ensp', [8194]], ['Eogon', [280]], ['eogon', [281]], ['Eopf', [120124]], ['eopf', [120150]], ['epar', [8917]], ['eparsl', [10723]], ['eplus', [10865]], ['epsi', [949]], ['Epsilon', [917]], ['epsilon', [949]], ['epsiv', [1013]], ['eqcirc', [8790]], ['eqcolon', [8789]], ['eqsim', [8770]], ['eqslantgtr', [10902]], ['eqslantless', [10901]], ['Equal', [10869]], ['equals', [61]], ['EqualTilde', [8770]], ['equest', [8799]], ['Equilibrium', [8652]], ['equiv', [8801]], ['equivDD', [10872]], ['eqvparsl', [10725]], ['erarr', [10609]], ['erDot', [8787]], ['escr', [8495]], ['Escr', [8496]], ['esdot', [8784]], ['Esim', [10867]], ['esim', [8770]], ['Eta', [919]], ['eta', [951]], ['ETH', [208]], ['eth', [240]], ['Euml', [203]], ['euml', [235]], ['euro', [8364]], ['excl', [33]], ['exist', [8707]], ['Exists', [8707]], ['expectation', [8496]], ['exponentiale', [8519]], ['ExponentialE', [8519]], ['fallingdotseq', [8786]], ['Fcy', [1060]], ['fcy', [1092]], ['female', [9792]], ['ffilig', [64259]], ['fflig', [64256]], ['ffllig', [64260]], ['Ffr', [120073]], ['ffr', [120099]], ['filig', [64257]], ['FilledSmallSquare', [9724]], ['FilledVerySmallSquare', [9642]], ['fjlig', [102, 106]], ['flat', [9837]], ['fllig', [64258]], ['fltns', [9649]], ['fnof', [402]], ['Fopf', [120125]], ['fopf', [120151]], ['forall', [8704]], ['ForAll', [8704]], ['fork', [8916]], ['forkv', [10969]], ['Fouriertrf', [8497]], ['fpartint', [10765]], ['frac12', [189]], ['frac13', [8531]], ['frac14', [188]], ['frac15', [8533]], ['frac16', [8537]], ['frac18', [8539]], ['frac23', [8532]], ['frac25', [8534]], ['frac34', [190]], ['frac35', [8535]], ['frac38', [8540]], ['frac45', [8536]], ['frac56', [8538]], ['frac58', [8541]], ['frac78', [8542]], ['frasl', [8260]], ['frown', [8994]], ['fscr', [119995]], ['Fscr', [8497]], ['gacute', [501]], ['Gamma', [915]], ['gamma', [947]], ['Gammad', [988]], ['gammad', [989]], ['gap', [10886]], ['Gbreve', [286]], ['gbreve', [287]], ['Gcedil', [290]], ['Gcirc', [284]], ['gcirc', [285]], ['Gcy', [1043]], ['gcy', [1075]], ['Gdot', [288]], ['gdot', [289]], ['ge', [8805]], ['gE', [8807]], ['gEl', [10892]], ['gel', [8923]], ['geq', [8805]], ['geqq', [8807]], ['geqslant', [10878]], ['gescc', [10921]], ['ges', [10878]], ['gesdot', [10880]], ['gesdoto', [10882]], ['gesdotol', [10884]], ['gesl', [8923, 65024]], ['gesles', [10900]], ['Gfr', [120074]], ['gfr', [120100]], ['gg', [8811]], ['Gg', [8921]], ['ggg', [8921]], ['gimel', [8503]], ['GJcy', [1027]], ['gjcy', [1107]], ['gla', [10917]], ['gl', [8823]], ['glE', [10898]], ['glj', [10916]], ['gnap', [10890]], ['gnapprox', [10890]], ['gne', [10888]], ['gnE', [8809]], ['gneq', [10888]], ['gneqq', [8809]], ['gnsim', [8935]], ['Gopf', [120126]], ['gopf', [120152]], ['grave', [96]], ['GreaterEqual', [8805]], ['GreaterEqualLess', [8923]], ['GreaterFullEqual', [8807]], ['GreaterGreater', [10914]], ['GreaterLess', [8823]], ['GreaterSlantEqual', [10878]], ['GreaterTilde', [8819]], ['Gscr', [119970]], ['gscr', [8458]], ['gsim', [8819]], ['gsime', [10894]], ['gsiml', [10896]], ['gtcc', [10919]], ['gtcir', [10874]], ['gt', [62]], ['GT', [62]], ['Gt', [8811]], ['gtdot', [8919]], ['gtlPar', [10645]], ['gtquest', [10876]], ['gtrapprox', [10886]], ['gtrarr', [10616]], ['gtrdot', [8919]], ['gtreqless', [8923]], ['gtreqqless', [10892]], ['gtrless', [8823]], ['gtrsim', [8819]], ['gvertneqq', [8809, 65024]], ['gvnE', [8809, 65024]], ['Hacek', [711]], ['hairsp', [8202]], ['half', [189]], ['hamilt', [8459]], ['HARDcy', [1066]], ['hardcy', [1098]], ['harrcir', [10568]], ['harr', [8596]], ['hArr', [8660]], ['harrw', [8621]], ['Hat', [94]], ['hbar', [8463]], ['Hcirc', [292]], ['hcirc', [293]], ['hearts', [9829]], ['heartsuit', [9829]], ['hellip', [8230]], ['hercon', [8889]], ['hfr', [120101]], ['Hfr', [8460]], ['HilbertSpace', [8459]], ['hksearow', [10533]], ['hkswarow', [10534]], ['hoarr', [8703]], ['homtht', [8763]], ['hookleftarrow', [8617]], ['hookrightarrow', [8618]], ['hopf', [120153]], ['Hopf', [8461]], ['horbar', [8213]], ['HorizontalLine', [9472]], ['hscr', [119997]], ['Hscr', [8459]], ['hslash', [8463]], ['Hstrok', [294]], ['hstrok', [295]], ['HumpDownHump', [8782]], ['HumpEqual', [8783]], ['hybull', [8259]], ['hyphen', [8208]], ['Iacute', [205]], ['iacute', [237]], ['ic', [8291]], ['Icirc', [206]], ['icirc', [238]], ['Icy', [1048]], ['icy', [1080]], ['Idot', [304]], ['IEcy', [1045]], ['iecy', [1077]], ['iexcl', [161]], ['iff', [8660]], ['ifr', [120102]], ['Ifr', [8465]], ['Igrave', [204]], ['igrave', [236]], ['ii', [8520]], ['iiiint', [10764]], ['iiint', [8749]], ['iinfin', [10716]], ['iiota', [8489]], ['IJlig', [306]], ['ijlig', [307]], ['Imacr', [298]], ['imacr', [299]], ['image', [8465]], ['ImaginaryI', [8520]], ['imagline', [8464]], ['imagpart', [8465]], ['imath', [305]], ['Im', [8465]], ['imof', [8887]], ['imped', [437]], ['Implies', [8658]], ['incare', [8453]], ['in', [8712]], ['infin', [8734]], ['infintie', [10717]], ['inodot', [305]], ['intcal', [8890]], ['int', [8747]], ['Int', [8748]], ['integers', [8484]], ['Integral', [8747]], ['intercal', [8890]], ['Intersection', [8898]], ['intlarhk', [10775]], ['intprod', [10812]], ['InvisibleComma', [8291]], ['InvisibleTimes', [8290]], ['IOcy', [1025]], ['iocy', [1105]], ['Iogon', [302]], ['iogon', [303]], ['Iopf', [120128]], ['iopf', [120154]], ['Iota', [921]], ['iota', [953]], ['iprod', [10812]], ['iquest', [191]], ['iscr', [119998]], ['Iscr', [8464]], ['isin', [8712]], ['isindot', [8949]], ['isinE', [8953]], ['isins', [8948]], ['isinsv', [8947]], ['isinv', [8712]], ['it', [8290]], ['Itilde', [296]], ['itilde', [297]], ['Iukcy', [1030]], ['iukcy', [1110]], ['Iuml', [207]], ['iuml', [239]], ['Jcirc', [308]], ['jcirc', [309]], ['Jcy', [1049]], ['jcy', [1081]], ['Jfr', [120077]], ['jfr', [120103]], ['jmath', [567]], ['Jopf', [120129]], ['jopf', [120155]], ['Jscr', [119973]], ['jscr', [119999]], ['Jsercy', [1032]], ['jsercy', [1112]], ['Jukcy', [1028]], ['jukcy', [1108]], ['Kappa', [922]], ['kappa', [954]], ['kappav', [1008]], ['Kcedil', [310]], ['kcedil', [311]], ['Kcy', [1050]], ['kcy', [1082]], ['Kfr', [120078]], ['kfr', [120104]], ['kgreen', [312]], ['KHcy', [1061]], ['khcy', [1093]], ['KJcy', [1036]], ['kjcy', [1116]], ['Kopf', [120130]], ['kopf', [120156]], ['Kscr', [119974]], ['kscr', [120000]], ['lAarr', [8666]], ['Lacute', [313]], ['lacute', [314]], ['laemptyv', [10676]], ['lagran', [8466]], ['Lambda', [923]], ['lambda', [955]], ['lang', [10216]], ['Lang', [10218]], ['langd', [10641]], ['langle', [10216]], ['lap', [10885]], ['Laplacetrf', [8466]], ['laquo', [171]], ['larrb', [8676]], ['larrbfs', [10527]], ['larr', [8592]], ['Larr', [8606]], ['lArr', [8656]], ['larrfs', [10525]], ['larrhk', [8617]], ['larrlp', [8619]], ['larrpl', [10553]], ['larrsim', [10611]], ['larrtl', [8610]], ['latail', [10521]], ['lAtail', [10523]], ['lat', [10923]], ['late', [10925]], ['lates', [10925, 65024]], ['lbarr', [10508]], ['lBarr', [10510]], ['lbbrk', [10098]], ['lbrace', [123]], ['lbrack', [91]], ['lbrke', [10635]], ['lbrksld', [10639]], ['lbrkslu', [10637]], ['Lcaron', [317]], ['lcaron', [318]], ['Lcedil', [315]], ['lcedil', [316]], ['lceil', [8968]], ['lcub', [123]], ['Lcy', [1051]], ['lcy', [1083]], ['ldca', [10550]], ['ldquo', [8220]], ['ldquor', [8222]], ['ldrdhar', [10599]], ['ldrushar', [10571]], ['ldsh', [8626]], ['le', [8804]], ['lE', [8806]], ['LeftAngleBracket', [10216]], ['LeftArrowBar', [8676]], ['leftarrow', [8592]], ['LeftArrow', [8592]], ['Leftarrow', [8656]], ['LeftArrowRightArrow', [8646]], ['leftarrowtail', [8610]], ['LeftCeiling', [8968]], ['LeftDoubleBracket', [10214]], ['LeftDownTeeVector', [10593]], ['LeftDownVectorBar', [10585]], ['LeftDownVector', [8643]], ['LeftFloor', [8970]], ['leftharpoondown', [8637]], ['leftharpoonup', [8636]], ['leftleftarrows', [8647]], ['leftrightarrow', [8596]], ['LeftRightArrow', [8596]], ['Leftrightarrow', [8660]], ['leftrightarrows', [8646]], ['leftrightharpoons', [8651]], ['leftrightsquigarrow', [8621]], ['LeftRightVector', [10574]], ['LeftTeeArrow', [8612]], ['LeftTee', [8867]], ['LeftTeeVector', [10586]], ['leftthreetimes', [8907]], ['LeftTriangleBar', [10703]], ['LeftTriangle', [8882]], ['LeftTriangleEqual', [8884]], ['LeftUpDownVector', [10577]], ['LeftUpTeeVector', [10592]], ['LeftUpVectorBar', [10584]], ['LeftUpVector', [8639]], ['LeftVectorBar', [10578]], ['LeftVector', [8636]], ['lEg', [10891]], ['leg', [8922]], ['leq', [8804]], ['leqq', [8806]], ['leqslant', [10877]], ['lescc', [10920]], ['les', [10877]], ['lesdot', [10879]], ['lesdoto', [10881]], ['lesdotor', [10883]], ['lesg', [8922, 65024]], ['lesges', [10899]], ['lessapprox', [10885]], ['lessdot', [8918]], ['lesseqgtr', [8922]], ['lesseqqgtr', [10891]], ['LessEqualGreater', [8922]], ['LessFullEqual', [8806]], ['LessGreater', [8822]], ['lessgtr', [8822]], ['LessLess', [10913]], ['lesssim', [8818]], ['LessSlantEqual', [10877]], ['LessTilde', [8818]], ['lfisht', [10620]], ['lfloor', [8970]], ['Lfr', [120079]], ['lfr', [120105]], ['lg', [8822]], ['lgE', [10897]], ['lHar', [10594]], ['lhard', [8637]], ['lharu', [8636]], ['lharul', [10602]], ['lhblk', [9604]], ['LJcy', [1033]], ['ljcy', [1113]], ['llarr', [8647]], ['ll', [8810]], ['Ll', [8920]], ['llcorner', [8990]], ['Lleftarrow', [8666]], ['llhard', [10603]], ['lltri', [9722]], ['Lmidot', [319]], ['lmidot', [320]], ['lmoustache', [9136]], ['lmoust', [9136]], ['lnap', [10889]], ['lnapprox', [10889]], ['lne', [10887]], ['lnE', [8808]], ['lneq', [10887]], ['lneqq', [8808]], ['lnsim', [8934]], ['loang', [10220]], ['loarr', [8701]], ['lobrk', [10214]], ['longleftarrow', [10229]], ['LongLeftArrow', [10229]], ['Longleftarrow', [10232]], ['longleftrightarrow', [10231]], ['LongLeftRightArrow', [10231]], ['Longleftrightarrow', [10234]], ['longmapsto', [10236]], ['longrightarrow', [10230]], ['LongRightArrow', [10230]], ['Longrightarrow', [10233]], ['looparrowleft', [8619]], ['looparrowright', [8620]], ['lopar', [10629]], ['Lopf', [120131]], ['lopf', [120157]], ['loplus', [10797]], ['lotimes', [10804]], ['lowast', [8727]], ['lowbar', [95]], ['LowerLeftArrow', [8601]], ['LowerRightArrow', [8600]], ['loz', [9674]], ['lozenge', [9674]], ['lozf', [10731]], ['lpar', [40]], ['lparlt', [10643]], ['lrarr', [8646]], ['lrcorner', [8991]], ['lrhar', [8651]], ['lrhard', [10605]], ['lrm', [8206]], ['lrtri', [8895]], ['lsaquo', [8249]], ['lscr', [120001]], ['Lscr', [8466]], ['lsh', [8624]], ['Lsh', [8624]], ['lsim', [8818]], ['lsime', [10893]], ['lsimg', [10895]], ['lsqb', [91]], ['lsquo', [8216]], ['lsquor', [8218]], ['Lstrok', [321]], ['lstrok', [322]], ['ltcc', [10918]], ['ltcir', [10873]], ['lt', [60]], ['LT', [60]], ['Lt', [8810]], ['ltdot', [8918]], ['lthree', [8907]], ['ltimes', [8905]], ['ltlarr', [10614]], ['ltquest', [10875]], ['ltri', [9667]], ['ltrie', [8884]], ['ltrif', [9666]], ['ltrPar', [10646]], ['lurdshar', [10570]], ['luruhar', [10598]], ['lvertneqq', [8808, 65024]], ['lvnE', [8808, 65024]], ['macr', [175]], ['male', [9794]], ['malt', [10016]], ['maltese', [10016]], ['Map', [10501]], ['map', [8614]], ['mapsto', [8614]], ['mapstodown', [8615]], ['mapstoleft', [8612]], ['mapstoup', [8613]], ['marker', [9646]], ['mcomma', [10793]], ['Mcy', [1052]], ['mcy', [1084]], ['mdash', [8212]], ['mDDot', [8762]], ['measuredangle', [8737]], ['MediumSpace', [8287]], ['Mellintrf', [8499]], ['Mfr', [120080]], ['mfr', [120106]], ['mho', [8487]], ['micro', [181]], ['midast', [42]], ['midcir', [10992]], ['mid', [8739]], ['middot', [183]], ['minusb', [8863]], ['minus', [8722]], ['minusd', [8760]], ['minusdu', [10794]], ['MinusPlus', [8723]], ['mlcp', [10971]], ['mldr', [8230]], ['mnplus', [8723]], ['models', [8871]], ['Mopf', [120132]], ['mopf', [120158]], ['mp', [8723]], ['mscr', [120002]], ['Mscr', [8499]], ['mstpos', [8766]], ['Mu', [924]], ['mu', [956]], ['multimap', [8888]], ['mumap', [8888]], ['nabla', [8711]], ['Nacute', [323]], ['nacute', [324]], ['nang', [8736, 8402]], ['nap', [8777]], ['napE', [10864, 824]], ['napid', [8779, 824]], ['napos', [329]], ['napprox', [8777]], ['natural', [9838]], ['naturals', [8469]], ['natur', [9838]], ['nbsp', [160]], ['nbump', [8782, 824]], ['nbumpe', [8783, 824]], ['ncap', [10819]], ['Ncaron', [327]], ['ncaron', [328]], ['Ncedil', [325]], ['ncedil', [326]], ['ncong', [8775]], ['ncongdot', [10861, 824]], ['ncup', [10818]], ['Ncy', [1053]], ['ncy', [1085]], ['ndash', [8211]], ['nearhk', [10532]], ['nearr', [8599]], ['neArr', [8663]], ['nearrow', [8599]], ['ne', [8800]], ['nedot', [8784, 824]], ['NegativeMediumSpace', [8203]], ['NegativeThickSpace', [8203]], ['NegativeThinSpace', [8203]], ['NegativeVeryThinSpace', [8203]], ['nequiv', [8802]], ['nesear', [10536]], ['nesim', [8770, 824]], ['NestedGreaterGreater', [8811]], ['NestedLessLess', [8810]], ['nexist', [8708]], ['nexists', [8708]], ['Nfr', [120081]], ['nfr', [120107]], ['ngE', [8807, 824]], ['nge', [8817]], ['ngeq', [8817]], ['ngeqq', [8807, 824]], ['ngeqslant', [10878, 824]], ['nges', [10878, 824]], ['nGg', [8921, 824]], ['ngsim', [8821]], ['nGt', [8811, 8402]], ['ngt', [8815]], ['ngtr', [8815]], ['nGtv', [8811, 824]], ['nharr', [8622]], ['nhArr', [8654]], ['nhpar', [10994]], ['ni', [8715]], ['nis', [8956]], ['nisd', [8954]], ['niv', [8715]], ['NJcy', [1034]], ['njcy', [1114]], ['nlarr', [8602]], ['nlArr', [8653]], ['nldr', [8229]], ['nlE', [8806, 824]], ['nle', [8816]], ['nleftarrow', [8602]], ['nLeftarrow', [8653]], ['nleftrightarrow', [8622]], ['nLeftrightarrow', [8654]], ['nleq', [8816]], ['nleqq', [8806, 824]], ['nleqslant', [10877, 824]], ['nles', [10877, 824]], ['nless', [8814]], ['nLl', [8920, 824]], ['nlsim', [8820]], ['nLt', [8810, 8402]], ['nlt', [8814]], ['nltri', [8938]], ['nltrie', [8940]], ['nLtv', [8810, 824]], ['nmid', [8740]], ['NoBreak', [8288]], ['NonBreakingSpace', [160]], ['nopf', [120159]], ['Nopf', [8469]], ['Not', [10988]], ['not', [172]], ['NotCongruent', [8802]], ['NotCupCap', [8813]], ['NotDoubleVerticalBar', [8742]], ['NotElement', [8713]], ['NotEqual', [8800]], ['NotEqualTilde', [8770, 824]], ['NotExists', [8708]], ['NotGreater', [8815]], ['NotGreaterEqual', [8817]], ['NotGreaterFullEqual', [8807, 824]], ['NotGreaterGreater', [8811, 824]], ['NotGreaterLess', [8825]], ['NotGreaterSlantEqual', [10878, 824]], ['NotGreaterTilde', [8821]], ['NotHumpDownHump', [8782, 824]], ['NotHumpEqual', [8783, 824]], ['notin', [8713]], ['notindot', [8949, 824]], ['notinE', [8953, 824]], ['notinva', [8713]], ['notinvb', [8951]], ['notinvc', [8950]], ['NotLeftTriangleBar', [10703, 824]], ['NotLeftTriangle', [8938]], ['NotLeftTriangleEqual', [8940]], ['NotLess', [8814]], ['NotLessEqual', [8816]], ['NotLessGreater', [8824]], ['NotLessLess', [8810, 824]], ['NotLessSlantEqual', [10877, 824]], ['NotLessTilde', [8820]], ['NotNestedGreaterGreater', [10914, 824]], ['NotNestedLessLess', [10913, 824]], ['notni', [8716]], ['notniva', [8716]], ['notnivb', [8958]], ['notnivc', [8957]], ['NotPrecedes', [8832]], ['NotPrecedesEqual', [10927, 824]], ['NotPrecedesSlantEqual', [8928]], ['NotReverseElement', [8716]], ['NotRightTriangleBar', [10704, 824]], ['NotRightTriangle', [8939]], ['NotRightTriangleEqual', [8941]], ['NotSquareSubset', [8847, 824]], ['NotSquareSubsetEqual', [8930]], ['NotSquareSuperset', [8848, 824]], ['NotSquareSupersetEqual', [8931]], ['NotSubset', [8834, 8402]], ['NotSubsetEqual', [8840]], ['NotSucceeds', [8833]], ['NotSucceedsEqual', [10928, 824]], ['NotSucceedsSlantEqual', [8929]], ['NotSucceedsTilde', [8831, 824]], ['NotSuperset', [8835, 8402]], ['NotSupersetEqual', [8841]], ['NotTilde', [8769]], ['NotTildeEqual', [8772]], ['NotTildeFullEqual', [8775]], ['NotTildeTilde', [8777]], ['NotVerticalBar', [8740]], ['nparallel', [8742]], ['npar', [8742]], ['nparsl', [11005, 8421]], ['npart', [8706, 824]], ['npolint', [10772]], ['npr', [8832]], ['nprcue', [8928]], ['nprec', [8832]], ['npreceq', [10927, 824]], ['npre', [10927, 824]], ['nrarrc', [10547, 824]], ['nrarr', [8603]], ['nrArr', [8655]], ['nrarrw', [8605, 824]], ['nrightarrow', [8603]], ['nRightarrow', [8655]], ['nrtri', [8939]], ['nrtrie', [8941]], ['nsc', [8833]], ['nsccue', [8929]], ['nsce', [10928, 824]], ['Nscr', [119977]], ['nscr', [120003]], ['nshortmid', [8740]], ['nshortparallel', [8742]], ['nsim', [8769]], ['nsime', [8772]], ['nsimeq', [8772]], ['nsmid', [8740]], ['nspar', [8742]], ['nsqsube', [8930]], ['nsqsupe', [8931]], ['nsub', [8836]], ['nsubE', [10949, 824]], ['nsube', [8840]], ['nsubset', [8834, 8402]], ['nsubseteq', [8840]], ['nsubseteqq', [10949, 824]], ['nsucc', [8833]], ['nsucceq', [10928, 824]], ['nsup', [8837]], ['nsupE', [10950, 824]], ['nsupe', [8841]], ['nsupset', [8835, 8402]], ['nsupseteq', [8841]], ['nsupseteqq', [10950, 824]], ['ntgl', [8825]], ['Ntilde', [209]], ['ntilde', [241]], ['ntlg', [8824]], ['ntriangleleft', [8938]], ['ntrianglelefteq', [8940]], ['ntriangleright', [8939]], ['ntrianglerighteq', [8941]], ['Nu', [925]], ['nu', [957]], ['num', [35]], ['numero', [8470]], ['numsp', [8199]], ['nvap', [8781, 8402]], ['nvdash', [8876]], ['nvDash', [8877]], ['nVdash', [8878]], ['nVDash', [8879]], ['nvge', [8805, 8402]], ['nvgt', [62, 8402]], ['nvHarr', [10500]], ['nvinfin', [10718]], ['nvlArr', [10498]], ['nvle', [8804, 8402]], ['nvlt', [60, 8402]], ['nvltrie', [8884, 8402]], ['nvrArr', [10499]], ['nvrtrie', [8885, 8402]], ['nvsim', [8764, 8402]], ['nwarhk', [10531]], ['nwarr', [8598]], ['nwArr', [8662]], ['nwarrow', [8598]], ['nwnear', [10535]], ['Oacute', [211]], ['oacute', [243]], ['oast', [8859]], ['Ocirc', [212]], ['ocirc', [244]], ['ocir', [8858]], ['Ocy', [1054]], ['ocy', [1086]], ['odash', [8861]], ['Odblac', [336]], ['odblac', [337]], ['odiv', [10808]], ['odot', [8857]], ['odsold', [10684]], ['OElig', [338]], ['oelig', [339]], ['ofcir', [10687]], ['Ofr', [120082]], ['ofr', [120108]], ['ogon', [731]], ['Ograve', [210]], ['ograve', [242]], ['ogt', [10689]], ['ohbar', [10677]], ['ohm', [937]], ['oint', [8750]], ['olarr', [8634]], ['olcir', [10686]], ['olcross', [10683]], ['oline', [8254]], ['olt', [10688]], ['Omacr', [332]], ['omacr', [333]], ['Omega', [937]], ['omega', [969]], ['Omicron', [927]], ['omicron', [959]], ['omid', [10678]], ['ominus', [8854]], ['Oopf', [120134]], ['oopf', [120160]], ['opar', [10679]], ['OpenCurlyDoubleQuote', [8220]], ['OpenCurlyQuote', [8216]], ['operp', [10681]], ['oplus', [8853]], ['orarr', [8635]], ['Or', [10836]], ['or', [8744]], ['ord', [10845]], ['order', [8500]], ['orderof', [8500]], ['ordf', [170]], ['ordm', [186]], ['origof', [8886]], ['oror', [10838]], ['orslope', [10839]], ['orv', [10843]], ['oS', [9416]], ['Oscr', [119978]], ['oscr', [8500]], ['Oslash', [216]], ['oslash', [248]], ['osol', [8856]], ['Otilde', [213]], ['otilde', [245]], ['otimesas', [10806]], ['Otimes', [10807]], ['otimes', [8855]], ['Ouml', [214]], ['ouml', [246]], ['ovbar', [9021]], ['OverBar', [8254]], ['OverBrace', [9182]], ['OverBracket', [9140]], ['OverParenthesis', [9180]], ['para', [182]], ['parallel', [8741]], ['par', [8741]], ['parsim', [10995]], ['parsl', [11005]], ['part', [8706]], ['PartialD', [8706]], ['Pcy', [1055]], ['pcy', [1087]], ['percnt', [37]], ['period', [46]], ['permil', [8240]], ['perp', [8869]], ['pertenk', [8241]], ['Pfr', [120083]], ['pfr', [120109]], ['Phi', [934]], ['phi', [966]], ['phiv', [981]], ['phmmat', [8499]], ['phone', [9742]], ['Pi', [928]], ['pi', [960]], ['pitchfork', [8916]], ['piv', [982]], ['planck', [8463]], ['planckh', [8462]], ['plankv', [8463]], ['plusacir', [10787]], ['plusb', [8862]], ['pluscir', [10786]], ['plus', [43]], ['plusdo', [8724]], ['plusdu', [10789]], ['pluse', [10866]], ['PlusMinus', [177]], ['plusmn', [177]], ['plussim', [10790]], ['plustwo', [10791]], ['pm', [177]], ['Poincareplane', [8460]], ['pointint', [10773]], ['popf', [120161]], ['Popf', [8473]], ['pound', [163]], ['prap', [10935]], ['Pr', [10939]], ['pr', [8826]], ['prcue', [8828]], ['precapprox', [10935]], ['prec', [8826]], ['preccurlyeq', [8828]], ['Precedes', [8826]], ['PrecedesEqual', [10927]], ['PrecedesSlantEqual', [8828]], ['PrecedesTilde', [8830]], ['preceq', [10927]], ['precnapprox', [10937]], ['precneqq', [10933]], ['precnsim', [8936]], ['pre', [10927]], ['prE', [10931]], ['precsim', [8830]], ['prime', [8242]], ['Prime', [8243]], ['primes', [8473]], ['prnap', [10937]], ['prnE', [10933]], ['prnsim', [8936]], ['prod', [8719]], ['Product', [8719]], ['profalar', [9006]], ['profline', [8978]], ['profsurf', [8979]], ['prop', [8733]], ['Proportional', [8733]], ['Proportion', [8759]], ['propto', [8733]], ['prsim', [8830]], ['prurel', [8880]], ['Pscr', [119979]], ['pscr', [120005]], ['Psi', [936]], ['psi', [968]], ['puncsp', [8200]], ['Qfr', [120084]], ['qfr', [120110]], ['qint', [10764]], ['qopf', [120162]], ['Qopf', [8474]], ['qprime', [8279]], ['Qscr', [119980]], ['qscr', [120006]], ['quaternions', [8461]], ['quatint', [10774]], ['quest', [63]], ['questeq', [8799]], ['quot', [34]], ['QUOT', [34]], ['rAarr', [8667]], ['race', [8765, 817]], ['Racute', [340]], ['racute', [341]], ['radic', [8730]], ['raemptyv', [10675]], ['rang', [10217]], ['Rang', [10219]], ['rangd', [10642]], ['range', [10661]], ['rangle', [10217]], ['raquo', [187]], ['rarrap', [10613]], ['rarrb', [8677]], ['rarrbfs', [10528]], ['rarrc', [10547]], ['rarr', [8594]], ['Rarr', [8608]], ['rArr', [8658]], ['rarrfs', [10526]], ['rarrhk', [8618]], ['rarrlp', [8620]], ['rarrpl', [10565]], ['rarrsim', [10612]], ['Rarrtl', [10518]], ['rarrtl', [8611]], ['rarrw', [8605]], ['ratail', [10522]], ['rAtail', [10524]], ['ratio', [8758]], ['rationals', [8474]], ['rbarr', [10509]], ['rBarr', [10511]], ['RBarr', [10512]], ['rbbrk', [10099]], ['rbrace', [125]], ['rbrack', [93]], ['rbrke', [10636]], ['rbrksld', [10638]], ['rbrkslu', [10640]], ['Rcaron', [344]], ['rcaron', [345]], ['Rcedil', [342]], ['rcedil', [343]], ['rceil', [8969]], ['rcub', [125]], ['Rcy', [1056]], ['rcy', [1088]], ['rdca', [10551]], ['rdldhar', [10601]], ['rdquo', [8221]], ['rdquor', [8221]], ['CloseCurlyDoubleQuote', [8221]], ['rdsh', [8627]], ['real', [8476]], ['realine', [8475]], ['realpart', [8476]], ['reals', [8477]], ['Re', [8476]], ['rect', [9645]], ['reg', [174]], ['REG', [174]], ['ReverseElement', [8715]], ['ReverseEquilibrium', [8651]], ['ReverseUpEquilibrium', [10607]], ['rfisht', [10621]], ['rfloor', [8971]], ['rfr', [120111]], ['Rfr', [8476]], ['rHar', [10596]], ['rhard', [8641]], ['rharu', [8640]], ['rharul', [10604]], ['Rho', [929]], ['rho', [961]], ['rhov', [1009]], ['RightAngleBracket', [10217]], ['RightArrowBar', [8677]], ['rightarrow', [8594]], ['RightArrow', [8594]], ['Rightarrow', [8658]], ['RightArrowLeftArrow', [8644]], ['rightarrowtail', [8611]], ['RightCeiling', [8969]], ['RightDoubleBracket', [10215]], ['RightDownTeeVector', [10589]], ['RightDownVectorBar', [10581]], ['RightDownVector', [8642]], ['RightFloor', [8971]], ['rightharpoondown', [8641]], ['rightharpoonup', [8640]], ['rightleftarrows', [8644]], ['rightleftharpoons', [8652]], ['rightrightarrows', [8649]], ['rightsquigarrow', [8605]], ['RightTeeArrow', [8614]], ['RightTee', [8866]], ['RightTeeVector', [10587]], ['rightthreetimes', [8908]], ['RightTriangleBar', [10704]], ['RightTriangle', [8883]], ['RightTriangleEqual', [8885]], ['RightUpDownVector', [10575]], ['RightUpTeeVector', [10588]], ['RightUpVectorBar', [10580]], ['RightUpVector', [8638]], ['RightVectorBar', [10579]], ['RightVector', [8640]], ['ring', [730]], ['risingdotseq', [8787]], ['rlarr', [8644]], ['rlhar', [8652]], ['rlm', [8207]], ['rmoustache', [9137]], ['rmoust', [9137]], ['rnmid', [10990]], ['roang', [10221]], ['roarr', [8702]], ['robrk', [10215]], ['ropar', [10630]], ['ropf', [120163]], ['Ropf', [8477]], ['roplus', [10798]], ['rotimes', [10805]], ['RoundImplies', [10608]], ['rpar', [41]], ['rpargt', [10644]], ['rppolint', [10770]], ['rrarr', [8649]], ['Rrightarrow', [8667]], ['rsaquo', [8250]], ['rscr', [120007]], ['Rscr', [8475]], ['rsh', [8625]], ['Rsh', [8625]], ['rsqb', [93]], ['rsquo', [8217]], ['rsquor', [8217]], ['CloseCurlyQuote', [8217]], ['rthree', [8908]], ['rtimes', [8906]], ['rtri', [9657]], ['rtrie', [8885]], ['rtrif', [9656]], ['rtriltri', [10702]], ['RuleDelayed', [10740]], ['ruluhar', [10600]], ['rx', [8478]], ['Sacute', [346]], ['sacute', [347]], ['sbquo', [8218]], ['scap', [10936]], ['Scaron', [352]], ['scaron', [353]], ['Sc', [10940]], ['sc', [8827]], ['sccue', [8829]], ['sce', [10928]], ['scE', [10932]], ['Scedil', [350]], ['scedil', [351]], ['Scirc', [348]], ['scirc', [349]], ['scnap', [10938]], ['scnE', [10934]], ['scnsim', [8937]], ['scpolint', [10771]], ['scsim', [8831]], ['Scy', [1057]], ['scy', [1089]], ['sdotb', [8865]], ['sdot', [8901]], ['sdote', [10854]], ['searhk', [10533]], ['searr', [8600]], ['seArr', [8664]], ['searrow', [8600]], ['sect', [167]], ['semi', [59]], ['seswar', [10537]], ['setminus', [8726]], ['setmn', [8726]], ['sext', [10038]], ['Sfr', [120086]], ['sfr', [120112]], ['sfrown', [8994]], ['sharp', [9839]], ['SHCHcy', [1065]], ['shchcy', [1097]], ['SHcy', [1064]], ['shcy', [1096]], ['ShortDownArrow', [8595]], ['ShortLeftArrow', [8592]], ['shortmid', [8739]], ['shortparallel', [8741]], ['ShortRightArrow', [8594]], ['ShortUpArrow', [8593]], ['shy', [173]], ['Sigma', [931]], ['sigma', [963]], ['sigmaf', [962]], ['sigmav', [962]], ['sim', [8764]], ['simdot', [10858]], ['sime', [8771]], ['simeq', [8771]], ['simg', [10910]], ['simgE', [10912]], ['siml', [10909]], ['simlE', [10911]], ['simne', [8774]], ['simplus', [10788]], ['simrarr', [10610]], ['slarr', [8592]], ['SmallCircle', [8728]], ['smallsetminus', [8726]], ['smashp', [10803]], ['smeparsl', [10724]], ['smid', [8739]], ['smile', [8995]], ['smt', [10922]], ['smte', [10924]], ['smtes', [10924, 65024]], ['SOFTcy', [1068]], ['softcy', [1100]], ['solbar', [9023]], ['solb', [10692]], ['sol', [47]], ['Sopf', [120138]], ['sopf', [120164]], ['spades', [9824]], ['spadesuit', [9824]], ['spar', [8741]], ['sqcap', [8851]], ['sqcaps', [8851, 65024]], ['sqcup', [8852]], ['sqcups', [8852, 65024]], ['Sqrt', [8730]], ['sqsub', [8847]], ['sqsube', [8849]], ['sqsubset', [8847]], ['sqsubseteq', [8849]], ['sqsup', [8848]], ['sqsupe', [8850]], ['sqsupset', [8848]], ['sqsupseteq', [8850]], ['square', [9633]], ['Square', [9633]], ['SquareIntersection', [8851]], ['SquareSubset', [8847]], ['SquareSubsetEqual', [8849]], ['SquareSuperset', [8848]], ['SquareSupersetEqual', [8850]], ['SquareUnion', [8852]], ['squarf', [9642]], ['squ', [9633]], ['squf', [9642]], ['srarr', [8594]], ['Sscr', [119982]], ['sscr', [120008]], ['ssetmn', [8726]], ['ssmile', [8995]], ['sstarf', [8902]], ['Star', [8902]], ['star', [9734]], ['starf', [9733]], ['straightepsilon', [1013]], ['straightphi', [981]], ['strns', [175]], ['sub', [8834]], ['Sub', [8912]], ['subdot', [10941]], ['subE', [10949]], ['sube', [8838]], ['subedot', [10947]], ['submult', [10945]], ['subnE', [10955]], ['subne', [8842]], ['subplus', [10943]], ['subrarr', [10617]], ['subset', [8834]], ['Subset', [8912]], ['subseteq', [8838]], ['subseteqq', [10949]], ['SubsetEqual', [8838]], ['subsetneq', [8842]], ['subsetneqq', [10955]], ['subsim', [10951]], ['subsub', [10965]], ['subsup', [10963]], ['succapprox', [10936]], ['succ', [8827]], ['succcurlyeq', [8829]], ['Succeeds', [8827]], ['SucceedsEqual', [10928]], ['SucceedsSlantEqual', [8829]], ['SucceedsTilde', [8831]], ['succeq', [10928]], ['succnapprox', [10938]], ['succneqq', [10934]], ['succnsim', [8937]], ['succsim', [8831]], ['SuchThat', [8715]], ['sum', [8721]], ['Sum', [8721]], ['sung', [9834]], ['sup1', [185]], ['sup2', [178]], ['sup3', [179]], ['sup', [8835]], ['Sup', [8913]], ['supdot', [10942]], ['supdsub', [10968]], ['supE', [10950]], ['supe', [8839]], ['supedot', [10948]], ['Superset', [8835]], ['SupersetEqual', [8839]], ['suphsol', [10185]], ['suphsub', [10967]], ['suplarr', [10619]], ['supmult', [10946]], ['supnE', [10956]], ['supne', [8843]], ['supplus', [10944]], ['supset', [8835]], ['Supset', [8913]], ['supseteq', [8839]], ['supseteqq', [10950]], ['supsetneq', [8843]], ['supsetneqq', [10956]], ['supsim', [10952]], ['supsub', [10964]], ['supsup', [10966]], ['swarhk', [10534]], ['swarr', [8601]], ['swArr', [8665]], ['swarrow', [8601]], ['swnwar', [10538]], ['szlig', [223]], ['Tab', [9]], ['target', [8982]], ['Tau', [932]], ['tau', [964]], ['tbrk', [9140]], ['Tcaron', [356]], ['tcaron', [357]], ['Tcedil', [354]], ['tcedil', [355]], ['Tcy', [1058]], ['tcy', [1090]], ['tdot', [8411]], ['telrec', [8981]], ['Tfr', [120087]], ['tfr', [120113]], ['there4', [8756]], ['therefore', [8756]], ['Therefore', [8756]], ['Theta', [920]], ['theta', [952]], ['thetasym', [977]], ['thetav', [977]], ['thickapprox', [8776]], ['thicksim', [8764]], ['ThickSpace', [8287, 8202]], ['ThinSpace', [8201]], ['thinsp', [8201]], ['thkap', [8776]], ['thksim', [8764]], ['THORN', [222]], ['thorn', [254]], ['tilde', [732]], ['Tilde', [8764]], ['TildeEqual', [8771]], ['TildeFullEqual', [8773]], ['TildeTilde', [8776]], ['timesbar', [10801]], ['timesb', [8864]], ['times', [215]], ['timesd', [10800]], ['tint', [8749]], ['toea', [10536]], ['topbot', [9014]], ['topcir', [10993]], ['top', [8868]], ['Topf', [120139]], ['topf', [120165]], ['topfork', [10970]], ['tosa', [10537]], ['tprime', [8244]], ['trade', [8482]], ['TRADE', [8482]], ['triangle', [9653]], ['triangledown', [9663]], ['triangleleft', [9667]], ['trianglelefteq', [8884]], ['triangleq', [8796]], ['triangleright', [9657]], ['trianglerighteq', [8885]], ['tridot', [9708]], ['trie', [8796]], ['triminus', [10810]], ['TripleDot', [8411]], ['triplus', [10809]], ['trisb', [10701]], ['tritime', [10811]], ['trpezium', [9186]], ['Tscr', [119983]], ['tscr', [120009]], ['TScy', [1062]], ['tscy', [1094]], ['TSHcy', [1035]], ['tshcy', [1115]], ['Tstrok', [358]], ['tstrok', [359]], ['twixt', [8812]], ['twoheadleftarrow', [8606]], ['twoheadrightarrow', [8608]], ['Uacute', [218]], ['uacute', [250]], ['uarr', [8593]], ['Uarr', [8607]], ['uArr', [8657]], ['Uarrocir', [10569]], ['Ubrcy', [1038]], ['ubrcy', [1118]], ['Ubreve', [364]], ['ubreve', [365]], ['Ucirc', [219]], ['ucirc', [251]], ['Ucy', [1059]], ['ucy', [1091]], ['udarr', [8645]], ['Udblac', [368]], ['udblac', [369]], ['udhar', [10606]], ['ufisht', [10622]], ['Ufr', [120088]], ['ufr', [120114]], ['Ugrave', [217]], ['ugrave', [249]], ['uHar', [10595]], ['uharl', [8639]], ['uharr', [8638]], ['uhblk', [9600]], ['ulcorn', [8988]], ['ulcorner', [8988]], ['ulcrop', [8975]], ['ultri', [9720]], ['Umacr', [362]], ['umacr', [363]], ['uml', [168]], ['UnderBar', [95]], ['UnderBrace', [9183]], ['UnderBracket', [9141]], ['UnderParenthesis', [9181]], ['Union', [8899]], ['UnionPlus', [8846]], ['Uogon', [370]], ['uogon', [371]], ['Uopf', [120140]], ['uopf', [120166]], ['UpArrowBar', [10514]], ['uparrow', [8593]], ['UpArrow', [8593]], ['Uparrow', [8657]], ['UpArrowDownArrow', [8645]], ['updownarrow', [8597]], ['UpDownArrow', [8597]], ['Updownarrow', [8661]], ['UpEquilibrium', [10606]], ['upharpoonleft', [8639]], ['upharpoonright', [8638]], ['uplus', [8846]], ['UpperLeftArrow', [8598]], ['UpperRightArrow', [8599]], ['upsi', [965]], ['Upsi', [978]], ['upsih', [978]], ['Upsilon', [933]], ['upsilon', [965]], ['UpTeeArrow', [8613]], ['UpTee', [8869]], ['upuparrows', [8648]], ['urcorn', [8989]], ['urcorner', [8989]], ['urcrop', [8974]], ['Uring', [366]], ['uring', [367]], ['urtri', [9721]], ['Uscr', [119984]], ['uscr', [120010]], ['utdot', [8944]], ['Utilde', [360]], ['utilde', [361]], ['utri', [9653]], ['utrif', [9652]], ['uuarr', [8648]], ['Uuml', [220]], ['uuml', [252]], ['uwangle', [10663]], ['vangrt', [10652]], ['varepsilon', [1013]], ['varkappa', [1008]], ['varnothing', [8709]], ['varphi', [981]], ['varpi', [982]], ['varpropto', [8733]], ['varr', [8597]], ['vArr', [8661]], ['varrho', [1009]], ['varsigma', [962]], ['varsubsetneq', [8842, 65024]], ['varsubsetneqq', [10955, 65024]], ['varsupsetneq', [8843, 65024]], ['varsupsetneqq', [10956, 65024]], ['vartheta', [977]], ['vartriangleleft', [8882]], ['vartriangleright', [8883]], ['vBar', [10984]], ['Vbar', [10987]], ['vBarv', [10985]], ['Vcy', [1042]], ['vcy', [1074]], ['vdash', [8866]], ['vDash', [8872]], ['Vdash', [8873]], ['VDash', [8875]], ['Vdashl', [10982]], ['veebar', [8891]], ['vee', [8744]], ['Vee', [8897]], ['veeeq', [8794]], ['vellip', [8942]], ['verbar', [124]], ['Verbar', [8214]], ['vert', [124]], ['Vert', [8214]], ['VerticalBar', [8739]], ['VerticalLine', [124]], ['VerticalSeparator', [10072]], ['VerticalTilde', [8768]], ['VeryThinSpace', [8202]], ['Vfr', [120089]], ['vfr', [120115]], ['vltri', [8882]], ['vnsub', [8834, 8402]], ['vnsup', [8835, 8402]], ['Vopf', [120141]], ['vopf', [120167]], ['vprop', [8733]], ['vrtri', [8883]], ['Vscr', [119985]], ['vscr', [120011]], ['vsubnE', [10955, 65024]], ['vsubne', [8842, 65024]], ['vsupnE', [10956, 65024]], ['vsupne', [8843, 65024]], ['Vvdash', [8874]], ['vzigzag', [10650]], ['Wcirc', [372]], ['wcirc', [373]], ['wedbar', [10847]], ['wedge', [8743]], ['Wedge', [8896]], ['wedgeq', [8793]], ['weierp', [8472]], ['Wfr', [120090]], ['wfr', [120116]], ['Wopf', [120142]], ['wopf', [120168]], ['wp', [8472]], ['wr', [8768]], ['wreath', [8768]], ['Wscr', [119986]], ['wscr', [120012]], ['xcap', [8898]], ['xcirc', [9711]], ['xcup', [8899]], ['xdtri', [9661]], ['Xfr', [120091]], ['xfr', [120117]], ['xharr', [10231]], ['xhArr', [10234]], ['Xi', [926]], ['xi', [958]], ['xlarr', [10229]], ['xlArr', [10232]], ['xmap', [10236]], ['xnis', [8955]], ['xodot', [10752]], ['Xopf', [120143]], ['xopf', [120169]], ['xoplus', [10753]], ['xotime', [10754]], ['xrarr', [10230]], ['xrArr', [10233]], ['Xscr', [119987]], ['xscr', [120013]], ['xsqcup', [10758]], ['xuplus', [10756]], ['xutri', [9651]], ['xvee', [8897]], ['xwedge', [8896]], ['Yacute', [221]], ['yacute', [253]], ['YAcy', [1071]], ['yacy', [1103]], ['Ycirc', [374]], ['ycirc', [375]], ['Ycy', [1067]], ['ycy', [1099]], ['yen', [165]], ['Yfr', [120092]], ['yfr', [120118]], ['YIcy', [1031]], ['yicy', [1111]], ['Yopf', [120144]], ['yopf', [120170]], ['Yscr', [119988]], ['yscr', [120014]], ['YUcy', [1070]], ['yucy', [1102]], ['yuml', [255]], ['Yuml', [376]], ['Zacute', [377]], ['zacute', [378]], ['Zcaron', [381]], ['zcaron', [382]], ['Zcy', [1047]], ['zcy', [1079]], ['Zdot', [379]], ['zdot', [380]], ['zeetrf', [8488]], ['ZeroWidthSpace', [8203]], ['Zeta', [918]], ['zeta', [950]], ['zfr', [120119]], ['Zfr', [8488]], ['ZHcy', [1046]], ['zhcy', [1078]], ['zigrarr', [8669]], ['zopf', [120171]], ['Zopf', [8484]], ['Zscr', [119989]], ['zscr', [120015]], ['zwj', [8205]], ['zwnj', [8204]]];\n\nvar alphaIndex = {};\nvar charIndex = {};\n\ncreateIndexes(alphaIndex, charIndex);\n\n/**\n * @constructor\n */\nfunction Html5Entities() {}\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml5Entities.prototype.decode = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    return str.replace(/&(#?[\\w\\d]+);?/g, function(s, entity) {\n        var chr;\n        if (entity.charAt(0) === \"#\") {\n            var code = entity.charAt(1) === 'x' ?\n                parseInt(entity.substr(2).toLowerCase(), 16) :\n                parseInt(entity.substr(1));\n\n            if (!(isNaN(code) || code < -32768 || code > 65535)) {\n                chr = String.fromCharCode(code);\n            }\n        } else {\n            chr = alphaIndex[entity];\n        }\n        return chr || s;\n    });\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\n Html5Entities.decode = function(str) {\n    return new Html5Entities().decode(str);\n };\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml5Entities.prototype.encode = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    var strLength = str.length;\n    var result = '';\n    var i = 0;\n    while (i < strLength) {\n        var charInfo = charIndex[str.charCodeAt(i)];\n        if (charInfo) {\n            var alpha = charInfo[str.charCodeAt(i + 1)];\n            if (alpha) {\n                i++;\n            } else {\n                alpha = charInfo[''];\n            }\n            if (alpha) {\n                result += \"&\" + alpha + \";\";\n                i++;\n                continue;\n            }\n        }\n        result += str.charAt(i);\n        i++;\n    }\n    return result;\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\n Html5Entities.encode = function(str) {\n    return new Html5Entities().encode(str);\n };\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml5Entities.prototype.encodeNonUTF = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    var strLength = str.length;\n    var result = '';\n    var i = 0;\n    while (i < strLength) {\n        var c = str.charCodeAt(i);\n        var charInfo = charIndex[c];\n        if (charInfo) {\n            var alpha = charInfo[str.charCodeAt(i + 1)];\n            if (alpha) {\n                i++;\n            } else {\n                alpha = charInfo[''];\n            }\n            if (alpha) {\n                result += \"&\" + alpha + \";\";\n                i++;\n                continue;\n            }\n        }\n        if (c < 32 || c > 126) {\n            result += '&#' + c + ';';\n        } else {\n            result += str.charAt(i);\n        }\n        i++;\n    }\n    return result;\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\n Html5Entities.encodeNonUTF = function(str) {\n    return new Html5Entities().encodeNonUTF(str);\n };\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml5Entities.prototype.encodeNonASCII = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    var strLength = str.length;\n    var result = '';\n    var i = 0;\n    while (i < strLength) {\n        var c = str.charCodeAt(i);\n        if (c <= 255) {\n            result += str[i++];\n            continue;\n        }\n        result += '&#' + c + ';';\n        i++\n    }\n    return result;\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\n Html5Entities.encodeNonASCII = function(str) {\n    return new Html5Entities().encodeNonASCII(str);\n };\n\n/**\n * @param {Object} alphaIndex Passed by reference.\n * @param {Object} charIndex Passed by reference.\n */\nfunction createIndexes(alphaIndex, charIndex) {\n    var i = ENTITIES.length;\n    var _results = [];\n    while (i--) {\n        var e = ENTITIES[i];\n        var alpha = e[0];\n        var chars = e[1];\n        var chr = chars[0];\n        var addChar = (chr < 32 || chr > 126) || chr === 62 || chr === 60 || chr === 38 || chr === 34 || chr === 39;\n        var charInfo;\n        if (addChar) {\n            charInfo = charIndex[chr] = charIndex[chr] || {};\n        }\n        if (chars[1]) {\n            var chr2 = chars[1];\n            alphaIndex[alpha] = String.fromCharCode(chr) + String.fromCharCode(chr2);\n            _results.push(addChar && (charInfo[chr2] = alpha));\n        } else {\n            alphaIndex[alpha] = String.fromCharCode(chr);\n            _results.push(addChar && (charInfo[''] = alpha));\n        }\n    }\n}\n\nmodule.exports = Html5Entities;\n","/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","var HTML_ALPHA = ['apos', 'nbsp', 'iexcl', 'cent', 'pound', 'curren', 'yen', 'brvbar', 'sect', 'uml', 'copy', 'ordf', 'laquo', 'not', 'shy', 'reg', 'macr', 'deg', 'plusmn', 'sup2', 'sup3', 'acute', 'micro', 'para', 'middot', 'cedil', 'sup1', 'ordm', 'raquo', 'frac14', 'frac12', 'frac34', 'iquest', 'Agrave', 'Aacute', 'Acirc', 'Atilde', 'Auml', 'Aring', 'Aelig', 'Ccedil', 'Egrave', 'Eacute', 'Ecirc', 'Euml', 'Igrave', 'Iacute', 'Icirc', 'Iuml', 'ETH', 'Ntilde', 'Ograve', 'Oacute', 'Ocirc', 'Otilde', 'Ouml', 'times', 'Oslash', 'Ugrave', 'Uacute', 'Ucirc', 'Uuml', 'Yacute', 'THORN', 'szlig', 'agrave', 'aacute', 'acirc', 'atilde', 'auml', 'aring', 'aelig', 'ccedil', 'egrave', 'eacute', 'ecirc', 'euml', 'igrave', 'iacute', 'icirc', 'iuml', 'eth', 'ntilde', 'ograve', 'oacute', 'ocirc', 'otilde', 'ouml', 'divide', 'oslash', 'ugrave', 'uacute', 'ucirc', 'uuml', 'yacute', 'thorn', 'yuml', 'quot', 'amp', 'lt', 'gt', 'OElig', 'oelig', 'Scaron', 'scaron', 'Yuml', 'circ', 'tilde', 'ensp', 'emsp', 'thinsp', 'zwnj', 'zwj', 'lrm', 'rlm', 'ndash', 'mdash', 'lsquo', 'rsquo', 'sbquo', 'ldquo', 'rdquo', 'bdquo', 'dagger', 'Dagger', 'permil', 'lsaquo', 'rsaquo', 'euro', 'fnof', 'Alpha', 'Beta', 'Gamma', 'Delta', 'Epsilon', 'Zeta', 'Eta', 'Theta', 'Iota', 'Kappa', 'Lambda', 'Mu', 'Nu', 'Xi', 'Omicron', 'Pi', 'Rho', 'Sigma', 'Tau', 'Upsilon', 'Phi', 'Chi', 'Psi', 'Omega', 'alpha', 'beta', 'gamma', 'delta', 'epsilon', 'zeta', 'eta', 'theta', 'iota', 'kappa', 'lambda', 'mu', 'nu', 'xi', 'omicron', 'pi', 'rho', 'sigmaf', 'sigma', 'tau', 'upsilon', 'phi', 'chi', 'psi', 'omega', 'thetasym', 'upsih', 'piv', 'bull', 'hellip', 'prime', 'Prime', 'oline', 'frasl', 'weierp', 'image', 'real', 'trade', 'alefsym', 'larr', 'uarr', 'rarr', 'darr', 'harr', 'crarr', 'lArr', 'uArr', 'rArr', 'dArr', 'hArr', 'forall', 'part', 'exist', 'empty', 'nabla', 'isin', 'notin', 'ni', 'prod', 'sum', 'minus', 'lowast', 'radic', 'prop', 'infin', 'ang', 'and', 'or', 'cap', 'cup', 'int', 'there4', 'sim', 'cong', 'asymp', 'ne', 'equiv', 'le', 'ge', 'sub', 'sup', 'nsub', 'sube', 'supe', 'oplus', 'otimes', 'perp', 'sdot', 'lceil', 'rceil', 'lfloor', 'rfloor', 'lang', 'rang', 'loz', 'spades', 'clubs', 'hearts', 'diams'];\nvar HTML_CODES = [39, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 34, 38, 60, 62, 338, 339, 352, 353, 376, 710, 732, 8194, 8195, 8201, 8204, 8205, 8206, 8207, 8211, 8212, 8216, 8217, 8218, 8220, 8221, 8222, 8224, 8225, 8240, 8249, 8250, 8364, 402, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 931, 932, 933, 934, 935, 936, 937, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 977, 978, 982, 8226, 8230, 8242, 8243, 8254, 8260, 8472, 8465, 8476, 8482, 8501, 8592, 8593, 8594, 8595, 8596, 8629, 8656, 8657, 8658, 8659, 8660, 8704, 8706, 8707, 8709, 8711, 8712, 8713, 8715, 8719, 8721, 8722, 8727, 8730, 8733, 8734, 8736, 8743, 8744, 8745, 8746, 8747, 8756, 8764, 8773, 8776, 8800, 8801, 8804, 8805, 8834, 8835, 8836, 8838, 8839, 8853, 8855, 8869, 8901, 8968, 8969, 8970, 8971, 9001, 9002, 9674, 9824, 9827, 9829, 9830];\n\nvar alphaIndex = {};\nvar numIndex = {};\n\nvar i = 0;\nvar length = HTML_ALPHA.length;\nwhile (i < length) {\n    var a = HTML_ALPHA[i];\n    var c = HTML_CODES[i];\n    alphaIndex[a] = String.fromCharCode(c);\n    numIndex[c] = a;\n    i++;\n}\n\n/**\n * @constructor\n */\nfunction Html4Entities() {}\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.prototype.decode = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    return str.replace(/&(#?[\\w\\d]+);?/g, function(s, entity) {\n        var chr;\n        if (entity.charAt(0) === \"#\") {\n            var code = entity.charAt(1).toLowerCase() === 'x' ?\n                parseInt(entity.substr(2), 16) :\n                parseInt(entity.substr(1));\n\n            if (!(isNaN(code) || code < -32768 || code > 65535)) {\n                chr = String.fromCharCode(code);\n            }\n        } else {\n            chr = alphaIndex[entity];\n        }\n        return chr || s;\n    });\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.decode = function(str) {\n    return new Html4Entities().decode(str);\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.prototype.encode = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    var strLength = str.length;\n    var result = '';\n    var i = 0;\n    while (i < strLength) {\n        var alpha = numIndex[str.charCodeAt(i)];\n        result += alpha ? \"&\" + alpha + \";\" : str.charAt(i);\n        i++;\n    }\n    return result;\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.encode = function(str) {\n    return new Html4Entities().encode(str);\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.prototype.encodeNonUTF = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    var strLength = str.length;\n    var result = '';\n    var i = 0;\n    while (i < strLength) {\n        var cc = str.charCodeAt(i);\n        var alpha = numIndex[cc];\n        if (alpha) {\n            result += \"&\" + alpha + \";\";\n        } else if (cc < 32 || cc > 126) {\n            result += \"&#\" + cc + \";\";\n        } else {\n            result += str.charAt(i);\n        }\n        i++;\n    }\n    return result;\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.encodeNonUTF = function(str) {\n    return new Html4Entities().encodeNonUTF(str);\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.prototype.encodeNonASCII = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    var strLength = str.length;\n    var result = '';\n    var i = 0;\n    while (i < strLength) {\n        var c = str.charCodeAt(i);\n        if (c <= 255) {\n            result += str[i++];\n            continue;\n        }\n        result += '&#' + c + ';';\n        i++;\n    }\n    return result;\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.encodeNonASCII = function(str) {\n    return new Html4Entities().encodeNonASCII(str);\n};\n\nmodule.exports = Html4Entities;\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","const Writable = require('stream').Writable;\n\n\n/**\n * A very simple m3u8 playlist file parser that detects tags and segments.\n *\n * @extends WritableStream\n * @constructor\n */\nmodule.exports = class m3u8Parser extends Writable {\n  constructor() {\n    super();\n    this._lastLine = '';\n    this._seq = 0;\n    this._nextItemDuration = null;\n    this.on('finish', () => {\n      this._parseLine(this._lastLine);\n      this.emit('end');\n    });\n  }\n\n  _parseLine(line) {\n    let match = line.match(/^#(EXT[A-Z0-9-]+)(?::(.*))?/);\n    if (match) {\n      // This is a tag.\n      const tag = match[1];\n      const value = match[2] || null;\n      switch (tag) {\n        case 'EXT-X-PROGRAM-DATE-TIME':\n          this.emit('starttime', new Date(value).getTime());\n          break;\n        case 'EXT-X-MEDIA-SEQUENCE':\n          this._seq = parseInt(value);\n          break;\n        case 'EXTINF':\n          this._nextItemDuration =\n            Math.round(parseFloat(value.split(',')[0]) * 1000);\n          break;\n        case 'EXT-X-ENDLIST':\n          this.emit('endlist');\n          break;\n      }\n\n    } else if (!/^#/.test(line) && line.trim()) {\n      // This is a segment\n      this.emit('item', {\n        url: line.trim(),\n        seq: this._seq++,\n        duration: this._nextItemDuration,\n      });\n    }\n  }\n\n  _write(chunk, encoding, callback) {\n    let lines = chunk.toString('utf8').split('\\n');\n    if (this._lastLine) { lines[0] = this._lastLine + lines[0]; }\n    lines.forEach((line, i) => {\n      if (i < lines.length - 1) {\n        this._parseLine(line);\n      } else {\n        // Save the last line in case it has been broken up.\n        this._lastLine = line;\n      }\n    });\n    callback();\n  }\n};\n","var http = require('http')\nvar url = require('url')\n\nvar https = module.exports\n\nfor (var key in http) {\n  if (http.hasOwnProperty(key)) https[key] = http[key]\n}\n\nhttps.request = function (params, cb) {\n  params = validateParams(params)\n  return http.request.call(this, params, cb)\n}\n\nhttps.get = function (params, cb) {\n  params = validateParams(params)\n  return http.get.call(this, params, cb)\n}\n\nfunction validateParams (params) {\n  if (typeof params === 'string') {\n    params = url.parse(params)\n  }\n  if (!params.protocol) {\n    params.protocol = 'https:'\n  }\n  if (params.protocol !== 'https:') {\n    throw new Error('Protocol \"' + params.protocol + '\" not supported. Expected \"https:\"')\n  }\n  return params\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) {\n    return this.emit('error', new Error('write callback called multiple times'));\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n\n  cb(er);\n\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function') {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('_transform() is not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  var _this2 = this;\n\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n    _this2.emit('close');\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}","module.exports = require('./lib/_stream_writable.js');\n",";(function (sax) { // wrapper for non-node envs\n  sax.parser = function (strict, opt) { return new SAXParser(strict, opt) }\n  sax.SAXParser = SAXParser\n  sax.SAXStream = SAXStream\n  sax.createStream = createStream\n\n  // When we pass the MAX_BUFFER_LENGTH position, start checking for buffer overruns.\n  // When we check, schedule the next check for MAX_BUFFER_LENGTH - (max(buffer lengths)),\n  // since that's the earliest that a buffer overrun could occur.  This way, checks are\n  // as rare as required, but as often as necessary to ensure never crossing this bound.\n  // Furthermore, buffers are only tested at most once per write(), so passing a very\n  // large string into write() might have undesirable effects, but this is manageable by\n  // the caller, so it is assumed to be safe.  Thus, a call to write() may, in the extreme\n  // edge case, result in creating at most one complete copy of the string passed in.\n  // Set to Infinity to have unlimited buffers.\n  sax.MAX_BUFFER_LENGTH = 64 * 1024\n\n  var buffers = [\n    'comment', 'sgmlDecl', 'textNode', 'tagName', 'doctype',\n    'procInstName', 'procInstBody', 'entity', 'attribName',\n    'attribValue', 'cdata', 'script'\n  ]\n\n  sax.EVENTS = [\n    'text',\n    'processinginstruction',\n    'sgmldeclaration',\n    'doctype',\n    'comment',\n    'opentagstart',\n    'attribute',\n    'opentag',\n    'closetag',\n    'opencdata',\n    'cdata',\n    'closecdata',\n    'error',\n    'end',\n    'ready',\n    'script',\n    'opennamespace',\n    'closenamespace'\n  ]\n\n  function SAXParser (strict, opt) {\n    if (!(this instanceof SAXParser)) {\n      return new SAXParser(strict, opt)\n    }\n\n    var parser = this\n    clearBuffers(parser)\n    parser.q = parser.c = ''\n    parser.bufferCheckPosition = sax.MAX_BUFFER_LENGTH\n    parser.opt = opt || {}\n    parser.opt.lowercase = parser.opt.lowercase || parser.opt.lowercasetags\n    parser.looseCase = parser.opt.lowercase ? 'toLowerCase' : 'toUpperCase'\n    parser.tags = []\n    parser.closed = parser.closedRoot = parser.sawRoot = false\n    parser.tag = parser.error = null\n    parser.strict = !!strict\n    parser.noscript = !!(strict || parser.opt.noscript)\n    parser.state = S.BEGIN\n    parser.strictEntities = parser.opt.strictEntities\n    parser.ENTITIES = parser.strictEntities ? Object.create(sax.XML_ENTITIES) : Object.create(sax.ENTITIES)\n    parser.attribList = []\n\n    // namespaces form a prototype chain.\n    // it always points at the current tag,\n    // which protos to its parent tag.\n    if (parser.opt.xmlns) {\n      parser.ns = Object.create(rootNS)\n    }\n\n    // mostly just for error reporting\n    parser.trackPosition = parser.opt.position !== false\n    if (parser.trackPosition) {\n      parser.position = parser.line = parser.column = 0\n    }\n    emit(parser, 'onready')\n  }\n\n  if (!Object.create) {\n    Object.create = function (o) {\n      function F () {}\n      F.prototype = o\n      var newf = new F()\n      return newf\n    }\n  }\n\n  if (!Object.keys) {\n    Object.keys = function (o) {\n      var a = []\n      for (var i in o) if (o.hasOwnProperty(i)) a.push(i)\n      return a\n    }\n  }\n\n  function checkBufferLength (parser) {\n    var maxAllowed = Math.max(sax.MAX_BUFFER_LENGTH, 10)\n    var maxActual = 0\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      var len = parser[buffers[i]].length\n      if (len > maxAllowed) {\n        // Text/cdata nodes can get big, and since they're buffered,\n        // we can get here under normal conditions.\n        // Avoid issues by emitting the text node now,\n        // so at least it won't get any bigger.\n        switch (buffers[i]) {\n          case 'textNode':\n            closeText(parser)\n            break\n\n          case 'cdata':\n            emitNode(parser, 'oncdata', parser.cdata)\n            parser.cdata = ''\n            break\n\n          case 'script':\n            emitNode(parser, 'onscript', parser.script)\n            parser.script = ''\n            break\n\n          default:\n            error(parser, 'Max buffer length exceeded: ' + buffers[i])\n        }\n      }\n      maxActual = Math.max(maxActual, len)\n    }\n    // schedule the next check for the earliest possible buffer overrun.\n    var m = sax.MAX_BUFFER_LENGTH - maxActual\n    parser.bufferCheckPosition = m + parser.position\n  }\n\n  function clearBuffers (parser) {\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      parser[buffers[i]] = ''\n    }\n  }\n\n  function flushBuffers (parser) {\n    closeText(parser)\n    if (parser.cdata !== '') {\n      emitNode(parser, 'oncdata', parser.cdata)\n      parser.cdata = ''\n    }\n    if (parser.script !== '') {\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n  }\n\n  SAXParser.prototype = {\n    end: function () { end(this) },\n    write: write,\n    resume: function () { this.error = null; return this },\n    close: function () { return this.write(null) },\n    flush: function () { flushBuffers(this) }\n  }\n\n  var Stream\n  try {\n    Stream = require('stream').Stream\n  } catch (ex) {\n    Stream = function () {}\n  }\n\n  var streamWraps = sax.EVENTS.filter(function (ev) {\n    return ev !== 'error' && ev !== 'end'\n  })\n\n  function createStream (strict, opt) {\n    return new SAXStream(strict, opt)\n  }\n\n  function SAXStream (strict, opt) {\n    if (!(this instanceof SAXStream)) {\n      return new SAXStream(strict, opt)\n    }\n\n    Stream.apply(this)\n\n    this._parser = new SAXParser(strict, opt)\n    this.writable = true\n    this.readable = true\n\n    var me = this\n\n    this._parser.onend = function () {\n      me.emit('end')\n    }\n\n    this._parser.onerror = function (er) {\n      me.emit('error', er)\n\n      // if didn't throw, then means error was handled.\n      // go ahead and clear error, so we can write again.\n      me._parser.error = null\n    }\n\n    this._decoder = null\n\n    streamWraps.forEach(function (ev) {\n      Object.defineProperty(me, 'on' + ev, {\n        get: function () {\n          return me._parser['on' + ev]\n        },\n        set: function (h) {\n          if (!h) {\n            me.removeAllListeners(ev)\n            me._parser['on' + ev] = h\n            return h\n          }\n          me.on(ev, h)\n        },\n        enumerable: true,\n        configurable: false\n      })\n    })\n  }\n\n  SAXStream.prototype = Object.create(Stream.prototype, {\n    constructor: {\n      value: SAXStream\n    }\n  })\n\n  SAXStream.prototype.write = function (data) {\n    if (typeof Buffer === 'function' &&\n      typeof Buffer.isBuffer === 'function' &&\n      Buffer.isBuffer(data)) {\n      if (!this._decoder) {\n        var SD = require('string_decoder').StringDecoder\n        this._decoder = new SD('utf8')\n      }\n      data = this._decoder.write(data)\n    }\n\n    this._parser.write(data.toString())\n    this.emit('data', data)\n    return true\n  }\n\n  SAXStream.prototype.end = function (chunk) {\n    if (chunk && chunk.length) {\n      this.write(chunk)\n    }\n    this._parser.end()\n    return true\n  }\n\n  SAXStream.prototype.on = function (ev, handler) {\n    var me = this\n    if (!me._parser['on' + ev] && streamWraps.indexOf(ev) !== -1) {\n      me._parser['on' + ev] = function () {\n        var args = arguments.length === 1 ? [arguments[0]] : Array.apply(null, arguments)\n        args.splice(0, 0, ev)\n        me.emit.apply(me, args)\n      }\n    }\n\n    return Stream.prototype.on.call(me, ev, handler)\n  }\n\n  // this really needs to be replaced with character classes.\n  // XML allows all manner of ridiculous numbers and digits.\n  var CDATA = '[CDATA['\n  var DOCTYPE = 'DOCTYPE'\n  var XML_NAMESPACE = 'http://www.w3.org/XML/1998/namespace'\n  var XMLNS_NAMESPACE = 'http://www.w3.org/2000/xmlns/'\n  var rootNS = { xml: XML_NAMESPACE, xmlns: XMLNS_NAMESPACE }\n\n  // http://www.w3.org/TR/REC-xml/#NT-NameStartChar\n  // This implementation works on strings, a single character at a time\n  // as such, it cannot ever support astral-plane characters (10000-EFFFF)\n  // without a significant breaking change to either this  parser, or the\n  // JavaScript language.  Implementation of an emoji-capable xml parser\n  // is left as an exercise for the reader.\n  var nameStart = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n\n  var nameBody = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\n\n  var entityStart = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n  var entityBody = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\n\n  function isWhitespace (c) {\n    return c === ' ' || c === '\\n' || c === '\\r' || c === '\\t'\n  }\n\n  function isQuote (c) {\n    return c === '\"' || c === '\\''\n  }\n\n  function isAttribEnd (c) {\n    return c === '>' || isWhitespace(c)\n  }\n\n  function isMatch (regex, c) {\n    return regex.test(c)\n  }\n\n  function notMatch (regex, c) {\n    return !isMatch(regex, c)\n  }\n\n  var S = 0\n  sax.STATE = {\n    BEGIN: S++, // leading byte order mark or whitespace\n    BEGIN_WHITESPACE: S++, // leading whitespace\n    TEXT: S++, // general stuff\n    TEXT_ENTITY: S++, // &amp and such.\n    OPEN_WAKA: S++, // <\n    SGML_DECL: S++, // <!BLARG\n    SGML_DECL_QUOTED: S++, // <!BLARG foo \"bar\n    DOCTYPE: S++, // <!DOCTYPE\n    DOCTYPE_QUOTED: S++, // <!DOCTYPE \"//blah\n    DOCTYPE_DTD: S++, // <!DOCTYPE \"//blah\" [ ...\n    DOCTYPE_DTD_QUOTED: S++, // <!DOCTYPE \"//blah\" [ \"foo\n    COMMENT_STARTING: S++, // <!-\n    COMMENT: S++, // <!--\n    COMMENT_ENDING: S++, // <!-- blah -\n    COMMENT_ENDED: S++, // <!-- blah --\n    CDATA: S++, // <![CDATA[ something\n    CDATA_ENDING: S++, // ]\n    CDATA_ENDING_2: S++, // ]]\n    PROC_INST: S++, // <?hi\n    PROC_INST_BODY: S++, // <?hi there\n    PROC_INST_ENDING: S++, // <?hi \"there\" ?\n    OPEN_TAG: S++, // <strong\n    OPEN_TAG_SLASH: S++, // <strong /\n    ATTRIB: S++, // <a\n    ATTRIB_NAME: S++, // <a foo\n    ATTRIB_NAME_SAW_WHITE: S++, // <a foo _\n    ATTRIB_VALUE: S++, // <a foo=\n    ATTRIB_VALUE_QUOTED: S++, // <a foo=\"bar\n    ATTRIB_VALUE_CLOSED: S++, // <a foo=\"bar\"\n    ATTRIB_VALUE_UNQUOTED: S++, // <a foo=bar\n    ATTRIB_VALUE_ENTITY_Q: S++, // <foo bar=\"&quot;\"\n    ATTRIB_VALUE_ENTITY_U: S++, // <foo bar=&quot\n    CLOSE_TAG: S++, // </a\n    CLOSE_TAG_SAW_WHITE: S++, // </a   >\n    SCRIPT: S++, // <script> ...\n    SCRIPT_ENDING: S++ // <script> ... <\n  }\n\n  sax.XML_ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\"\n  }\n\n  sax.ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\",\n    'AElig': 198,\n    'Aacute': 193,\n    'Acirc': 194,\n    'Agrave': 192,\n    'Aring': 197,\n    'Atilde': 195,\n    'Auml': 196,\n    'Ccedil': 199,\n    'ETH': 208,\n    'Eacute': 201,\n    'Ecirc': 202,\n    'Egrave': 200,\n    'Euml': 203,\n    'Iacute': 205,\n    'Icirc': 206,\n    'Igrave': 204,\n    'Iuml': 207,\n    'Ntilde': 209,\n    'Oacute': 211,\n    'Ocirc': 212,\n    'Ograve': 210,\n    'Oslash': 216,\n    'Otilde': 213,\n    'Ouml': 214,\n    'THORN': 222,\n    'Uacute': 218,\n    'Ucirc': 219,\n    'Ugrave': 217,\n    'Uuml': 220,\n    'Yacute': 221,\n    'aacute': 225,\n    'acirc': 226,\n    'aelig': 230,\n    'agrave': 224,\n    'aring': 229,\n    'atilde': 227,\n    'auml': 228,\n    'ccedil': 231,\n    'eacute': 233,\n    'ecirc': 234,\n    'egrave': 232,\n    'eth': 240,\n    'euml': 235,\n    'iacute': 237,\n    'icirc': 238,\n    'igrave': 236,\n    'iuml': 239,\n    'ntilde': 241,\n    'oacute': 243,\n    'ocirc': 244,\n    'ograve': 242,\n    'oslash': 248,\n    'otilde': 245,\n    'ouml': 246,\n    'szlig': 223,\n    'thorn': 254,\n    'uacute': 250,\n    'ucirc': 251,\n    'ugrave': 249,\n    'uuml': 252,\n    'yacute': 253,\n    'yuml': 255,\n    'copy': 169,\n    'reg': 174,\n    'nbsp': 160,\n    'iexcl': 161,\n    'cent': 162,\n    'pound': 163,\n    'curren': 164,\n    'yen': 165,\n    'brvbar': 166,\n    'sect': 167,\n    'uml': 168,\n    'ordf': 170,\n    'laquo': 171,\n    'not': 172,\n    'shy': 173,\n    'macr': 175,\n    'deg': 176,\n    'plusmn': 177,\n    'sup1': 185,\n    'sup2': 178,\n    'sup3': 179,\n    'acute': 180,\n    'micro': 181,\n    'para': 182,\n    'middot': 183,\n    'cedil': 184,\n    'ordm': 186,\n    'raquo': 187,\n    'frac14': 188,\n    'frac12': 189,\n    'frac34': 190,\n    'iquest': 191,\n    'times': 215,\n    'divide': 247,\n    'OElig': 338,\n    'oelig': 339,\n    'Scaron': 352,\n    'scaron': 353,\n    'Yuml': 376,\n    'fnof': 402,\n    'circ': 710,\n    'tilde': 732,\n    'Alpha': 913,\n    'Beta': 914,\n    'Gamma': 915,\n    'Delta': 916,\n    'Epsilon': 917,\n    'Zeta': 918,\n    'Eta': 919,\n    'Theta': 920,\n    'Iota': 921,\n    'Kappa': 922,\n    'Lambda': 923,\n    'Mu': 924,\n    'Nu': 925,\n    'Xi': 926,\n    'Omicron': 927,\n    'Pi': 928,\n    'Rho': 929,\n    'Sigma': 931,\n    'Tau': 932,\n    'Upsilon': 933,\n    'Phi': 934,\n    'Chi': 935,\n    'Psi': 936,\n    'Omega': 937,\n    'alpha': 945,\n    'beta': 946,\n    'gamma': 947,\n    'delta': 948,\n    'epsilon': 949,\n    'zeta': 950,\n    'eta': 951,\n    'theta': 952,\n    'iota': 953,\n    'kappa': 954,\n    'lambda': 955,\n    'mu': 956,\n    'nu': 957,\n    'xi': 958,\n    'omicron': 959,\n    'pi': 960,\n    'rho': 961,\n    'sigmaf': 962,\n    'sigma': 963,\n    'tau': 964,\n    'upsilon': 965,\n    'phi': 966,\n    'chi': 967,\n    'psi': 968,\n    'omega': 969,\n    'thetasym': 977,\n    'upsih': 978,\n    'piv': 982,\n    'ensp': 8194,\n    'emsp': 8195,\n    'thinsp': 8201,\n    'zwnj': 8204,\n    'zwj': 8205,\n    'lrm': 8206,\n    'rlm': 8207,\n    'ndash': 8211,\n    'mdash': 8212,\n    'lsquo': 8216,\n    'rsquo': 8217,\n    'sbquo': 8218,\n    'ldquo': 8220,\n    'rdquo': 8221,\n    'bdquo': 8222,\n    'dagger': 8224,\n    'Dagger': 8225,\n    'bull': 8226,\n    'hellip': 8230,\n    'permil': 8240,\n    'prime': 8242,\n    'Prime': 8243,\n    'lsaquo': 8249,\n    'rsaquo': 8250,\n    'oline': 8254,\n    'frasl': 8260,\n    'euro': 8364,\n    'image': 8465,\n    'weierp': 8472,\n    'real': 8476,\n    'trade': 8482,\n    'alefsym': 8501,\n    'larr': 8592,\n    'uarr': 8593,\n    'rarr': 8594,\n    'darr': 8595,\n    'harr': 8596,\n    'crarr': 8629,\n    'lArr': 8656,\n    'uArr': 8657,\n    'rArr': 8658,\n    'dArr': 8659,\n    'hArr': 8660,\n    'forall': 8704,\n    'part': 8706,\n    'exist': 8707,\n    'empty': 8709,\n    'nabla': 8711,\n    'isin': 8712,\n    'notin': 8713,\n    'ni': 8715,\n    'prod': 8719,\n    'sum': 8721,\n    'minus': 8722,\n    'lowast': 8727,\n    'radic': 8730,\n    'prop': 8733,\n    'infin': 8734,\n    'ang': 8736,\n    'and': 8743,\n    'or': 8744,\n    'cap': 8745,\n    'cup': 8746,\n    'int': 8747,\n    'there4': 8756,\n    'sim': 8764,\n    'cong': 8773,\n    'asymp': 8776,\n    'ne': 8800,\n    'equiv': 8801,\n    'le': 8804,\n    'ge': 8805,\n    'sub': 8834,\n    'sup': 8835,\n    'nsub': 8836,\n    'sube': 8838,\n    'supe': 8839,\n    'oplus': 8853,\n    'otimes': 8855,\n    'perp': 8869,\n    'sdot': 8901,\n    'lceil': 8968,\n    'rceil': 8969,\n    'lfloor': 8970,\n    'rfloor': 8971,\n    'lang': 9001,\n    'rang': 9002,\n    'loz': 9674,\n    'spades': 9824,\n    'clubs': 9827,\n    'hearts': 9829,\n    'diams': 9830\n  }\n\n  Object.keys(sax.ENTITIES).forEach(function (key) {\n    var e = sax.ENTITIES[key]\n    var s = typeof e === 'number' ? String.fromCharCode(e) : e\n    sax.ENTITIES[key] = s\n  })\n\n  for (var s in sax.STATE) {\n    sax.STATE[sax.STATE[s]] = s\n  }\n\n  // shorthand\n  S = sax.STATE\n\n  function emit (parser, event, data) {\n    parser[event] && parser[event](data)\n  }\n\n  function emitNode (parser, nodeType, data) {\n    if (parser.textNode) closeText(parser)\n    emit(parser, nodeType, data)\n  }\n\n  function closeText (parser) {\n    parser.textNode = textopts(parser.opt, parser.textNode)\n    if (parser.textNode) emit(parser, 'ontext', parser.textNode)\n    parser.textNode = ''\n  }\n\n  function textopts (opt, text) {\n    if (opt.trim) text = text.trim()\n    if (opt.normalize) text = text.replace(/\\s+/g, ' ')\n    return text\n  }\n\n  function error (parser, er) {\n    closeText(parser)\n    if (parser.trackPosition) {\n      er += '\\nLine: ' + parser.line +\n        '\\nColumn: ' + parser.column +\n        '\\nChar: ' + parser.c\n    }\n    er = new Error(er)\n    parser.error = er\n    emit(parser, 'onerror', er)\n    return parser\n  }\n\n  function end (parser) {\n    if (parser.sawRoot && !parser.closedRoot) strictFail(parser, 'Unclosed root tag')\n    if ((parser.state !== S.BEGIN) &&\n      (parser.state !== S.BEGIN_WHITESPACE) &&\n      (parser.state !== S.TEXT)) {\n      error(parser, 'Unexpected end')\n    }\n    closeText(parser)\n    parser.c = ''\n    parser.closed = true\n    emit(parser, 'onend')\n    SAXParser.call(parser, parser.strict, parser.opt)\n    return parser\n  }\n\n  function strictFail (parser, message) {\n    if (typeof parser !== 'object' || !(parser instanceof SAXParser)) {\n      throw new Error('bad call to strictFail')\n    }\n    if (parser.strict) {\n      error(parser, message)\n    }\n  }\n\n  function newTag (parser) {\n    if (!parser.strict) parser.tagName = parser.tagName[parser.looseCase]()\n    var parent = parser.tags[parser.tags.length - 1] || parser\n    var tag = parser.tag = { name: parser.tagName, attributes: {} }\n\n    // will be overridden if tag contails an xmlns=\"foo\" or xmlns:foo=\"bar\"\n    if (parser.opt.xmlns) {\n      tag.ns = parent.ns\n    }\n    parser.attribList.length = 0\n    emitNode(parser, 'onopentagstart', tag)\n  }\n\n  function qname (name, attribute) {\n    var i = name.indexOf(':')\n    var qualName = i < 0 ? [ '', name ] : name.split(':')\n    var prefix = qualName[0]\n    var local = qualName[1]\n\n    // <x \"xmlns\"=\"http://foo\">\n    if (attribute && name === 'xmlns') {\n      prefix = 'xmlns'\n      local = ''\n    }\n\n    return { prefix: prefix, local: local }\n  }\n\n  function attrib (parser) {\n    if (!parser.strict) {\n      parser.attribName = parser.attribName[parser.looseCase]()\n    }\n\n    if (parser.attribList.indexOf(parser.attribName) !== -1 ||\n      parser.tag.attributes.hasOwnProperty(parser.attribName)) {\n      parser.attribName = parser.attribValue = ''\n      return\n    }\n\n    if (parser.opt.xmlns) {\n      var qn = qname(parser.attribName, true)\n      var prefix = qn.prefix\n      var local = qn.local\n\n      if (prefix === 'xmlns') {\n        // namespace binding attribute. push the binding into scope\n        if (local === 'xml' && parser.attribValue !== XML_NAMESPACE) {\n          strictFail(parser,\n            'xml: prefix must be bound to ' + XML_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else if (local === 'xmlns' && parser.attribValue !== XMLNS_NAMESPACE) {\n          strictFail(parser,\n            'xmlns: prefix must be bound to ' + XMLNS_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else {\n          var tag = parser.tag\n          var parent = parser.tags[parser.tags.length - 1] || parser\n          if (tag.ns === parent.ns) {\n            tag.ns = Object.create(parent.ns)\n          }\n          tag.ns[local] = parser.attribValue\n        }\n      }\n\n      // defer onattribute events until all attributes have been seen\n      // so any new bindings can take effect. preserve attribute order\n      // so deferred events can be emitted in document order\n      parser.attribList.push([parser.attribName, parser.attribValue])\n    } else {\n      // in non-xmlns mode, we can emit the event right away\n      parser.tag.attributes[parser.attribName] = parser.attribValue\n      emitNode(parser, 'onattribute', {\n        name: parser.attribName,\n        value: parser.attribValue\n      })\n    }\n\n    parser.attribName = parser.attribValue = ''\n  }\n\n  function openTag (parser, selfClosing) {\n    if (parser.opt.xmlns) {\n      // emit namespace binding events\n      var tag = parser.tag\n\n      // add namespace info to tag\n      var qn = qname(parser.tagName)\n      tag.prefix = qn.prefix\n      tag.local = qn.local\n      tag.uri = tag.ns[qn.prefix] || ''\n\n      if (tag.prefix && !tag.uri) {\n        strictFail(parser, 'Unbound namespace prefix: ' +\n          JSON.stringify(parser.tagName))\n        tag.uri = qn.prefix\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (tag.ns && parent.ns !== tag.ns) {\n        Object.keys(tag.ns).forEach(function (p) {\n          emitNode(parser, 'onopennamespace', {\n            prefix: p,\n            uri: tag.ns[p]\n          })\n        })\n      }\n\n      // handle deferred onattribute events\n      // Note: do not apply default ns to attributes:\n      //   http://www.w3.org/TR/REC-xml-names/#defaulting\n      for (var i = 0, l = parser.attribList.length; i < l; i++) {\n        var nv = parser.attribList[i]\n        var name = nv[0]\n        var value = nv[1]\n        var qualName = qname(name, true)\n        var prefix = qualName.prefix\n        var local = qualName.local\n        var uri = prefix === '' ? '' : (tag.ns[prefix] || '')\n        var a = {\n          name: name,\n          value: value,\n          prefix: prefix,\n          local: local,\n          uri: uri\n        }\n\n        // if there's any attributes with an undefined namespace,\n        // then fail on them now.\n        if (prefix && prefix !== 'xmlns' && !uri) {\n          strictFail(parser, 'Unbound namespace prefix: ' +\n            JSON.stringify(prefix))\n          a.uri = prefix\n        }\n        parser.tag.attributes[name] = a\n        emitNode(parser, 'onattribute', a)\n      }\n      parser.attribList.length = 0\n    }\n\n    parser.tag.isSelfClosing = !!selfClosing\n\n    // process the tag\n    parser.sawRoot = true\n    parser.tags.push(parser.tag)\n    emitNode(parser, 'onopentag', parser.tag)\n    if (!selfClosing) {\n      // special case for <script> in non-strict mode.\n      if (!parser.noscript && parser.tagName.toLowerCase() === 'script') {\n        parser.state = S.SCRIPT\n      } else {\n        parser.state = S.TEXT\n      }\n      parser.tag = null\n      parser.tagName = ''\n    }\n    parser.attribName = parser.attribValue = ''\n    parser.attribList.length = 0\n  }\n\n  function closeTag (parser) {\n    if (!parser.tagName) {\n      strictFail(parser, 'Weird empty close tag.')\n      parser.textNode += '</>'\n      parser.state = S.TEXT\n      return\n    }\n\n    if (parser.script) {\n      if (parser.tagName !== 'script') {\n        parser.script += '</' + parser.tagName + '>'\n        parser.tagName = ''\n        parser.state = S.SCRIPT\n        return\n      }\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n\n    // first make sure that the closing tag actually exists.\n    // <a><b></c></b></a> will close everything, otherwise.\n    var t = parser.tags.length\n    var tagName = parser.tagName\n    if (!parser.strict) {\n      tagName = tagName[parser.looseCase]()\n    }\n    var closeTo = tagName\n    while (t--) {\n      var close = parser.tags[t]\n      if (close.name !== closeTo) {\n        // fail the first time in strict mode\n        strictFail(parser, 'Unexpected close tag')\n      } else {\n        break\n      }\n    }\n\n    // didn't find it.  we already failed for strict, so just abort.\n    if (t < 0) {\n      strictFail(parser, 'Unmatched closing tag: ' + parser.tagName)\n      parser.textNode += '</' + parser.tagName + '>'\n      parser.state = S.TEXT\n      return\n    }\n    parser.tagName = tagName\n    var s = parser.tags.length\n    while (s-- > t) {\n      var tag = parser.tag = parser.tags.pop()\n      parser.tagName = parser.tag.name\n      emitNode(parser, 'onclosetag', parser.tagName)\n\n      var x = {}\n      for (var i in tag.ns) {\n        x[i] = tag.ns[i]\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (parser.opt.xmlns && tag.ns !== parent.ns) {\n        // remove namespace bindings introduced by tag\n        Object.keys(tag.ns).forEach(function (p) {\n          var n = tag.ns[p]\n          emitNode(parser, 'onclosenamespace', { prefix: p, uri: n })\n        })\n      }\n    }\n    if (t === 0) parser.closedRoot = true\n    parser.tagName = parser.attribValue = parser.attribName = ''\n    parser.attribList.length = 0\n    parser.state = S.TEXT\n  }\n\n  function parseEntity (parser) {\n    var entity = parser.entity\n    var entityLC = entity.toLowerCase()\n    var num\n    var numStr = ''\n\n    if (parser.ENTITIES[entity]) {\n      return parser.ENTITIES[entity]\n    }\n    if (parser.ENTITIES[entityLC]) {\n      return parser.ENTITIES[entityLC]\n    }\n    entity = entityLC\n    if (entity.charAt(0) === '#') {\n      if (entity.charAt(1) === 'x') {\n        entity = entity.slice(2)\n        num = parseInt(entity, 16)\n        numStr = num.toString(16)\n      } else {\n        entity = entity.slice(1)\n        num = parseInt(entity, 10)\n        numStr = num.toString(10)\n      }\n    }\n    entity = entity.replace(/^0+/, '')\n    if (isNaN(num) || numStr.toLowerCase() !== entity) {\n      strictFail(parser, 'Invalid character entity')\n      return '&' + parser.entity + ';'\n    }\n\n    return String.fromCodePoint(num)\n  }\n\n  function beginWhiteSpace (parser, c) {\n    if (c === '<') {\n      parser.state = S.OPEN_WAKA\n      parser.startTagPosition = parser.position\n    } else if (!isWhitespace(c)) {\n      // have to process this as a text node.\n      // weird, but happens.\n      strictFail(parser, 'Non-whitespace before first tag.')\n      parser.textNode = c\n      parser.state = S.TEXT\n    }\n  }\n\n  function charAt (chunk, i) {\n    var result = ''\n    if (i < chunk.length) {\n      result = chunk.charAt(i)\n    }\n    return result\n  }\n\n  function write (chunk) {\n    var parser = this\n    if (this.error) {\n      throw this.error\n    }\n    if (parser.closed) {\n      return error(parser,\n        'Cannot write after close. Assign an onready handler.')\n    }\n    if (chunk === null) {\n      return end(parser)\n    }\n    if (typeof chunk === 'object') {\n      chunk = chunk.toString()\n    }\n    var i = 0\n    var c = ''\n    while (true) {\n      c = charAt(chunk, i++)\n      parser.c = c\n\n      if (!c) {\n        break\n      }\n\n      if (parser.trackPosition) {\n        parser.position++\n        if (c === '\\n') {\n          parser.line++\n          parser.column = 0\n        } else {\n          parser.column++\n        }\n      }\n\n      switch (parser.state) {\n        case S.BEGIN:\n          parser.state = S.BEGIN_WHITESPACE\n          if (c === '\\uFEFF') {\n            continue\n          }\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.BEGIN_WHITESPACE:\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.TEXT:\n          if (parser.sawRoot && !parser.closedRoot) {\n            var starti = i - 1\n            while (c && c !== '<' && c !== '&') {\n              c = charAt(chunk, i++)\n              if (c && parser.trackPosition) {\n                parser.position++\n                if (c === '\\n') {\n                  parser.line++\n                  parser.column = 0\n                } else {\n                  parser.column++\n                }\n              }\n            }\n            parser.textNode += chunk.substring(starti, i - 1)\n          }\n          if (c === '<' && !(parser.sawRoot && parser.closedRoot && !parser.strict)) {\n            parser.state = S.OPEN_WAKA\n            parser.startTagPosition = parser.position\n          } else {\n            if (!isWhitespace(c) && (!parser.sawRoot || parser.closedRoot)) {\n              strictFail(parser, 'Text data outside of root node.')\n            }\n            if (c === '&') {\n              parser.state = S.TEXT_ENTITY\n            } else {\n              parser.textNode += c\n            }\n          }\n          continue\n\n        case S.SCRIPT:\n          // only non-strict\n          if (c === '<') {\n            parser.state = S.SCRIPT_ENDING\n          } else {\n            parser.script += c\n          }\n          continue\n\n        case S.SCRIPT_ENDING:\n          if (c === '/') {\n            parser.state = S.CLOSE_TAG\n          } else {\n            parser.script += '<' + c\n            parser.state = S.SCRIPT\n          }\n          continue\n\n        case S.OPEN_WAKA:\n          // either a /, ?, !, or text is coming next.\n          if (c === '!') {\n            parser.state = S.SGML_DECL\n            parser.sgmlDecl = ''\n          } else if (isWhitespace(c)) {\n            // wait for it...\n          } else if (isMatch(nameStart, c)) {\n            parser.state = S.OPEN_TAG\n            parser.tagName = c\n          } else if (c === '/') {\n            parser.state = S.CLOSE_TAG\n            parser.tagName = ''\n          } else if (c === '?') {\n            parser.state = S.PROC_INST\n            parser.procInstName = parser.procInstBody = ''\n          } else {\n            strictFail(parser, 'Unencoded <')\n            // if there was some whitespace, then add that in.\n            if (parser.startTagPosition + 1 < parser.position) {\n              var pad = parser.position - parser.startTagPosition\n              c = new Array(pad).join(' ') + c\n            }\n            parser.textNode += '<' + c\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.SGML_DECL:\n          if ((parser.sgmlDecl + c).toUpperCase() === CDATA) {\n            emitNode(parser, 'onopencdata')\n            parser.state = S.CDATA\n            parser.sgmlDecl = ''\n            parser.cdata = ''\n          } else if (parser.sgmlDecl + c === '--') {\n            parser.state = S.COMMENT\n            parser.comment = ''\n            parser.sgmlDecl = ''\n          } else if ((parser.sgmlDecl + c).toUpperCase() === DOCTYPE) {\n            parser.state = S.DOCTYPE\n            if (parser.doctype || parser.sawRoot) {\n              strictFail(parser,\n                'Inappropriately located doctype declaration')\n            }\n            parser.doctype = ''\n            parser.sgmlDecl = ''\n          } else if (c === '>') {\n            emitNode(parser, 'onsgmldeclaration', parser.sgmlDecl)\n            parser.sgmlDecl = ''\n            parser.state = S.TEXT\n          } else if (isQuote(c)) {\n            parser.state = S.SGML_DECL_QUOTED\n            parser.sgmlDecl += c\n          } else {\n            parser.sgmlDecl += c\n          }\n          continue\n\n        case S.SGML_DECL_QUOTED:\n          if (c === parser.q) {\n            parser.state = S.SGML_DECL\n            parser.q = ''\n          }\n          parser.sgmlDecl += c\n          continue\n\n        case S.DOCTYPE:\n          if (c === '>') {\n            parser.state = S.TEXT\n            emitNode(parser, 'ondoctype', parser.doctype)\n            parser.doctype = true // just remember that we saw it.\n          } else {\n            parser.doctype += c\n            if (c === '[') {\n              parser.state = S.DOCTYPE_DTD\n            } else if (isQuote(c)) {\n              parser.state = S.DOCTYPE_QUOTED\n              parser.q = c\n            }\n          }\n          continue\n\n        case S.DOCTYPE_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.q = ''\n            parser.state = S.DOCTYPE\n          }\n          continue\n\n        case S.DOCTYPE_DTD:\n          parser.doctype += c\n          if (c === ']') {\n            parser.state = S.DOCTYPE\n          } else if (isQuote(c)) {\n            parser.state = S.DOCTYPE_DTD_QUOTED\n            parser.q = c\n          }\n          continue\n\n        case S.DOCTYPE_DTD_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.state = S.DOCTYPE_DTD\n            parser.q = ''\n          }\n          continue\n\n        case S.COMMENT:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDING\n          } else {\n            parser.comment += c\n          }\n          continue\n\n        case S.COMMENT_ENDING:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDED\n            parser.comment = textopts(parser.opt, parser.comment)\n            if (parser.comment) {\n              emitNode(parser, 'oncomment', parser.comment)\n            }\n            parser.comment = ''\n          } else {\n            parser.comment += '-' + c\n            parser.state = S.COMMENT\n          }\n          continue\n\n        case S.COMMENT_ENDED:\n          if (c !== '>') {\n            strictFail(parser, 'Malformed comment')\n            // allow <!-- blah -- bloo --> in non-strict mode,\n            // which is a comment of \" blah -- bloo \"\n            parser.comment += '--' + c\n            parser.state = S.COMMENT\n          } else {\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.CDATA:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING\n          } else {\n            parser.cdata += c\n          }\n          continue\n\n        case S.CDATA_ENDING:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING_2\n          } else {\n            parser.cdata += ']' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.CDATA_ENDING_2:\n          if (c === '>') {\n            if (parser.cdata) {\n              emitNode(parser, 'oncdata', parser.cdata)\n            }\n            emitNode(parser, 'onclosecdata')\n            parser.cdata = ''\n            parser.state = S.TEXT\n          } else if (c === ']') {\n            parser.cdata += ']'\n          } else {\n            parser.cdata += ']]' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.PROC_INST:\n          if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else if (isWhitespace(c)) {\n            parser.state = S.PROC_INST_BODY\n          } else {\n            parser.procInstName += c\n          }\n          continue\n\n        case S.PROC_INST_BODY:\n          if (!parser.procInstBody && isWhitespace(c)) {\n            continue\n          } else if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else {\n            parser.procInstBody += c\n          }\n          continue\n\n        case S.PROC_INST_ENDING:\n          if (c === '>') {\n            emitNode(parser, 'onprocessinginstruction', {\n              name: parser.procInstName,\n              body: parser.procInstBody\n            })\n            parser.procInstName = parser.procInstBody = ''\n            parser.state = S.TEXT\n          } else {\n            parser.procInstBody += '?' + c\n            parser.state = S.PROC_INST_BODY\n          }\n          continue\n\n        case S.OPEN_TAG:\n          if (isMatch(nameBody, c)) {\n            parser.tagName += c\n          } else {\n            newTag(parser)\n            if (c === '>') {\n              openTag(parser)\n            } else if (c === '/') {\n              parser.state = S.OPEN_TAG_SLASH\n            } else {\n              if (!isWhitespace(c)) {\n                strictFail(parser, 'Invalid character in tag name')\n              }\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.OPEN_TAG_SLASH:\n          if (c === '>') {\n            openTag(parser, true)\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Forward-slash in opening tag not followed by >')\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.ATTRIB:\n          // haven't read the attribute name yet.\n          if (isWhitespace(c)) {\n            continue\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (isMatch(nameStart, c)) {\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (c === '>') {\n            strictFail(parser, 'Attribute without value')\n            parser.attribValue = parser.attribName\n            attrib(parser)\n            openTag(parser)\n          } else if (isWhitespace(c)) {\n            parser.state = S.ATTRIB_NAME_SAW_WHITE\n          } else if (isMatch(nameBody, c)) {\n            parser.attribName += c\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME_SAW_WHITE:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (isWhitespace(c)) {\n            continue\n          } else {\n            strictFail(parser, 'Attribute without value')\n            parser.tag.attributes[parser.attribName] = ''\n            parser.attribValue = ''\n            emitNode(parser, 'onattribute', {\n              name: parser.attribName,\n              value: ''\n            })\n            parser.attribName = ''\n            if (c === '>') {\n              openTag(parser)\n            } else if (isMatch(nameStart, c)) {\n              parser.attribName = c\n              parser.state = S.ATTRIB_NAME\n            } else {\n              strictFail(parser, 'Invalid attribute name')\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.ATTRIB_VALUE:\n          if (isWhitespace(c)) {\n            continue\n          } else if (isQuote(c)) {\n            parser.q = c\n            parser.state = S.ATTRIB_VALUE_QUOTED\n          } else {\n            strictFail(parser, 'Unquoted attribute value')\n            parser.state = S.ATTRIB_VALUE_UNQUOTED\n            parser.attribValue = c\n          }\n          continue\n\n        case S.ATTRIB_VALUE_QUOTED:\n          if (c !== parser.q) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_Q\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          parser.q = ''\n          parser.state = S.ATTRIB_VALUE_CLOSED\n          continue\n\n        case S.ATTRIB_VALUE_CLOSED:\n          if (isWhitespace(c)) {\n            parser.state = S.ATTRIB\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (isMatch(nameStart, c)) {\n            strictFail(parser, 'No whitespace between attributes')\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_VALUE_UNQUOTED:\n          if (!isAttribEnd(c)) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_U\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          if (c === '>') {\n            openTag(parser)\n          } else {\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.CLOSE_TAG:\n          if (!parser.tagName) {\n            if (isWhitespace(c)) {\n              continue\n            } else if (notMatch(nameStart, c)) {\n              if (parser.script) {\n                parser.script += '</' + c\n                parser.state = S.SCRIPT\n              } else {\n                strictFail(parser, 'Invalid tagname in closing tag.')\n              }\n            } else {\n              parser.tagName = c\n            }\n          } else if (c === '>') {\n            closeTag(parser)\n          } else if (isMatch(nameBody, c)) {\n            parser.tagName += c\n          } else if (parser.script) {\n            parser.script += '</' + parser.tagName\n            parser.tagName = ''\n            parser.state = S.SCRIPT\n          } else {\n            if (!isWhitespace(c)) {\n              strictFail(parser, 'Invalid tagname in closing tag')\n            }\n            parser.state = S.CLOSE_TAG_SAW_WHITE\n          }\n          continue\n\n        case S.CLOSE_TAG_SAW_WHITE:\n          if (isWhitespace(c)) {\n            continue\n          }\n          if (c === '>') {\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Invalid characters in closing tag')\n          }\n          continue\n\n        case S.TEXT_ENTITY:\n        case S.ATTRIB_VALUE_ENTITY_Q:\n        case S.ATTRIB_VALUE_ENTITY_U:\n          var returnState\n          var buffer\n          switch (parser.state) {\n            case S.TEXT_ENTITY:\n              returnState = S.TEXT\n              buffer = 'textNode'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_Q:\n              returnState = S.ATTRIB_VALUE_QUOTED\n              buffer = 'attribValue'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_U:\n              returnState = S.ATTRIB_VALUE_UNQUOTED\n              buffer = 'attribValue'\n              break\n          }\n\n          if (c === ';') {\n            parser[buffer] += parseEntity(parser)\n            parser.entity = ''\n            parser.state = returnState\n          } else if (isMatch(parser.entity.length ? entityBody : entityStart, c)) {\n            parser.entity += c\n          } else {\n            strictFail(parser, 'Invalid character in entity name')\n            parser[buffer] += '&' + parser.entity + c\n            parser.entity = ''\n            parser.state = returnState\n          }\n\n          continue\n\n        default:\n          throw new Error(parser, 'Unknown state: ' + parser.state)\n      }\n    } // while\n\n    if (parser.position >= parser.bufferCheckPosition) {\n      checkBufferLength(parser)\n    }\n    return parser\n  }\n\n  /*! http://mths.be/fromcodepoint v0.1.0 by @mathias */\n  /* istanbul ignore next */\n  if (!String.fromCodePoint) {\n    (function () {\n      var stringFromCharCode = String.fromCharCode\n      var floor = Math.floor\n      var fromCodePoint = function () {\n        var MAX_SIZE = 0x4000\n        var codeUnits = []\n        var highSurrogate\n        var lowSurrogate\n        var index = -1\n        var length = arguments.length\n        if (!length) {\n          return ''\n        }\n        var result = ''\n        while (++index < length) {\n          var codePoint = Number(arguments[index])\n          if (\n            !isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n            codePoint < 0 || // not a valid Unicode code point\n            codePoint > 0x10FFFF || // not a valid Unicode code point\n            floor(codePoint) !== codePoint // not an integer\n          ) {\n            throw RangeError('Invalid code point: ' + codePoint)\n          }\n          if (codePoint <= 0xFFFF) { // BMP code point\n            codeUnits.push(codePoint)\n          } else { // Astral code point; split in surrogate halves\n            // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n            codePoint -= 0x10000\n            highSurrogate = (codePoint >> 10) + 0xD800\n            lowSurrogate = (codePoint % 0x400) + 0xDC00\n            codeUnits.push(highSurrogate, lowSurrogate)\n          }\n          if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n            result += stringFromCharCode.apply(null, codeUnits)\n            codeUnits.length = 0\n          }\n        }\n        return result\n      }\n      /* istanbul ignore next */\n      if (Object.defineProperty) {\n        Object.defineProperty(String, 'fromCodePoint', {\n          value: fromCodePoint,\n          configurable: true,\n          writable: true\n        })\n      } else {\n        String.fromCodePoint = fromCodePoint\n      }\n    }())\n  }\n})(typeof exports === 'undefined' ? this.sax = {} : exports)\n","'use strict';\n\nmodule.exports = {\n  isString: function(arg) {\n    return typeof(arg) === 'string';\n  },\n  isObject: function(arg) {\n    return typeof(arg) === 'object' && arg !== null;\n  },\n  isNull: function(arg) {\n    return arg === null;\n  },\n  isNullOrUndefined: function(arg) {\n    return arg == null;\n  }\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n","/**\n * Converts human friendly time to milliseconds. Supports the format\n * 00:00:00.000 for hours, minutes, seconds, and milliseconds respectively.\n * And 0ms, 0s, 0m, 0h, and together 1m1s.\n *\n * @param {string|number} time\n * @return {number}\n */\nconst numberFormat = /^\\d+$/;\nconst timeFormat = /^(?:(?:(\\d+):)?(\\d{1,2}):)?(\\d{1,2})(?:\\.(\\d{3}))?$/;\nconst timeUnits = {\n  ms: 1,\n  s: 1000,\n  m: 60000,\n  h: 3600000,\n};\nexports.humanStr = (time) => {\n  if (typeof time === 'number') { return time; }\n  if (numberFormat.test(time)) { return +time; }\n  const firstFormat = timeFormat.exec(time);\n  if (firstFormat) {\n    return +(firstFormat[1] || 0) * timeUnits.h +\n      +(firstFormat[2] || 0) * timeUnits.m +\n      +firstFormat[3] * timeUnits.s +\n      +(firstFormat[4] || 0);\n  } else {\n    let total = 0;\n    const r = /(-?\\d+)(ms|s|m|h)/g;\n    let rs;\n    while ((rs = r.exec(time)) != null) {\n      total += +rs[1] * timeUnits[rs[2]];\n    }\n    return total;\n  }\n};\n\n/**\n * Parses a duration string in the form of \"123.456S\", returns milliseconds.\n *\n * @param {string} time\n * @return {number}\n */\nexports.durationStr = (time) => {\n  let total = 0;\n  const r = /(\\d+(?:\\.\\d+)?)(S|M|H)/g;\n  let rs;\n  while ((rs = r.exec(time)) != null) {\n    total += +rs[1] * timeUnits[rs[2].toLowerCase()];\n  }\n  return total;\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","module.exports = require('events').EventEmitter;\n","'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {\n      pna.nextTick(emitErrorNT, this, err);\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      pna.nextTick(emitErrorNT, _this, err);\n      if (_this._writableState) {\n        _this._writableState.errorEmitted = true;\n      }\n    } else if (cb) {\n      cb(err);\n    }\n  });\n\n  return this;\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy\n};","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./YoutubeComp.vue?vue&type=style&index=0&id=943632aa&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./YoutubeComp.vue?vue&type=style&index=0&id=943632aa&scoped=true&lang=css&\"","var ALPHA_INDEX = {\n    '&lt': '<',\n    '&gt': '>',\n    '&quot': '\"',\n    '&apos': '\\'',\n    '&amp': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&apos;': '\\'',\n    '&amp;': '&'\n};\n\nvar CHAR_INDEX = {\n    60: 'lt',\n    62: 'gt',\n    34: 'quot',\n    39: 'apos',\n    38: 'amp'\n};\n\nvar CHAR_S_INDEX = {\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    '\\'': '&apos;',\n    '&': '&amp;'\n};\n\n/**\n * @constructor\n */\nfunction XmlEntities() {}\n\n/**\n * @param {String} str\n * @returns {String}\n */\nXmlEntities.prototype.encode = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    return str.replace(/<|>|\"|'|&/g, function(s) {\n        return CHAR_S_INDEX[s];\n    });\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\n XmlEntities.encode = function(str) {\n    return new XmlEntities().encode(str);\n };\n\n/**\n * @param {String} str\n * @returns {String}\n */\nXmlEntities.prototype.decode = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    return str.replace(/&#?[0-9a-zA-Z]+;?/g, function(s) {\n        if (s.charAt(1) === '#') {\n            var code = s.charAt(2).toLowerCase() === 'x' ?\n                parseInt(s.substr(3), 16) :\n                parseInt(s.substr(2));\n\n            if (isNaN(code) || code < -32768 || code > 65535) {\n                return '';\n            }\n            return String.fromCharCode(code);\n        }\n        return ALPHA_INDEX[s] || s;\n    });\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\n XmlEntities.decode = function(str) {\n    return new XmlEntities().decode(str);\n };\n\n/**\n * @param {String} str\n * @returns {String}\n */\nXmlEntities.prototype.encodeNonUTF = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    var strLength = str.length;\n    var result = '';\n    var i = 0;\n    while (i < strLength) {\n        var c = str.charCodeAt(i);\n        var alpha = CHAR_INDEX[c];\n        if (alpha) {\n            result += \"&\" + alpha + \";\";\n            i++;\n            continue;\n        }\n        if (c < 32 || c > 126) {\n            result += '&#' + c + ';';\n        } else {\n            result += str.charAt(i);\n        }\n        i++;\n    }\n    return result;\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\n XmlEntities.encodeNonUTF = function(str) {\n    return new XmlEntities().encodeNonUTF(str);\n };\n\n/**\n * @param {String} str\n * @returns {String}\n */\nXmlEntities.prototype.encodeNonASCII = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    var strLenght = str.length;\n    var result = '';\n    var i = 0;\n    while (i < strLenght) {\n        var c = str.charCodeAt(i);\n        if (c <= 255) {\n            result += str[i++];\n            continue;\n        }\n        result += '&#' + c + ';';\n        i++;\n    }\n    return result;\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\n XmlEntities.encodeNonASCII = function(str) {\n    return new XmlEntities().encodeNonASCII(str);\n };\n\nmodule.exports = XmlEntities;\n","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n","'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Buffer = require('safe-buffer').Buffer;\nvar util = require('util');\n\nfunction copyBuffer(src, target, offset) {\n  src.copy(target, offset);\n}\n\nmodule.exports = function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  BufferList.prototype.push = function push(v) {\n    var entry = { data: v, next: null };\n    if (this.length > 0) this.tail.next = entry;else this.head = entry;\n    this.tail = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.unshift = function unshift(v) {\n    var entry = { data: v, next: this.head };\n    if (this.length === 0) this.tail = entry;\n    this.head = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.shift = function shift() {\n    if (this.length === 0) return;\n    var ret = this.head.data;\n    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n    --this.length;\n    return ret;\n  };\n\n  BufferList.prototype.clear = function clear() {\n    this.head = this.tail = null;\n    this.length = 0;\n  };\n\n  BufferList.prototype.join = function join(s) {\n    if (this.length === 0) return '';\n    var p = this.head;\n    var ret = '' + p.data;\n    while (p = p.next) {\n      ret += s + p.data;\n    }return ret;\n  };\n\n  BufferList.prototype.concat = function concat(n) {\n    if (this.length === 0) return Buffer.alloc(0);\n    if (this.length === 1) return this.head.data;\n    var ret = Buffer.allocUnsafe(n >>> 0);\n    var p = this.head;\n    var i = 0;\n    while (p) {\n      copyBuffer(p.data, ret, i);\n      i += p.data.length;\n      p = p.next;\n    }\n    return ret;\n  };\n\n  return BufferList;\n}();\n\nif (util && util.inspect && util.inspect.custom) {\n  module.exports.prototype[util.inspect.custom] = function () {\n    var obj = util.inspect({ length: this.length });\n    return this.constructor.name + ' ' + obj;\n  };\n}","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","const qs       = require('querystring');\nconst url      = require('url');\nconst FORMATS  = require('./formats');\n\n\n// Use these to help sort formats, higher is better.\nconst audioEncodingRanks = {\n  mp3: 1,\n  vorbis: 2,\n  aac: 3,\n  opus: 4,\n  flac: 5,\n};\nconst videoEncodingRanks = {\n  'Sorenson H.283': 1,\n  'MPEG-4 Visual': 2,\n  'VP8': 3,\n  'VP9': 4,\n  'H.264': 5,\n};\n\n\n/**\n * Sort formats from highest quality to lowest.\n * By resolution, then video bitrate, then audio bitrate.\n *\n * @param {Object} a\n * @param {Object} b\n */\nexports.sortFormats = (a, b) => {\n  const ares = a.resolution ? parseInt(a.resolution.slice(0, -1), 10) : 0;\n  const bres = b.resolution ? parseInt(b.resolution.slice(0, -1), 10) : 0;\n  const afeats = ~~!!ares * 2 + ~~!!a.audioBitrate;\n  const bfeats = ~~!!bres * 2 + ~~!!b.audioBitrate;\n\n  const getBitrate = (c) => {\n    if (c.bitrate) {\n      let s = c.bitrate.split('-');\n      return parseFloat(s[s.length - 1], 10);\n    } else {\n      return 0;\n    }\n  };\n\n  const audioScore = (c) => {\n    const abitrate = c.audioBitrate || 0;\n    const aenc = audioEncodingRanks[c.audioEncoding] || 0;\n    return abitrate + aenc / 10;\n  };\n\n  if (afeats === bfeats) {\n    if (ares === bres) {\n      let avbitrate = getBitrate(a);\n      let bvbitrate = getBitrate(b);\n      if (avbitrate === bvbitrate) {\n        let aascore = audioScore(a);\n        let bascore = audioScore(b);\n        if (aascore === bascore) {\n          let avenc = videoEncodingRanks[a.encoding] || 0;\n          let bvenc = videoEncodingRanks[b.encoding] || 0;\n          return bvenc - avenc;\n        } else {\n          return bascore - aascore;\n        }\n      } else {\n        return bvbitrate - avbitrate;\n      }\n    } else {\n      return bres - ares;\n    }\n  } else {\n    return bfeats - afeats;\n  }\n};\n\n\n/**\n * Choose a format depending on the given options.\n *\n * @param {Array.<Object>} formats\n * @param {Object} options\n * @return {Object|Error}\n */\nexports.chooseFormat = (formats, options) => {\n  if (typeof options.format === 'object') {\n    return options.format;\n  }\n\n  if (options.filter) {\n    formats = exports.filterFormats(formats, options.filter);\n    if (formats.length === 0) {\n      return Error('No formats found with custom filter');\n    }\n  }\n\n  let format;\n  const quality = options.quality || 'highest';\n  const getBitrate = (f) => {\n    let s = f.bitrate.split('-');\n    return parseFloat(s[s.length - 1], 10);\n  };\n  switch (quality) {\n    case 'highest':\n      format = formats[0];\n      break;\n\n    case 'lowest':\n      format = formats[formats.length - 1];\n      break;\n\n    case 'highestaudio':\n      formats = exports.filterFormats(formats, 'audio');\n      format = null;\n      for (let f of formats) {\n        if (!format\n          || f.audioBitrate > format.audioBitrate\n          || (f.audioBitrate === format.audioBitrate && format.encoding && !f.encoding))\n          format = f;\n      }\n      break;\n\n    case 'lowestaudio':\n      formats = exports.filterFormats(formats, 'audio')\n      format = null;\n      for (let f of formats) {\n        if (!format\n          || f.audioBitrate < format.audioBitrate\n          || (f.audioBitrate === format.audioBitrate && format.encoding && !f.encoding))\n          format = f;\n      }\n      break;\n\n    case 'highestvideo':\n      formats = exports.filterFormats(formats, 'video');\n      format = null;\n      for (let f of formats) {\n        if (!format\n          || getBitrate(f) > getBitrate(format)\n          || (getBitrate(f) === getBitrate(format) && format.audioEncoding && !f.audioEncoding))\n          format = f;\n      }\n      break;\n\n    case 'lowestvideo':\n      formats = exports.filterFormats(formats, 'video')\n      format = null;\n      for (let f of formats) {\n        if (!format\n          || getBitrate(f) < getBitrate(format)\n          || (getBitrate(f) === getBitrate(format) && format.audioEncoding && !f.audioEncoding))\n          format = f;\n      }\n      break;\n\n    default: {\n      let getFormat = (itag) => {\n        return formats.find((format) => format.itag === '' + itag);\n      };\n      if (Array.isArray(quality)) {\n        quality.find((q) => format = getFormat(q));\n      } else {\n        format = getFormat(quality);\n      }\n    }\n\n  }\n\n  if (!format) {\n    return Error('No such format found: ' + quality);\n  }\n  return format;\n};\n\n\n/**\n * @param {Array.<Object>} formats\n * @param {Function} filter\n * @return {Array.<Object>}\n */\nexports.filterFormats = (formats, filter) => {\n  let fn;\n  switch (filter) {\n    case 'audioandvideo':\n      fn = (format) => format.bitrate && format.audioBitrate;\n      break;\n\n    case 'video':\n      fn = (format) => format.bitrate;\n      break;\n\n    case 'videoonly':\n      fn = (format) => format.bitrate && !format.audioBitrate;\n      break;\n\n    case 'audio':\n      fn = (format) => format.audioBitrate;\n      break;\n\n    case 'audioonly':\n      fn = (format) => !format.bitrate && format.audioBitrate;\n      break;\n\n    default:\n      if (typeof filter === 'function') {\n        fn = filter;\n      } else {\n        throw TypeError(`Given filter (${filter}) is not supported`);\n      }\n  }\n  return formats.filter(fn);\n};\n\n\n/**\n * String#indexOf() that supports regex too.\n *\n * @param {string} haystack\n * @param {string|RegExp} needle\n * @return {number}\n */\nconst indexOf = (haystack, needle) => {\n  return needle instanceof RegExp ?\n    haystack.search(needle) : haystack.indexOf(needle);\n};\n\n\n/**\n * Extract string inbetween another.\n *\n * @param {string} haystack\n * @param {string} left\n * @param {string} right\n * @return {string}\n */\nexports.between = (haystack, left, right) => {\n  let pos = indexOf(haystack, left);\n  if (pos === -1) { return ''; }\n  haystack = haystack.slice(pos + left.length);\n  pos = indexOf(haystack, right);\n  if (pos === -1) { return ''; }\n  haystack = haystack.slice(0, pos);\n  return haystack;\n};\n\n\n/**\n * Get video ID.\n *\n * There are a few type of video URL formats.\n *  - https://www.youtube.com/watch?v=VIDEO_ID\n *  - https://m.youtube.com/watch?v=VIDEO_ID\n *  - https://youtu.be/VIDEO_ID\n *  - https://www.youtube.com/v/VIDEO_ID\n *  - https://www.youtube.com/embed/VIDEO_ID\n *  - https://music.youtube.com/watch?v=VIDEO_ID\n *  - https://gaming.youtube.com/watch?v=VIDEO_ID\n *\n * @param {string} link\n * @return {string|Error}\n */\nconst validQueryDomains = new Set([\n  'youtube.com',\n  'www.youtube.com',\n  'm.youtube.com',\n  'music.youtube.com',\n  'gaming.youtube.com',\n]);\nconst validPathDomains = new Set([\n  'youtu.be',\n  'youtube.com',\n  'www.youtube.com',\n]);\nexports.getURLVideoID = (link) => {\n  const parsed = url.parse(link, true);\n  let id = parsed.query.v;\n  if (validPathDomains.has(parsed.hostname) && !id) {\n    const paths = parsed.pathname.split('/');\n    id = paths[paths.length - 1];\n  } else if (parsed.hostname && !validQueryDomains.has(parsed.hostname)) {\n    return Error('Not a YouTube domain');\n  }\n  if (!id) {\n    return Error('No video id found: ' + link);\n  }\n  id = id.substring(0, 11);\n  if (!exports.validateID(id)) {\n    return TypeError(`Video id (${id}) does not match expected ` +\n      `format (${idRegex.toString()})`);\n  }\n  return id;\n};\n\n\n/**\n * Gets video ID either from a url or by checking if the given string\n * matches the video ID format.\n *\n * @param {string} str\n * @return {string|Error}\n */\nexports.getVideoID = (str) => {\n  if (exports.validateID(str)) {\n    return str;\n  } else {\n    return exports.getURLVideoID(str);\n  }\n};\n\n\n/**\n * Returns true if given id satifies YouTube's id format.\n *\n * @param {string} id\n * @return {boolean}\n */\nconst idRegex = /^[a-zA-Z0-9-_]{11}$/;\nexports.validateID = (id) => {\n  return idRegex.test(id);\n};\n\n\n/**\n * Checks wether the input string includes a valid id.\n *\n * @param {string} string\n * @return {boolean}\n */\nexports.validateURL = (string) => {\n  return !(exports.getURLVideoID(string) instanceof Error);\n};\n\n\n/**\n * @param {Object} info\n * @return {Array.<Object>}\n */\nexports.parseFormats = (info) => {\n  let formats = [];\n  if (info.url_encoded_fmt_stream_map) {\n    formats = formats\n      .concat(info.url_encoded_fmt_stream_map.split(','));\n  }\n  if (info.adaptive_fmts) {\n    formats = formats.concat(info.adaptive_fmts.split(','));\n  }\n\n  formats = formats.map((format) => qs.parse(format));\n  delete info.url_encoded_fmt_stream_map;\n  delete info.adaptive_fmts;\n\n  return formats;\n};\n\n\n/**\n * @param {Object} format\n */\nexports.addFormatMeta = (format) => {\n  const meta = FORMATS[format.itag];\n  for (let key in meta) {\n    format[key] = meta[key];\n  }\n\n  format.live = /\\/source\\/yt_live_broadcast\\//.test(format.url);\n  format.isHLS = /\\/manifest\\/hls_(variant|playlist)\\//.test(format.url);\n  format.isDashMPD = /\\/manifest\\/dash\\//.test(format.url);\n};\n\n\n/**\n * Get only the string from an HTML string.\n *\n * @param {string} html\n * @return {string}\n */\nexports.stripHTML = (html) => {\n  return html\n    .replace(/\\n/g, ' ')\n    .replace(/\\s*<\\s*br\\s*\\/?\\s*>\\s*/gi, '\\n')\n    .replace(/<\\s*\\/\\s*p\\s*>\\s*<\\s*p[^>]*>/gi, '\\n')\n    .replace(/<.*?>/gi, '')\n    .trim();\n};\n\n\n/**\n * @param {Array.<Function>} funcs\n * @param {Function(!Error, Array.<Object>)} callback\n */\nexports.parallel = (funcs, callback) => {\n  let funcsDone = 0;\n  let errGiven = false;\n  let results = [];\n  const len = funcs.length;\n\n  const checkDone = (index, err, result) => {\n    if (errGiven) { return; }\n    if (err) {\n      errGiven = true;\n      callback(err);\n      return;\n    }\n    results[index] = result;\n    if (++funcsDone === len) {\n      callback(null, results);\n    }\n  };\n\n  if (len > 0) {\n    funcs.forEach((f, i) => { f(checkDone.bind(null, i)); });\n  } else {\n    callback(null, results);\n  }\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","const urllib      = require('url');\nconst querystring = require('querystring');\nconst sax         = require('sax');\nconst request     = require('miniget');\nconst util        = require('./util');\nconst extras      = require('./info-extras');\nconst sig         = require('./sig');\nconst FORMATS     = require('./formats');\n\n\nconst VIDEO_URL = 'https://www.youtube.com/watch?v=';\nconst EMBED_URL = 'https://www.youtube.com/embed/';\nconst VIDEO_EURL = 'https://youtube.googleapis.com/v/';\nconst INFO_HOST = 'www.youtube.com';\nconst INFO_PATH = '/get_video_info';\nconst KEYS_TO_SPLIT = [\n  'fmt_list',\n  'fexp',\n  'watermark'\n];\n\n\n/**\n * Gets info from a video without getting additional formats.\n *\n * @param {string} id\n * @param {Object} options\n * @param {Function(Error, Object)} callback\n */\nexports.getBasicInfo = (id, options, callback) => {\n  // Try getting config from the video page first.\n  const params = 'hl=' + (options.lang || 'en');\n  let url = VIDEO_URL + id + '&' + params +\n    '&bpctr=' + Math.ceil(Date.now() / 1000);\n\n  // Remove header from watch page request.\n  // Otherwise, it'll use a different framework for rendering content.\n  const reqOptions = Object.assign({}, options.requestOptions);\n  reqOptions.headers = Object.assign({}, reqOptions.headers, {\n    'User-Agent': ''\n  });\n\n  request(url, reqOptions, (err, res, body) => {\n    if (err) return callback(err);\n\n    // Check if there are any errors with this video page.\n    const unavailableMsg = util.between(body, '<div id=\"player-unavailable\"', '>');\n    if (unavailableMsg &&\n        !/\\bhid\\b/.test(util.between(unavailableMsg, 'class=\"', '\"'))) {\n      // Ignore error about age restriction.\n      if (!body.includes('<div id=\"watch7-player-age-gate-content\"')) {\n        return callback(Error(util.between(body,\n          '<h1 id=\"unavailable-message\" class=\"message\">', '</h1>').trim()));\n      }\n    }\n\n    // Parse out additional metadata from this page.\n    const additional = {\n      // Get the author/uploader.\n      author: extras.getAuthor(body),\n\n      // Get the day the vid was published.\n      published: extras.getPublished(body),\n\n      // Get description.\n      description: extras.getVideoDescription(body),\n\n      // Get media info.\n      media: extras.getVideoMedia(body),\n\n      // Get related videos.\n      related_videos: extras.getRelatedVideos(body),\n\n      // Give the standard link to the video.\n      video_url: VIDEO_URL + id,\n    };\n\n    const jsonStr = util.between(body, 'ytplayer.config = ', '</script>');\n    let config;\n    if (jsonStr) {\n      config = jsonStr.slice(0, jsonStr.lastIndexOf(';ytplayer.load'));\n      gotConfig(id, options, additional, config, false, callback);\n\n    } else {\n      // If the video page doesn't work, maybe because it has mature content.\n      // and requires an account logged in to view, try the embed page.\n      url = EMBED_URL + id + '?' + params;\n      request(url, options.requestOptions, (err, res, body) => {\n        if (err) return callback(err);\n        config = util.between(body, 't.setConfig({\\'PLAYER_CONFIG\\': ', /\\}(,'|\\}\\);)/);\n        gotConfig(id, options, additional, config, true, callback);\n      });\n    }\n  });\n};\n\n\n/**\n * @param {Object} id\n * @param {Object} options\n * @param {Object} additional\n * @param {Object} config\n * @param {boolean} fromEmbed\n * @param {Function(Error, Object)} callback\n */\nconst gotConfig = (id, options, additional, config, fromEmbed, callback) => {\n  if (!config) {\n    return callback(Error('Could not find player config'));\n  }\n  try {\n    config = JSON.parse(config + (fromEmbed ? '}' : ''));\n  } catch (err) {\n    return callback(Error('Error parsing config: ' + err.message));\n  }\n  const url = urllib.format({\n    protocol: 'https',\n    host: INFO_HOST,\n    pathname: INFO_PATH,\n    query: {\n      video_id: id,\n      eurl: VIDEO_EURL + id,\n      ps: 'default',\n      gl: 'US',\n      hl: (options.lang || 'en'),\n      sts: config.sts,\n    },\n  });\n  request(url, options.requestOptions, (err, res, body) => {\n    if (err) return callback(err);\n    let info = querystring.parse(body);\n\n    if (info.status === 'fail') {\n      if (config.args && (config.args.fmt_list ||\n        config.args.url_encoded_fmt_stream_map || config.args.adaptive_fmts)) {\n        info = config.args;\n        info.no_embed_allowed = true;\n      } else {\n        return callback(\n          Error(`Code ${info.errorcode}: ${util.stripHTML(info.reason)}`));\n      }\n    }\n\n    const player_response = config.args.player_response || info.player_response;\n    if (player_response) {\n      try {\n        info.player_response = JSON.parse(player_response);\n      } catch (err) {\n        return callback(\n          Error('Error parsing `player_response`: ' + err.message));\n      }\n      let playability = info.player_response.playabilityStatus;\n      if (playability && playability.status === 'UNPLAYABLE') {\n        return callback(Error(playability.reason));\n      }\n    }\n\n    // Split some keys by commas.\n    KEYS_TO_SPLIT.forEach((key) => {\n      if (!info[key]) return;\n      info[key] = info[key]\n        .split(',')\n        .filter((v) => v !== '');\n    });\n\n    info.fmt_list = info.fmt_list ?\n      info.fmt_list.map((format) => format.split('/')) : [];\n\n    info.formats = util.parseFormats(info);\n\n    // Add additional properties to info.\n    Object.assign(info, additional);\n    info.age_restricted = fromEmbed;\n    info.html5player = config.assets.js;\n\n    callback(null, info);\n  });\n};\n\n\n/**\n * Gets info from a video additional formats and deciphered URLs.\n *\n * @param {string} id\n * @param {Object} options\n * @param {Function(Error, Object)} callback\n */\nexports.getFullInfo = (id, options, callback) => {\n  return exports.getBasicInfo(id, options, (err, info) => {\n    if (err) return callback(err);\n    const hasManifest =\n      info.player_response && info.player_response.streamingData && (\n        info.player_response.streamingData.dashManifestUrl ||\n        info.player_response.streamingData.hlsManifestUrl\n      );\n    if (info.formats.length || hasManifest) {\n      const html5playerfile = urllib.resolve(VIDEO_URL, info.html5player);\n      sig.getTokens(html5playerfile, options, (err, tokens) => {\n        if (err) return callback(err);\n\n        sig.decipherFormats(info.formats, tokens, options.debug);\n        let funcs = [];\n        if (hasManifest && info.player_response.streamingData.dashManifestUrl) {\n          let url = decipherURL(info.player_response.streamingData.dashManifestUrl, tokens);\n          funcs.push(getDashManifest.bind(null, url, options));\n        }\n        if (hasManifest && info.player_response.streamingData.hlsManifestUrl) {\n          let url = decipherURL(info.player_response.streamingData.hlsManifestUrl, tokens);\n          funcs.push(getM3U8.bind(null, url, options));\n        }\n\n        util.parallel(funcs, (err, results) => {\n          if (err) return callback(err);\n          if (results[0]) { mergeFormats(info, results[0]); }\n          if (results[1]) { mergeFormats(info, results[1]); }\n          if (!info.formats.length) {\n            callback(Error('No formats found'));\n            return;\n          }\n\n          if (options.debug) {\n            info.formats.forEach((format) => {\n              const itag = format.itag;\n              if (!FORMATS[itag]) {\n                console.warn(`No format metadata for itag ${itag} found`);\n              }\n            });\n          }\n\n          info.formats.forEach(util.addFormatMeta);\n          info.formats.sort(util.sortFormats);\n          info.full = true;\n          callback(null, info);\n        });\n      });\n    } else {\n      callback(Error('This video is unavailable'));\n    }\n  });\n};\n\n\n/**\n * @param {string} url\n * @param {Array.<string>} tokens\n */\nconst decipherURL = (url, tokens) => {\n  return url.replace(/\\/s\\/([a-fA-F0-9.]+)/, (_, s) => {\n    return '/signature/' + sig.decipher(tokens, s);\n  });\n};\n\n\n/**\n * Merges formats from DASH or M3U8 with formats from video info page.\n *\n * @param {Object} info\n * @param {Object} formatsMap\n */\nconst mergeFormats = (info, formatsMap) => {\n  info.formats.forEach((f) => {\n    if (!formatsMap[f.itag]) {\n      formatsMap[f.itag] = f;\n    }\n  });\n  info.formats = [];\n  for (let itag in formatsMap) { info.formats.push(formatsMap[itag]); }\n};\n\n\n/**\n * Gets additional DASH formats.\n *\n * @param {string} url\n * @param {Object} options\n * @param {Function(!Error, Array.<Object>)} callback\n */\nconst getDashManifest = (url, options, callback) => {\n  let formats = {};\n\n  const parser = sax.parser(false);\n  parser.onerror = callback;\n  parser.onopentag = (node) => {\n    if (node.name === 'REPRESENTATION') {\n      const itag = node.attributes.ID;\n      formats[itag] = { itag, url };\n    }\n  };\n  parser.onend = () => { callback(null, formats); };\n\n  const req = request(urllib.resolve(VIDEO_URL, url), options.requestOptions);\n  req.setEncoding('utf8');\n  req.on('error', callback);\n  req.on('data', (chunk) => { parser.write(chunk); });\n  req.on('end', parser.close.bind(parser));\n};\n\n\n/**\n * Gets additional formats.\n *\n * @param {string} url\n * @param {Object} options\n * @param {Function(!Error, Array.<Object>)} callback\n */\nconst getM3U8 = (url, options, callback) => {\n  url = urllib.resolve(VIDEO_URL, url);\n  request(url, options.requestOptions, (err, res, body) => {\n    if (err) return callback(err);\n\n    let formats = {};\n    body\n      .split('\\n')\n      .filter((line) => /https?:\\/\\//.test(line))\n      .forEach((line) => {\n        const itag = line.match(/\\/itag\\/(\\d+)\\//)[1];\n        formats[itag] = { itag: itag, url: line };\n      });\n    callback(null, formats);\n  });\n};\n\n\n// Cached for getting basic/full info.\nexports.cache = new Map();\nexports.cache.timeout = 1000;\n\n\n// Cache get info functions.\n// In case a user wants to get a video's info before downloading.\nfor (let fnName of ['getBasicInfo', 'getFullInfo']) {\n  /**\n   * @param {string} link\n   * @param {Object} options\n   * @param {Function(Error, Object)} callback\n   */\n  const fn = exports[fnName];\n  exports[fnName] = (link, options, callback) => {\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    } else if (!options) {\n      options = {};\n    }\n\n    if (!callback) {\n      return new Promise((resolve, reject) => {\n        exports[fnName](link, options, (err, info) => {\n          if (err) return reject(err);\n          resolve(info);\n        });\n      });\n    }\n\n    const id = util.getVideoID(link);\n    if (id instanceof Error) return callback(id);\n\n    const key = [fnName, id, options.lang].join('-');\n    if (exports.cache.has(key)) {\n      callback(null, exports.cache.get(key));\n    } else {\n      fn(id, options, (err, info) => {\n        if (err) return callback(err);\n        exports.cache.set(key, info);\n        setTimeout(() => { exports.cache.delete(key); }, exports.cache.timeout);\n        callback(null, info);\n      });\n    }\n  };\n}\n\n\n// Export a few helpers.\nexports.validateID = util.validateID;\nexports.validateURL = util.validateURL;\nexports.getURLVideoID = util.getURLVideoID;\nexports.getVideoID = util.getVideoID;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","module.exports = {\n  XmlEntities: require('./lib/xml-entities.js'),\n  Html4Entities: require('./lib/html4-entities.js'),\n  Html5Entities: require('./lib/html5-entities.js'),\n  AllHtmlEntities: require('./lib/html5-entities.js')\n};\n","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","module.exports = {\n  \"100\": \"Continue\",\n  \"101\": \"Switching Protocols\",\n  \"102\": \"Processing\",\n  \"200\": \"OK\",\n  \"201\": \"Created\",\n  \"202\": \"Accepted\",\n  \"203\": \"Non-Authoritative Information\",\n  \"204\": \"No Content\",\n  \"205\": \"Reset Content\",\n  \"206\": \"Partial Content\",\n  \"207\": \"Multi-Status\",\n  \"208\": \"Already Reported\",\n  \"226\": \"IM Used\",\n  \"300\": \"Multiple Choices\",\n  \"301\": \"Moved Permanently\",\n  \"302\": \"Found\",\n  \"303\": \"See Other\",\n  \"304\": \"Not Modified\",\n  \"305\": \"Use Proxy\",\n  \"307\": \"Temporary Redirect\",\n  \"308\": \"Permanent Redirect\",\n  \"400\": \"Bad Request\",\n  \"401\": \"Unauthorized\",\n  \"402\": \"Payment Required\",\n  \"403\": \"Forbidden\",\n  \"404\": \"Not Found\",\n  \"405\": \"Method Not Allowed\",\n  \"406\": \"Not Acceptable\",\n  \"407\": \"Proxy Authentication Required\",\n  \"408\": \"Request Timeout\",\n  \"409\": \"Conflict\",\n  \"410\": \"Gone\",\n  \"411\": \"Length Required\",\n  \"412\": \"Precondition Failed\",\n  \"413\": \"Payload Too Large\",\n  \"414\": \"URI Too Long\",\n  \"415\": \"Unsupported Media Type\",\n  \"416\": \"Range Not Satisfiable\",\n  \"417\": \"Expectation Failed\",\n  \"418\": \"I'm a teapot\",\n  \"421\": \"Misdirected Request\",\n  \"422\": \"Unprocessable Entity\",\n  \"423\": \"Locked\",\n  \"424\": \"Failed Dependency\",\n  \"425\": \"Unordered Collection\",\n  \"426\": \"Upgrade Required\",\n  \"428\": \"Precondition Required\",\n  \"429\": \"Too Many Requests\",\n  \"431\": \"Request Header Fields Too Large\",\n  \"451\": \"Unavailable For Legal Reasons\",\n  \"500\": \"Internal Server Error\",\n  \"501\": \"Not Implemented\",\n  \"502\": \"Bad Gateway\",\n  \"503\": \"Service Unavailable\",\n  \"504\": \"Gateway Timeout\",\n  \"505\": \"HTTP Version Not Supported\",\n  \"506\": \"Variant Also Negotiates\",\n  \"507\": \"Insufficient Storage\",\n  \"508\": \"Loop Detected\",\n  \"509\": \"Bandwidth Limit Exceeded\",\n  \"510\": \"Not Extended\",\n  \"511\": \"Network Authentication Required\"\n}\n","const http        = require('http');\nconst https       = require('https');\nconst urlParse    = require('url').parse;\nconst PassThrough = require('stream').PassThrough;\n\n\nconst httpLibs = { 'http:': http, 'https:': https };\nconst redirectCodes = { 301: true, 302: true, 303: true, 307: true };\nconst defaults = {\n  maxRedirects: 2,\n  maxRetries: 2,\n  maxReconnects: 0,\n  backoff: { inc: 100, max: 10000 },\n  highWaterMark: null,\n  transform: null,\n  acceptEncoding: null,\n};\n\n/**\n* @param {string} url\n* @param {!Object} options\n* @param {!Function(Error, http.IncomingMessage, string)} callback\n* @return {stream.Readable}\n*/\nmodule.exports = (url, options, callback) => {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  } else if (!options) {\n    options = {};\n  }\n  options = Object.assign({}, defaults, options);\n  const stream = new PassThrough({ highWaterMark: options.highWaterMark });\n  let myreq, myres;\n  let aborted = false;\n  let redirects = 0;\n  let retries = 0;\n  let retryTimeout;\n  let reconnects = 0;\n  let contentLength;\n  let acceptRanges = false;\n  let rangeStart = 0, rangeEnd;\n  let downloaded = 0;\n\n  // Check if this is a ranged request.\n  if (options.headers && options.headers.Range) {\n    let r = /bytes=(\\d+)-(\\d+)?/.exec(options.headers.Range);\n    if (r) {\n      rangeStart = parseInt(r[1], 10);\n      rangeEnd = parseInt(r[2], 10);\n    }\n  }\n\n  // Add `Accept-Encoding` header.\n  if (options.acceptEncoding) {\n    options.headers = Object.assign({\n      'Accept-Encoding': Object.keys(options.acceptEncoding).join(', ')\n    }, options.headers);\n  }\n\n  const onRequestError = (err, statusCode) => {\n    if (!aborted) {\n      // If there is an error when the download has already started,\n      // but not finished, try reconnecting.\n      if (myres && acceptRanges &&\n        0 < downloaded && downloaded < contentLength) {\n        if (reconnects++ < options.maxReconnects) {\n          myres = null;\n          retries = 0;\n          let ms = Math.min(options.backoff.inc, options.backoff.max);\n          retryTimeout = setTimeout(doDownload, ms);\n          stream.emit('reconnect', reconnects, err);\n          return;\n        }\n      } else if ((!statusCode || err.message === 'ENOTFOUND') &&\n        retries++ < options.maxRetries) {\n        let ms = Math.min(retries * options.backoff.inc, options.backoff.max);\n        retryTimeout = setTimeout(doDownload, ms);\n        stream.emit('retry', retries, err);\n        return;\n      }\n    }\n    stream.emit('error', err);\n  };\n\n  const doDownload = () => {\n    if (aborted) { return; }\n    let parsed = urlParse(url);\n    let httpLib = httpLibs[parsed.protocol];\n    if (!httpLib) {\n      stream.emit('error', Error('Invalid URL: ' + url));\n      return;\n    }\n\n    Object.assign(parsed, options);\n    for (let key in defaults) {\n      delete parsed[key];\n    }\n    if (acceptRanges && downloaded > 0) {\n      parsed.headers = Object.assign({}, parsed.headers, {\n        Range: `bytes=${downloaded + rangeStart}-${rangeEnd || ''}`\n      });\n    }\n\n    if (options.transform) {\n      parsed = options.transform(parsed);\n      if (parsed.protocol) {\n        httpLib = httpLibs[parsed.protocol];\n      }\n    }\n\n    myreq = httpLib.get(parsed, (res) => {\n      if (redirectCodes[res.statusCode] === true) {\n        if (redirects++ >= options.maxRedirects) {\n          stream.emit('error', Error('Too many redirects'));\n        } else {\n          url = res.headers.location;\n          stream.emit('redirect', url);\n          doDownload();\n        }\n        return;\n      } else if (res.statusCode < 200 || 400 <= res.statusCode) {\n        let err = Error('Status code: ' + res.statusCode);\n        if (res.statusCode >= 500) {\n          onRequestError(err, res.statusCode);\n        } else {\n          stream.emit('error', err);\n        }\n        return;\n      }\n      let decoded = res;\n      if (options.acceptEncoding && res.headers['content-encoding']) {\n        for (let enc of res.headers['content-encoding'].split(', ').reverse()) {\n          let fn = options.acceptEncoding[enc];\n          if (fn != null) {\n            decoded = decoded.pipe(fn(decoded));\n            decoded.on('error', stream.emit.bind(stream, 'error'));\n          }\n        }\n      }\n      if (!contentLength) {\n        contentLength = parseInt(res.headers['content-length'], 10);\n        acceptRanges = res.headers['accept-ranges'] === 'bytes' &&\n          contentLength > 0 && options.maxReconnects > 0;\n      }\n      if (acceptRanges) {\n        res.on('data', (chunk) => { downloaded += chunk.length; });\n        decoded.on('end', () => {\n          if (downloaded === contentLength) {\n            stream.end();\n          }\n        });\n      }\n      decoded.pipe(stream, { end: !acceptRanges });\n      myres = decoded;\n      stream.emit('response', res);\n      res.on('error', stream.emit.bind(stream, 'error'));\n    });\n    myreq.on('error', onRequestError);\n    stream.emit('request', myreq);\n  };\n\n  stream.abort = () => {\n    aborted = true;\n    stream.emit('abort');\n    if (myreq) { myreq.abort(); }\n    if (myres) { myres.unpipe(stream); }\n    clearTimeout(retryTimeout);\n  };\n\n  process.nextTick(doDownload);\n  if (callback) {\n    let body = '';\n    stream.setEncoding('utf8');\n    stream.on('data', (chunk) => { body += chunk; });\n    stream.on('end', () => { callback(null, myres, body); });\n    stream.on('error', callback);\n  }\n  return callback ? null : stream;\n};\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n","var capability = require('./capability')\nvar inherits = require('inherits')\nvar response = require('./response')\nvar stream = require('readable-stream')\nvar toArrayBuffer = require('to-arraybuffer')\n\nvar IncomingMessage = response.IncomingMessage\nvar rStates = response.readyStates\n\nfunction decideMode (preferBinary, useFetch) {\n\tif (capability.fetch && useFetch) {\n\t\treturn 'fetch'\n\t} else if (capability.mozchunkedarraybuffer) {\n\t\treturn 'moz-chunked-arraybuffer'\n\t} else if (capability.msstream) {\n\t\treturn 'ms-stream'\n\t} else if (capability.arraybuffer && preferBinary) {\n\t\treturn 'arraybuffer'\n\t} else if (capability.vbArray && preferBinary) {\n\t\treturn 'text:vbarray'\n\t} else {\n\t\treturn 'text'\n\t}\n}\n\nvar ClientRequest = module.exports = function (opts) {\n\tvar self = this\n\tstream.Writable.call(self)\n\n\tself._opts = opts\n\tself._body = []\n\tself._headers = {}\n\tif (opts.auth)\n\t\tself.setHeader('Authorization', 'Basic ' + new Buffer(opts.auth).toString('base64'))\n\tObject.keys(opts.headers).forEach(function (name) {\n\t\tself.setHeader(name, opts.headers[name])\n\t})\n\n\tvar preferBinary\n\tvar useFetch = true\n\tif (opts.mode === 'disable-fetch' || ('requestTimeout' in opts && !capability.abortController)) {\n\t\t// If the use of XHR should be preferred. Not typically needed.\n\t\tuseFetch = false\n\t\tpreferBinary = true\n\t} else if (opts.mode === 'prefer-streaming') {\n\t\t// If streaming is a high priority but binary compatibility and\n\t\t// the accuracy of the 'content-type' header aren't\n\t\tpreferBinary = false\n\t} else if (opts.mode === 'allow-wrong-content-type') {\n\t\t// If streaming is more important than preserving the 'content-type' header\n\t\tpreferBinary = !capability.overrideMimeType\n\t} else if (!opts.mode || opts.mode === 'default' || opts.mode === 'prefer-fast') {\n\t\t// Use binary if text streaming may corrupt data or the content-type header, or for speed\n\t\tpreferBinary = true\n\t} else {\n\t\tthrow new Error('Invalid value for opts.mode')\n\t}\n\tself._mode = decideMode(preferBinary, useFetch)\n\tself._fetchTimer = null\n\n\tself.on('finish', function () {\n\t\tself._onFinish()\n\t})\n}\n\ninherits(ClientRequest, stream.Writable)\n\nClientRequest.prototype.setHeader = function (name, value) {\n\tvar self = this\n\tvar lowerName = name.toLowerCase()\n\t// This check is not necessary, but it prevents warnings from browsers about setting unsafe\n\t// headers. To be honest I'm not entirely sure hiding these warnings is a good thing, but\n\t// http-browserify did it, so I will too.\n\tif (unsafeHeaders.indexOf(lowerName) !== -1)\n\t\treturn\n\n\tself._headers[lowerName] = {\n\t\tname: name,\n\t\tvalue: value\n\t}\n}\n\nClientRequest.prototype.getHeader = function (name) {\n\tvar header = this._headers[name.toLowerCase()]\n\tif (header)\n\t\treturn header.value\n\treturn null\n}\n\nClientRequest.prototype.removeHeader = function (name) {\n\tvar self = this\n\tdelete self._headers[name.toLowerCase()]\n}\n\nClientRequest.prototype._onFinish = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\tvar opts = self._opts\n\n\tvar headersObj = self._headers\n\tvar body = null\n\tif (opts.method !== 'GET' && opts.method !== 'HEAD') {\n\t\tif (capability.arraybuffer) {\n\t\t\tbody = toArrayBuffer(Buffer.concat(self._body))\n\t\t} else if (capability.blobConstructor) {\n\t\t\tbody = new global.Blob(self._body.map(function (buffer) {\n\t\t\t\treturn toArrayBuffer(buffer)\n\t\t\t}), {\n\t\t\t\ttype: (headersObj['content-type'] || {}).value || ''\n\t\t\t})\n\t\t} else {\n\t\t\t// get utf8 string\n\t\t\tbody = Buffer.concat(self._body).toString()\n\t\t}\n\t}\n\n\t// create flattened list of headers\n\tvar headersList = []\n\tObject.keys(headersObj).forEach(function (keyName) {\n\t\tvar name = headersObj[keyName].name\n\t\tvar value = headersObj[keyName].value\n\t\tif (Array.isArray(value)) {\n\t\t\tvalue.forEach(function (v) {\n\t\t\t\theadersList.push([name, v])\n\t\t\t})\n\t\t} else {\n\t\t\theadersList.push([name, value])\n\t\t}\n\t})\n\n\tif (self._mode === 'fetch') {\n\t\tvar signal = null\n\t\tvar fetchTimer = null\n\t\tif (capability.abortController) {\n\t\t\tvar controller = new AbortController()\n\t\t\tsignal = controller.signal\n\t\t\tself._fetchAbortController = controller\n\n\t\t\tif ('requestTimeout' in opts && opts.requestTimeout !== 0) {\n\t\t\t\tself._fetchTimer = global.setTimeout(function () {\n\t\t\t\t\tself.emit('requestTimeout')\n\t\t\t\t\tif (self._fetchAbortController)\n\t\t\t\t\t\tself._fetchAbortController.abort()\n\t\t\t\t}, opts.requestTimeout)\n\t\t\t}\n\t\t}\n\n\t\tglobal.fetch(self._opts.url, {\n\t\t\tmethod: self._opts.method,\n\t\t\theaders: headersList,\n\t\t\tbody: body || undefined,\n\t\t\tmode: 'cors',\n\t\t\tcredentials: opts.withCredentials ? 'include' : 'same-origin',\n\t\t\tsignal: signal\n\t\t}).then(function (response) {\n\t\t\tself._fetchResponse = response\n\t\t\tself._connect()\n\t\t}, function (reason) {\n\t\t\tglobal.clearTimeout(self._fetchTimer)\n\t\t\tif (!self._destroyed)\n\t\t\t\tself.emit('error', reason)\n\t\t})\n\t} else {\n\t\tvar xhr = self._xhr = new global.XMLHttpRequest()\n\t\ttry {\n\t\t\txhr.open(self._opts.method, self._opts.url, true)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\n\t\t// Can't set responseType on really old browsers\n\t\tif ('responseType' in xhr)\n\t\t\txhr.responseType = self._mode.split(':')[0]\n\n\t\tif ('withCredentials' in xhr)\n\t\t\txhr.withCredentials = !!opts.withCredentials\n\n\t\tif (self._mode === 'text' && 'overrideMimeType' in xhr)\n\t\t\txhr.overrideMimeType('text/plain; charset=x-user-defined')\n\n\t\tif ('requestTimeout' in opts) {\n\t\t\txhr.timeout = opts.requestTimeout\n\t\t\txhr.ontimeout = function () {\n\t\t\t\tself.emit('requestTimeout')\n\t\t\t}\n\t\t}\n\n\t\theadersList.forEach(function (header) {\n\t\t\txhr.setRequestHeader(header[0], header[1])\n\t\t})\n\n\t\tself._response = null\n\t\txhr.onreadystatechange = function () {\n\t\t\tswitch (xhr.readyState) {\n\t\t\t\tcase rStates.LOADING:\n\t\t\t\tcase rStates.DONE:\n\t\t\t\t\tself._onXHRProgress()\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\t// Necessary for streaming in Firefox, since xhr.response is ONLY defined\n\t\t// in onprogress, not in onreadystatechange with xhr.readyState = 3\n\t\tif (self._mode === 'moz-chunked-arraybuffer') {\n\t\t\txhr.onprogress = function () {\n\t\t\t\tself._onXHRProgress()\n\t\t\t}\n\t\t}\n\n\t\txhr.onerror = function () {\n\t\t\tif (self._destroyed)\n\t\t\t\treturn\n\t\t\tself.emit('error', new Error('XHR error'))\n\t\t}\n\n\t\ttry {\n\t\t\txhr.send(body)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\t}\n}\n\n/**\n * Checks if xhr.status is readable and non-zero, indicating no error.\n * Even though the spec says it should be available in readyState 3,\n * accessing it throws an exception in IE8\n */\nfunction statusValid (xhr) {\n\ttry {\n\t\tvar status = xhr.status\n\t\treturn (status !== null && status !== 0)\n\t} catch (e) {\n\t\treturn false\n\t}\n}\n\nClientRequest.prototype._onXHRProgress = function () {\n\tvar self = this\n\n\tif (!statusValid(self._xhr) || self._destroyed)\n\t\treturn\n\n\tif (!self._response)\n\t\tself._connect()\n\n\tself._response._onXHRProgress()\n}\n\nClientRequest.prototype._connect = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\n\tself._response = new IncomingMessage(self._xhr, self._fetchResponse, self._mode, self._fetchTimer)\n\tself._response.on('error', function(err) {\n\t\tself.emit('error', err)\n\t})\n\n\tself.emit('response', self._response)\n}\n\nClientRequest.prototype._write = function (chunk, encoding, cb) {\n\tvar self = this\n\n\tself._body.push(chunk)\n\tcb()\n}\n\nClientRequest.prototype.abort = ClientRequest.prototype.destroy = function () {\n\tvar self = this\n\tself._destroyed = true\n\tglobal.clearTimeout(self._fetchTimer)\n\tif (self._response)\n\t\tself._response._destroyed = true\n\tif (self._xhr)\n\t\tself._xhr.abort()\n\telse if (self._fetchAbortController)\n\t\tself._fetchAbortController.abort()\n}\n\nClientRequest.prototype.end = function (data, encoding, cb) {\n\tvar self = this\n\tif (typeof data === 'function') {\n\t\tcb = data\n\t\tdata = undefined\n\t}\n\n\tstream.Writable.prototype.end.call(self, data, encoding, cb)\n}\n\nClientRequest.prototype.flushHeaders = function () {}\nClientRequest.prototype.setTimeout = function () {}\nClientRequest.prototype.setNoDelay = function () {}\nClientRequest.prototype.setSocketKeepAlive = function () {}\n\n// Taken from http://www.w3.org/TR/XMLHttpRequest/#the-setrequestheader%28%29-method\nvar unsafeHeaders = [\n\t'accept-charset',\n\t'accept-encoding',\n\t'access-control-request-headers',\n\t'access-control-request-method',\n\t'connection',\n\t'content-length',\n\t'cookie',\n\t'cookie2',\n\t'date',\n\t'dnt',\n\t'expect',\n\t'host',\n\t'keep-alive',\n\t'origin',\n\t'referer',\n\t'te',\n\t'trailer',\n\t'transfer-encoding',\n\t'upgrade',\n\t'via'\n]\n","const url     = require('url');\nconst request = require('miniget');\n\n\n// A shared cache to keep track of html5player.js tokens.\nexports.cache = new Map();\n\n\n/**\n * Extract signature deciphering tokens from html5player file.\n *\n * @param {string} html5playerfile\n * @param {Object} options\n * @param {Function(!Error, Array.<string>)} callback\n */\nexports.getTokens = (html5playerfile, options, callback) => {\n  let key, cachedTokens;\n  const rs = /(?:html5)?player[-_]([a-zA-Z0-9\\-_]+)(?:\\.js|\\/)/\n    .exec(html5playerfile);\n  if (rs) {\n    key = rs[1];\n    cachedTokens = exports.cache.get(key);\n  } else {\n    console.warn('Could not extract html5player key:', html5playerfile);\n  }\n  if (cachedTokens) {\n    callback(null, cachedTokens);\n  } else {\n    request(html5playerfile, options.requestOptions, (err, res, body) => {\n      if (err) return callback(err);\n\n      const tokens = exports.extractActions(body);\n      if (key && (!tokens || !tokens.length)) {\n        callback(Error('Could not extract signature deciphering actions'));\n        return;\n      }\n\n      exports.cache.set(key, tokens);\n      callback(null, tokens);\n    });\n  }\n};\n\n\n/**\n * Decipher a signature based on action tokens.\n *\n * @param {Array.<string>} tokens\n * @param {string} sig\n * @return {string}\n */\nexports.decipher = (tokens, sig) => {\n  sig = sig.split('');\n  for (let i = 0, len = tokens.length; i < len; i++) {\n    let token = tokens[i], pos;\n    switch (token[0]) {\n      case 'r':\n        sig = sig.reverse();\n        break;\n      case 'w':\n        pos = ~~token.slice(1);\n        sig = swapHeadAndPosition(sig, pos);\n        break;\n      case 's':\n        pos = ~~token.slice(1);\n        sig = sig.slice(pos);\n        break;\n      case 'p':\n        pos = ~~token.slice(1);\n        sig.splice(0, pos);\n        break;\n    }\n  }\n  return sig.join('');\n};\n\n\n/**\n * Swaps the first element of an array with one of given position.\n *\n * @param {Array.<Object>} arr\n * @param {number} position\n * @return {Array.<Object>}\n */\nconst swapHeadAndPosition = (arr, position) => {\n  const first = arr[0];\n  arr[0] = arr[position % arr.length];\n  arr[position] = first;\n  return arr;\n};\n\n\nconst jsVarStr = '[a-zA-Z_\\\\$][a-zA-Z_0-9]*';\nconst jsSingleQuoteStr = `'[^'\\\\\\\\]*(:?\\\\\\\\[\\\\s\\\\S][^'\\\\\\\\]*)*'`;\nconst jsDoubleQuoteStr = `\"[^\"\\\\\\\\]*(:?\\\\\\\\[\\\\s\\\\S][^\"\\\\\\\\]*)*\"`;\nconst jsQuoteStr = `(?:${jsSingleQuoteStr}|${jsDoubleQuoteStr})`;\nconst jsKeyStr = `(?:${jsVarStr}|${jsQuoteStr})`;\nconst jsPropStr = `(?:\\\\.${jsVarStr}|\\\\[${jsQuoteStr}\\\\])`;\nconst jsEmptyStr = `(?:''|\"\")`;\nconst reverseStr = ':function\\\\(a\\\\)\\\\{' +\n  '(?:return )?a\\\\.reverse\\\\(\\\\)' +\n'\\\\}';\nconst sliceStr = ':function\\\\(a,b\\\\)\\\\{' +\n  'return a\\\\.slice\\\\(b\\\\)' +\n'\\\\}';\nconst spliceStr = ':function\\\\(a,b\\\\)\\\\{' +\n  'a\\\\.splice\\\\(0,b\\\\)' +\n'\\\\}';\nconst swapStr = ':function\\\\(a,b\\\\)\\\\{' +\n  'var c=a\\\\[0\\\\];a\\\\[0\\\\]=a\\\\[b(?:%a\\\\.length)?\\\\];a\\\\[b(?:%a\\\\.length)?\\\\]=c(?:;return a)?' +\n'\\\\}';\nconst actionsObjRegexp = new RegExp(\n  `var (${jsVarStr})=\\\\{((?:(?:` +\n    jsKeyStr + reverseStr + '|' +\n    jsKeyStr + sliceStr   + '|' +\n    jsKeyStr + spliceStr  + '|' +\n    jsKeyStr + swapStr +\n  '),?\\\\r?\\\\n?)+)\\\\};'\n);\nconst actionsFuncRegexp = new RegExp(`function(?: ${jsVarStr})?\\\\(a\\\\)\\\\{` +\n    `a=a\\\\.split\\\\(${jsEmptyStr}\\\\);\\\\s*` +\n    `((?:(?:a=)?${jsVarStr}` +\n    jsPropStr +\n    '\\\\(a,\\\\d+\\\\);)+)' +\n    `return a\\\\.join\\\\(${jsEmptyStr}\\\\)` +\n  '\\\\}'\n);\nconst reverseRegexp = new RegExp(`(?:^|,)(${jsKeyStr})${reverseStr}`, 'm');\nconst sliceRegexp   = new RegExp(`(?:^|,)(${jsKeyStr})${sliceStr}`, 'm');\nconst spliceRegexp  = new RegExp(`(?:^|,)(${jsKeyStr})${spliceStr}`, 'm');\nconst swapRegexp    = new RegExp(`(?:^|,)(${jsKeyStr})${swapStr}`, 'm');\n\n\n/**\n * Extracts the actions that should be taken to decipher a signature.\n *\n * This searches for a function that performs string manipulations on\n * the signature. We already know what the 3 possible changes to a signature\n * are in order to decipher it. There is\n *\n * * Reversing the string.\n * * Removing a number of characters from the beginning.\n * * Swapping the first character with another position.\n *\n * Note, `Array#slice()` used to be used instead of `Array#splice()`,\n * it's kept in case we encounter any older html5player files.\n *\n * After retrieving the function that does this, we can see what actions\n * it takes on a signature.\n *\n * @param {string} body\n * @return {Array.<string>}\n */\nexports.extractActions = (body) => {\n  const objResult = actionsObjRegexp.exec(body);\n  const funcResult = actionsFuncRegexp.exec(body);\n  if (!objResult || !funcResult) { return null; }\n\n  const obj      = objResult[1].replace(/\\$/g, '\\\\$');\n  const objBody  = objResult[2].replace(/\\$/g, '\\\\$');\n  const funcBody = funcResult[1].replace(/\\$/g, '\\\\$');\n\n  let result = reverseRegexp.exec(objBody);\n  const reverseKey = result && result[1]\n    .replace(/\\$/g, '\\\\$')\n    .replace(/\\$|^'|^\"|'$|\"$/g, '');\n  result = sliceRegexp.exec(objBody);\n  const sliceKey = result && result[1]\n    .replace(/\\$/g, '\\\\$')\n    .replace(/\\$|^'|^\"|'$|\"$/g, '');\n  result = spliceRegexp.exec(objBody);\n  const spliceKey = result && result[1]\n    .replace(/\\$/g, '\\\\$')\n    .replace(/\\$|^'|^\"|'$|\"$/g, '');\n  result = swapRegexp.exec(objBody);\n  const swapKey = result && result[1]\n    .replace(/\\$/g, '\\\\$')\n    .replace(/\\$|^'|^\"|'$|\"$/g, '');\n\n  const keys = `(${[reverseKey, sliceKey, spliceKey, swapKey].join('|')})`;\n  const myreg = '(?:a=)?' + obj +\n    `(?:\\\\.${keys}|\\\\['${keys}'\\\\]|\\\\[\"${keys}\"\\\\])` +\n    '\\\\(a,(\\\\d+)\\\\)';\n  const tokenizeRegexp = new RegExp(myreg, 'g');\n  const tokens = [];\n  while ((result = tokenizeRegexp.exec(funcBody)) !== null) {\n    let key = result[1] || result[2] || result[3];\n    switch (key) {\n      case swapKey:\n        tokens.push('w' + result[4]);\n        break;\n      case reverseKey:\n        tokens.push('r');\n        break;\n      case sliceKey:\n        tokens.push('s' + result[4]);\n        break;\n      case spliceKey:\n        tokens.push('p' + result[4]);\n        break;\n    }\n  }\n  return tokens;\n};\n\n\n/**\n * @param {Object} format\n * @param {string} sig\n * @param {boolean} debug\n */\nexports.setDownloadURL = (format, sig, debug) => {\n  let decodedUrl;\n  if (format.url) {\n    decodedUrl = format.url;\n  } else {\n    if (debug) {\n      console.warn('Download url not found for itag ' + format.itag);\n    }\n    return;\n  }\n\n  try {\n    decodedUrl = decodeURIComponent(decodedUrl);\n  } catch (err) {\n    if (debug) {\n      console.warn('Could not decode url: ' + err.message);\n    }\n    return;\n  }\n\n  // Make some adjustments to the final url.\n  const parsedUrl = url.parse(decodedUrl, true);\n\n  // Deleting the `search` part is necessary otherwise changes to\n  // `query` won't reflect when running `url.format()`\n  delete parsedUrl.search;\n\n  let query = parsedUrl.query;\n\n  // This is needed for a speedier download.\n  // See https://github.com/fent/node-ytdl-core/issues/127\n  query.ratebypass = 'yes';\n  if (sig) {\n    query.signature = sig;\n  }\n\n  format.url = url.format(parsedUrl);\n};\n\n\n/**\n * Applies `sig.decipher()` to all format URL's.\n *\n * @param {Array.<Object>} formats\n * @param {Array.<string>} tokens\n * @param {boolean} debug\n */\nexports.decipherFormats = (formats, tokens, debug) => {\n  formats.forEach((format) => {\n    const sig = tokens && format.s ? exports.decipher(tokens, format.s) : null;\n    exports.setDownloadURL(format, sig, debug);\n  });\n};\n","var ClientRequest = require('./lib/request')\nvar response = require('./lib/response')\nvar extend = require('xtend')\nvar statusCodes = require('builtin-status-codes')\nvar url = require('url')\n\nvar http = exports\n\nhttp.request = function (opts, cb) {\n\tif (typeof opts === 'string')\n\t\topts = url.parse(opts)\n\telse\n\t\topts = extend(opts)\n\n\t// Normally, the page is loaded from http or https, so not specifying a protocol\n\t// will result in a (valid) protocol-relative url. However, this won't work if\n\t// the protocol is something else, like 'file:'\n\tvar defaultProtocol = global.location.protocol.search(/^https?:$/) === -1 ? 'http:' : ''\n\n\tvar protocol = opts.protocol || defaultProtocol\n\tvar host = opts.hostname || opts.host\n\tvar port = opts.port\n\tvar path = opts.path || '/'\n\n\t// Necessary for IPv6 addresses\n\tif (host && host.indexOf(':') !== -1)\n\t\thost = '[' + host + ']'\n\n\t// This may be a relative url. The browser should always be able to interpret it correctly.\n\topts.url = (host ? (protocol + '//' + host) : '') + (port ? ':' + port : '') + path\n\topts.method = (opts.method || 'GET').toUpperCase()\n\topts.headers = opts.headers || {}\n\n\t// Also valid opts.auth, opts.mode\n\n\tvar req = new ClientRequest(opts)\n\tif (cb)\n\t\treq.on('response', cb)\n\treturn req\n}\n\nhttp.get = function get (opts, cb) {\n\tvar req = http.request(opts, cb)\n\treq.end()\n\treturn req\n}\n\nhttp.ClientRequest = ClientRequest\nhttp.IncomingMessage = response.IncomingMessage\n\nhttp.Agent = function () {}\nhttp.Agent.defaultMaxSockets = 4\n\nhttp.globalAgent = new http.Agent()\n\nhttp.STATUS_CODES = statusCodes\n\nhttp.METHODS = [\n\t'CHECKOUT',\n\t'CONNECT',\n\t'COPY',\n\t'DELETE',\n\t'GET',\n\t'HEAD',\n\t'LOCK',\n\t'M-SEARCH',\n\t'MERGE',\n\t'MKACTIVITY',\n\t'MKCOL',\n\t'MOVE',\n\t'NOTIFY',\n\t'OPTIONS',\n\t'PATCH',\n\t'POST',\n\t'PROPFIND',\n\t'PROPPATCH',\n\t'PURGE',\n\t'PUT',\n\t'REPORT',\n\t'SEARCH',\n\t'SUBSCRIBE',\n\t'TRACE',\n\t'UNLOCK',\n\t'UNSUBSCRIBE'\n]","const PassThrough = require('stream').PassThrough;\nconst getInfo     = require('./info');\nconst util        = require('./util');\nconst sig         = require('./sig');\nconst request     = require('miniget');\nconst m3u8stream  = require('m3u8stream');\nconst parseTime   = require('m3u8stream/lib/parse-time');\n\n\n/**\n * @param {string} link\n * @param {!Object} options\n * @return {ReadableStream}\n */\nconst ytdl = (link, options) => {\n  const stream = createStream(options);\n  ytdl.getInfo(link, options, (err, info) => {\n    if (err) {\n      stream.emit('error', err);\n      return;\n    }\n\n    downloadFromInfoCallback(stream, info, options);\n  });\n\n  return stream;\n};\nmodule.exports = ytdl;\n\nytdl.getBasicInfo = getInfo.getBasicInfo;\nytdl.getInfo = getInfo.getFullInfo;\nytdl.chooseFormat = util.chooseFormat;\nytdl.filterFormats = util.filterFormats;\nytdl.validateID = util.validateID;\nytdl.validateURL = util.validateURL;\nytdl.getURLVideoID = util.getURLVideoID;\nytdl.getVideoID = util.getVideoID;\nytdl.cache = {\n  sig: sig.cache,\n  info: getInfo.cache,\n};\n\n\nconst createStream = (options) => {\n  const stream = new PassThrough({\n    highWaterMark: options && options.highWaterMark || null,\n  });\n  stream.destroy = () => { stream._isDestroyed = true; };\n  return stream;\n};\n\n\n/**\n * Chooses a format to download.\n *\n * @param {stream.Readable} stream\n * @param {Object} info\n * @param {Object} options\n */\nconst downloadFromInfoCallback = (stream, info, options) => {\n  options = options || {};\n  const format = util.chooseFormat(info.formats, options);\n  if (format instanceof Error) {\n    // The caller expects this function to be async.\n    setImmediate(() => {\n      stream.emit('error', format);\n    });\n    return;\n  }\n  stream.emit('info', info, format);\n  if (stream._isDestroyed) { return; }\n\n  let contentLength, downloaded = 0;\n  const ondata = (chunk) => {\n    downloaded += chunk.length;\n    stream.emit('progress', chunk.length, downloaded, contentLength);\n  };\n\n  let req;\n  if (format.isHLS || format.isDashMPD) {\n    req = m3u8stream(format.url, {\n      chunkReadahead: +info.live_chunk_readahead,\n      begin: options.begin || format.live && Date.now(),\n      liveBuffer: options.liveBuffer,\n      requestOptions: options.requestOptions,\n      parser: format.isDashMPD ? 'dash-mpd' : 'm3u8',\n      id: format.itag,\n    });\n\n    req.on('progress', (segment, totalSegments) => {\n      stream.emit('progress', segment.size, segment.num, totalSegments);\n    });\n\n  } else {\n    if (options.begin) {\n      format.url += '&begin=' + parseTime.humanStr(options.begin);\n    }\n    let requestOptions = Object.assign({}, options.requestOptions, {\n      maxReconnects: 5\n    });\n    if (options.range && (options.range.start || options.range.end)) {\n      requestOptions.headers = Object.assign({}, requestOptions.headers, {\n        Range: `bytes=${options.range.start || '0'}-${options.range.end || ''}`\n      });\n    }\n\n    req = request(format.url, requestOptions);\n\n    req.on('response', (res) => {\n      if (stream._isDestroyed) { return; }\n      if (!contentLength) {\n        contentLength = parseInt(res.headers['content-length'], 10);\n      }\n    });\n    req.on('data', ondata);\n  }\n\n  stream.destroy = () => {\n    stream._isDestroyed = true;\n    if (req.abort) req.abort();\n    req.end();\n    req.removeListener('data', ondata);\n    req.unpipe();\n  };\n\n  // Forward events from the request to the stream.\n  [\n    'abort', 'request', 'response', 'error', 'retry', 'reconnect'\n  ].forEach((event) => {\n    req.prependListener(event, (arg) => {\n      stream.emit(event, arg); });\n  });\n\n  req.pipe(stream);\n};\n\n\n/**\n * Can be used to download video after its `info` is gotten through\n * `ytdl.getInfo()`. In case the user might want to look at the\n * `info` object before deciding to download.\n *\n * @param {Object} info\n * @param {!Object} options\n */\nytdl.downloadFromInfo = (info, options) => {\n  const stream = createStream(options);\n  if (!info.full) {\n    throw new Error('Cannot use `ytdl.downloadFromInfo()` when called ' +\n      'with info from `ytdl.getBasicInfo()`');\n  }\n  setImmediate(() => {\n    downloadFromInfoCallback(stream, info, options);\n  });\n  return stream;\n};\n","'use strict';\n\nif (!process.version ||\n    process.version.indexOf('v0.') === 0 ||\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = { nextTick: nextTick };\n} else {\n  module.exports = process\n}\n\nfunction nextTick(fn, arg1, arg2, arg3) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('\"callback\" argument must be a function');\n  }\n  var len = arguments.length;\n  var args, i;\n  switch (len) {\n  case 0:\n  case 1:\n    return process.nextTick(fn);\n  case 2:\n    return process.nextTick(function afterTickOne() {\n      fn.call(null, arg1);\n    });\n  case 3:\n    return process.nextTick(function afterTickTwo() {\n      fn.call(null, arg1, arg2);\n    });\n  case 4:\n    return process.nextTick(function afterTickThree() {\n      fn.call(null, arg1, arg2, arg3);\n    });\n  default:\n    args = new Array(len - 1);\n    i = 0;\n    while (i < args.length) {\n      args[i++] = arguments[i];\n    }\n    return process.nextTick(function afterTick() {\n      fn.apply(null, args);\n    });\n  }\n}\n\n","exports.fetch = isFunction(global.fetch) && isFunction(global.ReadableStream)\n\nexports.writableStream = isFunction(global.WritableStream)\n\nexports.abortController = isFunction(global.AbortController)\n\nexports.blobConstructor = false\ntry {\n\tnew Blob([new ArrayBuffer(1)])\n\texports.blobConstructor = true\n} catch (e) {}\n\n// The xhr request to example.com may violate some restrictive CSP configurations,\n// so if we're running in a browser that supports `fetch`, avoid calling getXHR()\n// and assume support for certain features below.\nvar xhr\nfunction getXHR () {\n\t// Cache the xhr value\n\tif (xhr !== undefined) return xhr\n\n\tif (global.XMLHttpRequest) {\n\t\txhr = new global.XMLHttpRequest()\n\t\t// If XDomainRequest is available (ie only, where xhr might not work\n\t\t// cross domain), use the page location. Otherwise use example.com\n\t\t// Note: this doesn't actually make an http request.\n\t\ttry {\n\t\t\txhr.open('GET', global.XDomainRequest ? '/' : 'https://example.com')\n\t\t} catch(e) {\n\t\t\txhr = null\n\t\t}\n\t} else {\n\t\t// Service workers don't have XHR\n\t\txhr = null\n\t}\n\treturn xhr\n}\n\nfunction checkTypeSupport (type) {\n\tvar xhr = getXHR()\n\tif (!xhr) return false\n\ttry {\n\t\txhr.responseType = type\n\t\treturn xhr.responseType === type\n\t} catch (e) {}\n\treturn false\n}\n\n// For some strange reason, Safari 7.0 reports typeof global.ArrayBuffer === 'object'.\n// Safari 7.1 appears to have fixed this bug.\nvar haveArrayBuffer = typeof global.ArrayBuffer !== 'undefined'\nvar haveSlice = haveArrayBuffer && isFunction(global.ArrayBuffer.prototype.slice)\n\n// If fetch is supported, then arraybuffer will be supported too. Skip calling\n// checkTypeSupport(), since that calls getXHR().\nexports.arraybuffer = exports.fetch || (haveArrayBuffer && checkTypeSupport('arraybuffer'))\n\n// These next two tests unavoidably show warnings in Chrome. Since fetch will always\n// be used if it's available, just return false for these to avoid the warnings.\nexports.msstream = !exports.fetch && haveSlice && checkTypeSupport('ms-stream')\nexports.mozchunkedarraybuffer = !exports.fetch && haveArrayBuffer &&\n\tcheckTypeSupport('moz-chunked-arraybuffer')\n\n// If fetch is supported, then overrideMimeType will be supported too. Skip calling\n// getXHR().\nexports.overrideMimeType = exports.fetch || (getXHR() ? isFunction(getXHR().overrideMimeType) : false)\n\nexports.vbArray = isFunction(global.VBArray)\n\nfunction isFunction (value) {\n\treturn typeof value === 'function'\n}\n\nxhr = null // Help gc\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/BufferList');\nvar destroyImpl = require('./internal/streams/destroy');\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var readableHwm = options.readableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  this.push(null);\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      stream.emit('error', er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        stream.emit('error', new Error('stream.push() after EOF'));\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n    }\n  }\n\n  return needMoreData(state);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    stream.emit('data', chunk);\n    stream.read(0);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    pna.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = { hasUnpiped: false };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, unpipeInfo);\n    }return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this, unpipeInfo);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        pna.nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    pna.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._readableState.highWaterMark;\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    pna.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}","const PassThrough   = require('stream').PassThrough;\nconst urlResolve    = require('url').resolve;\nconst miniget       = require('miniget');\nconst m3u8Parser    = require('./m3u8-parser');\nconst DashMPDParser = require('./dash-mpd-parser');\nconst Queue         = require('./queue');\nconst parseTime     = require('./parse-time');\n\n\n/**\n * @param {string} playlistURL\n * @param {Object} options\n * @return {stream.Readable}\n */\nmodule.exports = (playlistURL, options) => {\n  const stream = new PassThrough();\n  options = options || {};\n  const chunkReadahead = options.chunkReadahead || 3;\n  const liveBuffer = options.liveBuffer || 20000; // 20 seconds\n  const requestOptions = options.requestOptions;\n  const Parser = {\n    'm3u8': m3u8Parser,\n    'dash-mpd': DashMPDParser,\n  }[options.parser || (/\\.mpd$/.test(playlistURL) ? 'dash-mpd' : 'm3u8')];\n  if (!Parser) {\n    throw TypeError(`parser '${options.parser}' not supported`);\n  }\n  let relativeBegin = typeof options.begin === 'string';\n  let begin = relativeBegin ?\n    parseTime.humanStr(options.begin) :\n    Math.max(options.begin - liveBuffer, 0) || 0;\n  let liveBegin = Date.now() - liveBuffer;\n\n  let currSegment;\n  const streamQueue = new Queue((req, callback) => {\n    currSegment = req;\n    // Count the size manually, since the `content-length` header is not\n    // always there.\n    let size = 0;\n    req.on('data', (chunk) => size += chunk.length);\n    req.pipe(stream, { end: false });\n    req.on('end', () => callback(size));\n  }, { concurrency: 1 });\n\n  let segmentNumber = 0;\n  let downloaded = 0;\n  const requestQueue = new Queue((segment, callback) => {\n    let req = miniget(urlResolve(playlistURL, segment.url), requestOptions);\n    req.on('error', callback);\n    streamQueue.push(req, (size) => {\n      downloaded += size;\n      stream.emit('progress', {\n        num: ++segmentNumber,\n        size: size,\n        url: segment.url,\n        duration: segment.duration,\n      }, requestQueue.total, downloaded);\n      callback();\n    });\n  }, { concurrency: chunkReadahead });\n\n  const onError = (err) => {\n    if (ended) { return; }\n    stream.emit('error', err);\n    // Stop on any error.\n    stream.end();\n  };\n\n  // When to look for items again.\n  let refreshThreshold;\n  let minRefreshTime;\n  let refreshTimeout;\n  let fetchingPlaylist = false;\n  let ended = false;\n  let isStatic = false;\n  let lastRefresh;\n\n  const onQueuedEnd = (err) => {\n    currSegment = null;\n    if (err) {\n      onError(err);\n    } else if (!fetchingPlaylist && !ended && !isStatic &&\n      requestQueue.tasks.length + requestQueue.active === refreshThreshold) {\n      let ms = Math.max(0, minRefreshTime - (Date.now() - lastRefresh));\n      refreshTimeout = setTimeout(refreshPlaylist, ms);\n    } else if ((ended || isStatic) &&\n      !requestQueue.tasks.length && !requestQueue.active) {\n      stream.end();\n    }\n  };\n\n  let currPlaylist;\n  let lastSeq;\n  const refreshPlaylist = () => {\n    fetchingPlaylist = true;\n    lastRefresh = Date.now();\n    currPlaylist = miniget(playlistURL, requestOptions);\n    currPlaylist.on('error', onError);\n    const parser = currPlaylist.pipe(new Parser(options.id));\n    let starttime = null;\n    parser.on('starttime', (a) => {\n      starttime = a;\n      if (relativeBegin && begin >= 0) {\n        begin += starttime;\n      }\n    });\n    parser.on('endlist', () => { isStatic = true; });\n    parser.on('endearly', () => { currPlaylist.unpipe(parser); });\n\n    let addedItems = [];\n    let liveAddedItems = [];\n    const addItem = (item, isLive) => {\n      if (item.seq <= lastSeq) { return; }\n      lastSeq = item.seq;\n      begin = item.time;\n      requestQueue.push(item, onQueuedEnd);\n      addedItems.push(item);\n      if (isLive) {\n        liveAddedItems.push(item);\n      }\n    };\n\n    let tailedItems = [], tailedItemsDuration = 0;\n    parser.on('item', (item) => {\n      item.time = starttime;\n      if (!starttime || begin <= item.time) {\n        addItem(item, liveBegin <= item.time);\n      } else {\n        tailedItems.push(item);\n        tailedItemsDuration += item.duration;\n        // Only keep the last `liveBuffer` of items.\n        while (tailedItems.length > 1 &&\n          tailedItemsDuration - tailedItems[0].duration > liveBuffer) {\n          tailedItemsDuration -= tailedItems.shift().duration;\n        }\n      }\n      starttime += item.duration;\n    });\n\n    parser.on('end', () => {\n      currPlaylist = null;\n      // If we are too ahead of the stream, make sure to get the\n      // latest available items with a small buffer.\n      if (!addedItems.length && tailedItems.length) {\n        tailedItems.forEach((item) => { addItem(item, true); });\n      }\n\n      // Refresh the playlist when remaining segments get low.\n      refreshThreshold = Math.max(1, Math.ceil(addedItems.length * 0.01));\n\n      // Throttle refreshing the playlist by looking at the duration\n      // of live items added on this refresh.\n      minRefreshTime =\n        addedItems.reduce(((total, item) => item.duration + total), 0);\n\n      fetchingPlaylist = false;\n    });\n  };\n  refreshPlaylist();\n\n  stream.end = () => {\n    ended = true;\n    streamQueue.die();\n    requestQueue.die();\n    clearTimeout(refreshTimeout);\n    if (currPlaylist) {\n      currPlaylist.unpipe();\n      currPlaylist.abort();\n    }\n    if (currSegment) {\n      currSegment.unpipe();\n      currSegment.abort();\n    }\n    PassThrough.prototype.end.call(stream);\n  };\n\n  return stream;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\n{\n  // avoid scope creep, the keys array can then be collected\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  pna.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n\nDuplex.prototype._destroy = function (err, cb) {\n  this.push(null);\n  this.end();\n\n  pna.nextTick(cb, err);\n};","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"home\"},[_c('YoutubeComp')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"hello\"},[_c('form',{attrs:{\"action\":\"\"}},[_c('div',{staticClass:\"input-group mb-3\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.videoSearch),expression:\"videoSearch\"}],staticClass:\"form-control\",attrs:{\"type\":\"text\",\"placeholder\":\"Video URL\",\"aria-label\":\"Video URL\",\"aria-describedby\":\"basic-addon1\"},domProps:{\"value\":(_vm.videoSearch)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.videoSearch=$event.target.value}}}),_c('div',{staticClass:\"input-group-append\"},[_c('button',{staticClass:\"btn btn-outline-secondary\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.searchVideo}},[_vm._v(\"Search\")])])])]),_c('div',{staticClass:\"row\"},_vm._l((_vm.videoList),function(video){return _c('div',{key:video.title,staticClass:\"col-12 col-sm-6 col-md-4 col-lg-2\"},[_c('div',{staticClass:\"card\"},[_vm._m(0,true),_c('img',{staticClass:\"card-img-top\",attrs:{\"src\":video.thumbnail_url,\"alt\":\"Card image cap\"}}),_c('div',{staticClass:\"card-body\"},[_c('p',{staticClass:\"card-title cut-text\"},[_vm._v(_vm._s(video.title))]),_c('p',{staticClass:\"card-text cut-text\"},[_vm._v(_vm._s(video.description))]),_vm._m(1,true)])])])}),0)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"close\"},[_c('i',{staticClass:\"icon-remove\"})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"text-center\"},[_c('button',{staticClass:\"btn btn-primary\",attrs:{\"type\":\"button\"}},[_vm._v(\"Download\")])])}]\n\nexport { render, staticRenderFns }","<template>\r\n<div class=\"hello\">\r\n    <form action=\"\">\r\n        <div class=\"input-group mb-3\">\r\n            <input type=\"text\" v-model=\"videoSearch\" class=\"form-control\" placeholder=\"Video URL\" aria-label=\"Video URL\" aria-describedby=\"basic-addon1\">\r\n            <div class=\"input-group-append\">\r\n                <button v-on:click=\"searchVideo\" class=\"btn btn-outline-secondary\" type=\"button\">Search</button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n    <div class=\"row\">\r\n        <div class=\"col-12 col-sm-6 col-md-4 col-lg-2\" v-for=\"video in videoList\" :key=\"video.title\">\r\n            <div class=\"card\">\r\n                <div class=\"close\"><i class=\"icon-remove\"></i></div>\r\n                <img class=\"card-img-top\" :src=\"video.thumbnail_url\" alt=\"Card image cap\">\r\n                <div class=\"card-body\">\r\n                    <p class=\"card-title cut-text\">{{video.title}}</p>\r\n                    <p class=\"card-text cut-text\">{{video.description}}</p>\r\n                    <div class=\"text-center\">\r\n                        <button class=\"btn btn-primary\" type=\"button\">Download</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport * as ytdl from \"ytdl-core\";\r\n\r\nexport default {\r\n    name: 'HelloWorld',\r\n    props: {},\r\n    data: function () {\r\n        return {\r\n            videoList: [],\r\n            videoSearch: \"\"\r\n        }\r\n    },\r\n    methods: {\r\n        searchVideo: function () {\r\n            if (this.videoSearch) {\r\n                ytdl.getBasicInfo(this.videoSearch, (err, info) => {\r\n                    if (err) {\r\n                        console.error(err);\r\n                    } else {\r\n                        this.videoList.push(info);\r\n                        console.log(info);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n\r\n<style scoped>\r\n.close {\r\n    position: absolute;\r\n    color: red;\r\n    right: 5px;\r\n}\r\n.cut-text {\r\n    text-overflow: ellipsis;\r\n    overflow: hidden; \r\n    height: 1.2em; \r\n    white-space: nowrap;\r\n}\r\nh3 {\r\n    margin: 40px 0 0;\r\n}\r\n\r\nul {\r\n    list-style-type: none;\r\n    padding: 0;\r\n}\r\n\r\nli {\r\n    display: inline-block;\r\n    margin: 0 10px;\r\n}\r\n\r\na {\r\n    color: #42b983;\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./YoutubeComp.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./YoutubeComp.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./YoutubeComp.vue?vue&type=template&id=943632aa&scoped=true&\"\nimport script from \"./YoutubeComp.vue?vue&type=script&lang=js&\"\nexport * from \"./YoutubeComp.vue?vue&type=script&lang=js&\"\nimport style0 from \"./YoutubeComp.vue?vue&type=style&index=0&id=943632aa&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"943632aa\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div class=\"home\">\n    <YoutubeComp/>\n  </div>\n</template>\n\n<script>\n// @ is an alias to /src\nimport YoutubeComp from '@/components/YoutubeComp.vue'\n\nexport default {\n  name: 'youtube',\n  components: {\n    YoutubeComp\n  }\n}\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Youtube.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Youtube.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Youtube.vue?vue&type=template&id=3093d13c&\"\nimport script from \"./Youtube.vue?vue&type=script&lang=js&\"\nexport * from \"./Youtube.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","module.exports = require('./readable').PassThrough\n","var capability = require('./capability')\nvar inherits = require('inherits')\nvar stream = require('readable-stream')\n\nvar rStates = exports.readyStates = {\n\tUNSENT: 0,\n\tOPENED: 1,\n\tHEADERS_RECEIVED: 2,\n\tLOADING: 3,\n\tDONE: 4\n}\n\nvar IncomingMessage = exports.IncomingMessage = function (xhr, response, mode, fetchTimer) {\n\tvar self = this\n\tstream.Readable.call(self)\n\n\tself._mode = mode\n\tself.headers = {}\n\tself.rawHeaders = []\n\tself.trailers = {}\n\tself.rawTrailers = []\n\n\t// Fake the 'close' event, but only once 'end' fires\n\tself.on('end', function () {\n\t\t// The nextTick is necessary to prevent the 'request' module from causing an infinite loop\n\t\tprocess.nextTick(function () {\n\t\t\tself.emit('close')\n\t\t})\n\t})\n\n\tif (mode === 'fetch') {\n\t\tself._fetchResponse = response\n\n\t\tself.url = response.url\n\t\tself.statusCode = response.status\n\t\tself.statusMessage = response.statusText\n\t\t\n\t\tresponse.headers.forEach(function (header, key){\n\t\t\tself.headers[key.toLowerCase()] = header\n\t\t\tself.rawHeaders.push(key, header)\n\t\t})\n\n\t\tif (capability.writableStream) {\n\t\t\tvar writable = new WritableStream({\n\t\t\t\twrite: function (chunk) {\n\t\t\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t\t\tif (self._destroyed) {\n\t\t\t\t\t\t\treject()\n\t\t\t\t\t\t} else if(self.push(new Buffer(chunk))) {\n\t\t\t\t\t\t\tresolve()\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tself._resumeFetch = resolve\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t\tclose: function () {\n\t\t\t\t\tglobal.clearTimeout(fetchTimer)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.push(null)\n\t\t\t\t},\n\t\t\t\tabort: function (err) {\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t}\n\t\t\t})\n\n\t\t\ttry {\n\t\t\t\tresponse.body.pipeTo(writable).catch(function (err) {\n\t\t\t\t\tglobal.clearTimeout(fetchTimer)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t} catch (e) {} // pipeTo method isn't defined. Can't find a better way to feature test this\n\t\t}\n\t\t// fallback for when writableStream or pipeTo aren't available\n\t\tvar reader = response.body.getReader()\n\t\tfunction read () {\n\t\t\treader.read().then(function (result) {\n\t\t\t\tif (self._destroyed)\n\t\t\t\t\treturn\n\t\t\t\tif (result.done) {\n\t\t\t\t\tglobal.clearTimeout(fetchTimer)\n\t\t\t\t\tself.push(null)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tself.push(new Buffer(result.value))\n\t\t\t\tread()\n\t\t\t}).catch(function (err) {\n\t\t\t\tglobal.clearTimeout(fetchTimer)\n\t\t\t\tif (!self._destroyed)\n\t\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t}\n\t\tread()\n\t} else {\n\t\tself._xhr = xhr\n\t\tself._pos = 0\n\n\t\tself.url = xhr.responseURL\n\t\tself.statusCode = xhr.status\n\t\tself.statusMessage = xhr.statusText\n\t\tvar headers = xhr.getAllResponseHeaders().split(/\\r?\\n/)\n\t\theaders.forEach(function (header) {\n\t\t\tvar matches = header.match(/^([^:]+):\\s*(.*)/)\n\t\t\tif (matches) {\n\t\t\t\tvar key = matches[1].toLowerCase()\n\t\t\t\tif (key === 'set-cookie') {\n\t\t\t\t\tif (self.headers[key] === undefined) {\n\t\t\t\t\t\tself.headers[key] = []\n\t\t\t\t\t}\n\t\t\t\t\tself.headers[key].push(matches[2])\n\t\t\t\t} else if (self.headers[key] !== undefined) {\n\t\t\t\t\tself.headers[key] += ', ' + matches[2]\n\t\t\t\t} else {\n\t\t\t\t\tself.headers[key] = matches[2]\n\t\t\t\t}\n\t\t\t\tself.rawHeaders.push(matches[1], matches[2])\n\t\t\t}\n\t\t})\n\n\t\tself._charset = 'x-user-defined'\n\t\tif (!capability.overrideMimeType) {\n\t\t\tvar mimeType = self.rawHeaders['mime-type']\n\t\t\tif (mimeType) {\n\t\t\t\tvar charsetMatch = mimeType.match(/;\\s*charset=([^;])(;|$)/)\n\t\t\t\tif (charsetMatch) {\n\t\t\t\t\tself._charset = charsetMatch[1].toLowerCase()\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!self._charset)\n\t\t\t\tself._charset = 'utf-8' // best guess\n\t\t}\n\t}\n}\n\ninherits(IncomingMessage, stream.Readable)\n\nIncomingMessage.prototype._read = function () {\n\tvar self = this\n\n\tvar resolve = self._resumeFetch\n\tif (resolve) {\n\t\tself._resumeFetch = null\n\t\tresolve()\n\t}\n}\n\nIncomingMessage.prototype._onXHRProgress = function () {\n\tvar self = this\n\n\tvar xhr = self._xhr\n\n\tvar response = null\n\tswitch (self._mode) {\n\t\tcase 'text:vbarray': // For IE9\n\t\t\tif (xhr.readyState !== rStates.DONE)\n\t\t\t\tbreak\n\t\t\ttry {\n\t\t\t\t// This fails in IE8\n\t\t\t\tresponse = new global.VBArray(xhr.responseBody).toArray()\n\t\t\t} catch (e) {}\n\t\t\tif (response !== null) {\n\t\t\t\tself.push(new Buffer(response))\n\t\t\t\tbreak\n\t\t\t}\n\t\t\t// Falls through in IE8\t\n\t\tcase 'text':\n\t\t\ttry { // This will fail when readyState = 3 in IE9. Switch mode and wait for readyState = 4\n\t\t\t\tresponse = xhr.responseText\n\t\t\t} catch (e) {\n\t\t\t\tself._mode = 'text:vbarray'\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tif (response.length > self._pos) {\n\t\t\t\tvar newData = response.substr(self._pos)\n\t\t\t\tif (self._charset === 'x-user-defined') {\n\t\t\t\t\tvar buffer = new Buffer(newData.length)\n\t\t\t\t\tfor (var i = 0; i < newData.length; i++)\n\t\t\t\t\t\tbuffer[i] = newData.charCodeAt(i) & 0xff\n\n\t\t\t\t\tself.push(buffer)\n\t\t\t\t} else {\n\t\t\t\t\tself.push(newData, self._charset)\n\t\t\t\t}\n\t\t\t\tself._pos = response.length\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'arraybuffer':\n\t\t\tif (xhr.readyState !== rStates.DONE || !xhr.response)\n\t\t\t\tbreak\n\t\t\tresponse = xhr.response\n\t\t\tself.push(new Buffer(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'moz-chunked-arraybuffer': // take whole\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING || !response)\n\t\t\t\tbreak\n\t\t\tself.push(new Buffer(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'ms-stream':\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING)\n\t\t\t\tbreak\n\t\t\tvar reader = new global.MSStreamReader()\n\t\t\treader.onprogress = function () {\n\t\t\t\tif (reader.result.byteLength > self._pos) {\n\t\t\t\t\tself.push(new Buffer(new Uint8Array(reader.result.slice(self._pos))))\n\t\t\t\t\tself._pos = reader.result.byteLength\n\t\t\t\t}\n\t\t\t}\n\t\t\treader.onload = function () {\n\t\t\t\tself.push(null)\n\t\t\t}\n\t\t\t// reader.onerror = ??? // TODO: this\n\t\t\treader.readAsArrayBuffer(response)\n\t\t\tbreak\n\t}\n\n\t// The ms-stream case handles end separately in reader.onload()\n\tif (self._xhr.readyState === rStates.DONE && self._mode !== 'ms-stream') {\n\t\tself.push(null)\n\t}\n}\n","const Writable  = require('stream').Writable;\nconst sax       = require('sax');\nconst parseTime = require('./parse-time');\n\n\n/**\n * A wrapper around sax that emits segments.\n *\n * @extends WRitableStream\n * @constructor\n */\nmodule.exports = class DashMPDParser extends Writable {\n  constructor(targetID) {\n    super();\n    this._parser = sax.createStream(false, { lowercasetags: true });\n    this._parser.on('error', this.emit.bind(this, 'error'));\n\n    let lastTag;\n    let currtime = 0;\n    let seq = 0;\n    let segmentTemplate;\n    let timescale, offset, duration, baseURL;\n    let timeline = [];\n    let getSegments = false;\n    let isStatic;\n    let treeLevel;\n    let periodStart;\n\n    const tmpl = (str) => {\n      const context = {\n        RepresentationID: targetID,\n        Number: seq,\n        Time: currtime,\n      };\n      return str.replace(/\\$(\\w+)\\$/g, (m, p1) => context[p1]);\n    };\n\n    this._parser.on('opentag', (node) => {\n      switch (node.name) {\n        case 'mpd':\n          currtime =\n            new Date(node.attributes.availabilitystarttime).getTime();\n          isStatic = node.attributes.type !== 'dynamic';\n          break;\n        case 'period':\n          // Reset everything on <Period> tag.\n          seq = 0;\n          timescale = 1000;\n          duration = 0;\n          offset = 0;\n          baseURL = [];\n          treeLevel = 0;\n          periodStart = parseTime.durationStr(node.attributes.start) || 0;\n          break;\n        case 'segmentlist':\n          seq = parseInt(node.attributes.startnumber) || seq;\n          timescale = parseInt(node.attributes.timescale) || timescale;\n          duration = parseInt(node.attributes.duration) || duration;\n          offset = parseInt(node.attributes.presentationtimeoffset) || offset;\n          break;\n        case 'segmenttemplate':\n          segmentTemplate = node.attributes;\n          seq = parseInt(node.attributes.startnumber) || seq;\n          timescale = parseInt(node.attributes.timescale) || timescale;\n          break;\n        case 'segmenttimeline':\n        case 'baseurl':\n          lastTag = node.name;\n          break;\n        case 's':\n          timeline.push([\n            parseInt(node.attributes.d),\n            parseInt(node.attributes.r)\n          ]);\n          break;\n        case 'adaptationset':\n        case 'representation':\n          treeLevel++;\n          if (targetID == null) {\n            targetID = node.attributes.id;\n          }\n          getSegments = node.attributes.id === targetID + '';\n          if (getSegments) {\n            if (periodStart) {\n              currtime += periodStart;\n            }\n            if (offset) {\n              currtime -= offset / timescale * 1000;\n            }\n            this.emit('starttime', currtime);\n          }\n          if (getSegments && segmentTemplate && timeline.length) {\n            if (segmentTemplate.initialization) {\n              this.emit('item', {\n                url: baseURL.filter(s => !!s).join('') +\n                  tmpl(segmentTemplate.initialization),\n                seq: seq - 1,\n                duration: 0,\n              });\n            }\n            for (let [duration, repeat] of timeline) {\n              duration = duration / timescale * 1000;\n              repeat = repeat || 1;\n              for (let i = 0; i < repeat; i++) {\n                this.emit('item', {\n                  url: baseURL.filter(s => !!s).join('') +\n                    tmpl(segmentTemplate.media),\n                  seq: seq++,\n                  duration,\n                });\n                currtime += duration;\n              }\n            }\n          }\n          break;\n        case 'initialization':\n          if (getSegments) {\n            this.emit('item', {\n              url: baseURL.filter(s => !!s).join('') + node.attributes.sourceurl,\n              seq: seq++,\n              duration: 0,\n            });\n          }\n          break;\n        case 'segmenturl':\n          if (getSegments) {\n            let tl = timeline.shift();\n            let segmentDuration = (tl && tl[0] || duration) / timescale * 1000;\n            this.emit('item', {\n              url: baseURL.filter(s => !!s).join('') + node.attributes.media,\n              seq: seq++,\n              duration: segmentDuration,\n            });\n            currtime += segmentDuration;\n          }\n          break;\n      }\n    });\n    \n    const onEnd = () => {\n      if (isStatic) { this.emit('endlist'); }\n      if (!getSegments) {\n        this.emit('error', Error(`Representation '${targetID}' not found`));\n      }\n      this.emit('end');\n    };\n\n    this._parser.on('closetag', (tagName) => {\n      switch (tagName) {\n        case 'adaptationset':\n        case 'representation':\n          treeLevel--;\n          break;\n        case 'segmentlist':\n          if (getSegments) {\n            this.emit('endearly');\n            onEnd();\n            this._parser.removeAllListeners();\n          }\n          break;\n      }\n    });\n\n    this._parser.on('text', (text) => {\n      if (lastTag === 'baseurl') {\n        baseURL[treeLevel] = text;\n        lastTag = null;\n      }\n    });\n\n    this.on('finish', onEnd);\n  }\n\n  _write(chunk, encoding, callback) {\n    this._parser.write(chunk, encoding);\n    callback();\n  }\n};\n","module.exports = require('./readable').Transform\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = require('events').EventEmitter;\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/readable.js');\nStream.Writable = require('readable-stream/writable.js');\nStream.Duplex = require('readable-stream/duplex.js');\nStream.Transform = require('readable-stream/transform.js');\nStream.PassThrough = require('readable-stream/passthrough.js');\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n","var Buffer = require('buffer').Buffer\n\nmodule.exports = function (buf) {\n\t// If the buffer is backed by a Uint8Array, a faster version will work\n\tif (buf instanceof Uint8Array) {\n\t\t// If the buffer isn't a subarray, return the underlying ArrayBuffer\n\t\tif (buf.byteOffset === 0 && buf.byteLength === buf.buffer.byteLength) {\n\t\t\treturn buf.buffer\n\t\t} else if (typeof buf.buffer.slice === 'function') {\n\t\t\t// Otherwise we need to get a proper copy\n\t\t\treturn buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength)\n\t\t}\n\t}\n\n\tif (Buffer.isBuffer(buf)) {\n\t\t// This is the slow version that will work with any Buffer\n\t\t// implementation (even in old browsers)\n\t\tvar arrayCopy = new Uint8Array(buf.length)\n\t\tvar len = buf.length\n\t\tfor (var i = 0; i < len; i++) {\n\t\t\tarrayCopy[i] = buf[i]\n\t\t}\n\t\treturn arrayCopy.buffer\n\t} else {\n\t\tthrow new Error('Argument must be a Buffer')\n\t}\n}\n","module.exports = class Queue {\n  /**\n   * A really simple queue with concurrency.\n   *\n   * @param {Function(Object, Function)} worker\n   * @param {Object} options\n   */\n  constructor(worker, options) {\n    this._worker = worker;\n    options = options || {};\n    this._concurrency = options.concurrency || 1;\n    this.tasks = [];\n    this.total = 0;\n    this.active = 0;\n  }\n\n\n  /**\n   * Push a task to the queue.\n   *\n   * @param {Object} item\n   * @param {Function(Error)} callback\n   */\n  push(item, callback) {\n    this.tasks.push({ item, callback });\n    this.total++;\n    this._next();\n  }\n\n\n  /**\n   * Process next job in queue.\n   */\n  _next() {\n    if (this.active >= this._concurrency || !this.tasks.length) { return; }\n    const { item, callback } = this.tasks.shift();\n    let callbackCalled = false;\n    this.active++;\n    this._worker(item, (err) => {\n      if (callbackCalled) { return; }\n      this.active--;\n      callbackCalled = true;\n      if (callback) { callback(err); }\n      this._next();\n    });\n  }\n\n\n  /**\n   * Stops processing queued jobs.\n   */\n  die() {\n    this.tasks = [];\n  }\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var writableHwm = options.writableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function (object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function (object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n    return new Writable(options);\n  }\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  pna.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    pna.nextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    pna.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    pna.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('_write() is not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      stream.emit('error', err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function') {\n      state.pendingcb++;\n      state.finalCalled = true;\n      pna.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n  if (state.corkedRequestsFree) {\n    state.corkedRequestsFree.next = corkReq;\n  } else {\n    state.corkedRequestsFree = corkReq;\n  }\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  get: function () {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\n\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  this.end();\n  cb(err);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n","/**\n * http://en.wikipedia.org/wiki/YouTube#Quality_and_formats\n */\nmodule.exports = {\n\n  '5': {\n    container: 'flv',\n    resolution: '240p',\n    encoding: 'Sorenson H.283',\n    profile: null,\n    bitrate: '0.25',\n    audioEncoding: 'mp3',\n    audioBitrate: 64,\n  },\n\n  '6': {\n    container: 'flv',\n    resolution: '270p',\n    encoding: 'Sorenson H.263',\n    profile: null,\n    bitrate: '0.8',\n    audioEncoding: 'mp3',\n    audioBitrate: 64,\n  },\n\n  '13': {\n    container: '3gp',\n    resolution: null,\n    encoding: 'MPEG-4 Visual',\n    profile: null,\n    bitrate: '0.5',\n    audioEncoding: 'aac',\n    audioBitrate: null,\n  },\n\n  '17': {\n    container: '3gp',\n    resolution: '144p',\n    encoding: 'MPEG-4 Visual',\n    profile: 'simple',\n    bitrate: '0.05',\n    audioEncoding: 'aac',\n    audioBitrate: 24,\n  },\n\n  '18': {\n    container: 'mp4',\n    resolution: '360p',\n    encoding: 'H.264',\n    profile: 'baseline',\n    bitrate: '0.5',\n    audioEncoding: 'aac',\n    audioBitrate: 96,\n  },\n\n  '22': {\n    container: 'mp4',\n    resolution: '720p',\n    encoding: 'H.264',\n    profile: 'high',\n    bitrate: '2-3',\n    audioEncoding: 'aac',\n    audioBitrate: 192,\n  },\n\n  '34': {\n    container: 'flv',\n    resolution: '360p',\n    encoding: 'H.264',\n    profile: 'main',\n    bitrate: '0.5',\n    audioEncoding: 'aac',\n    audioBitrate: 128,\n  },\n\n  '35': {\n    container: 'flv',\n    resolution: '480p',\n    encoding: 'H.264',\n    profile: 'main',\n    bitrate: '0.8-1',\n    audioEncoding: 'aac',\n    audioBitrate: 128,\n  },\n\n  '36': {\n    container: '3gp',\n    resolution: '240p',\n    encoding: 'MPEG-4 Visual',\n    profile: 'simple',\n    bitrate: '0.175',\n    audioEncoding: 'aac',\n    audioBitrate: 32,\n  },\n\n  '37': {\n    container: 'mp4',\n    resolution: '1080p',\n    encoding: 'H.264',\n    profile: 'high',\n    bitrate: '3-5.9',\n    audioEncoding: 'aac',\n    audioBitrate: 192,\n  },\n\n  '38': {\n    container: 'mp4',\n    resolution: '3072p',\n    encoding: 'H.264',\n    profile: 'high',\n    bitrate: '3.5-5',\n    audioEncoding: 'aac',\n    audioBitrate: 192,\n  },\n\n  '43': {\n    container: 'webm',\n    resolution: '360p',\n    encoding: 'VP8',\n    profile: null,\n    bitrate: '0.5-0.75',\n    audioEncoding: 'vorbis',\n    audioBitrate: 128,\n  },\n\n  '44': {\n    container: 'webm',\n    resolution: '480p',\n    encoding: 'VP8',\n    profile: null,\n    bitrate: '1',\n    audioEncoding: 'vorbis',\n    audioBitrate: 128,\n  },\n\n  '45': {\n    container: 'webm',\n    resolution: '720p',\n    encoding: 'VP8',\n    profile: null,\n    bitrate: '2',\n    audioEncoding: 'vorbis',\n    audioBitrate: 192,\n  },\n\n  '46': {\n    container: 'webm',\n    resolution: '1080p',\n    encoding: 'vp8',\n    profile: null,\n    bitrate: null,\n    audioEncoding: 'vorbis',\n    audioBitrate: 192,\n  },\n\n  '82': {\n    container: 'mp4',\n    resolution: '360p',\n    encoding: 'H.264',\n    profile: '3d',\n    bitrate: '0.5',\n    audioEncoding: 'aac',\n    audioBitrate: 96,\n  },\n\n  '83': {\n    container: 'mp4',\n    resolution: '240p',\n    encoding: 'H.264',\n    profile: '3d',\n    bitrate: '0.5',\n    audioEncoding: 'aac',\n    audioBitrate: 96,\n  },\n\n  '84': {\n    container: 'mp4',\n    resolution: '720p',\n    encoding: 'H.264',\n    profile: '3d',\n    bitrate: '2-3',\n    audioEncoding: 'aac',\n    audioBitrate: 192,\n  },\n\n  '85': {\n    container: 'mp4',\n    resolution: '1080p',\n    encoding: 'H.264',\n    profile: '3d',\n    bitrate: '3-4',\n    audioEncoding: 'aac',\n    audioBitrate: 192,\n  },\n\n  '100': {\n    container: 'webm',\n    resolution: '360p',\n    encoding: 'VP8',\n    profile: '3d',\n    bitrate: null,\n    audioEncoding: 'vorbis',\n    audioBitrate: 128,\n  },\n\n  '101': {\n    container: 'webm',\n    resolution: '360p',\n    encoding: 'VP8',\n    profile: '3d',\n    bitrate: null,\n    audioEncoding: 'vorbis',\n    audioBitrate: 192,\n  },\n\n  '102': {\n    container: 'webm',\n    resolution: '720p',\n    encoding: 'VP8',\n    profile: '3d',\n    bitrate: null,\n    audioEncoding: 'vorbis',\n    audioBitrate: 192,\n  },\n\n  // DASH (video only)\n  '133': {\n    container: 'mp4',\n    resolution: '240p',\n    encoding: 'H.264',\n    profile: 'main',\n    bitrate: '0.2-0.3',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '134': {\n    container: 'mp4',\n    resolution: '360p',\n    encoding: 'H.264',\n    profile: 'main',\n    bitrate: '0.3-0.4',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '135': {\n    container: 'mp4',\n    resolution: '480p',\n    encoding: 'H.264',\n    profile: 'main',\n    bitrate: '0.5-1',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '136': {\n    container: 'mp4',\n    resolution: '720p',\n    encoding: 'H.264',\n    profile: 'main',\n    bitrate: '1-1.5',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '137': {\n    container: 'mp4',\n    resolution: '1080p',\n    encoding: 'H.264',\n    profile: 'high',\n    bitrate: '2.5-3',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '138': {\n    container: 'mp4',\n    resolution: '4320p',\n    encoding: 'H.264',\n    profile: 'high',\n    bitrate: '13.5-25',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '160': {\n    container: 'mp4',\n    resolution: '144p',\n    encoding: 'H.264',\n    profile: 'main',\n    bitrate: '0.1',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '242': {\n    container: 'webm',\n    resolution: '240p',\n    encoding: 'VP9',\n    profile: 'profile 0',\n    bitrate: '0.1-0.2',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '243': {\n    container: 'webm',\n    resolution: '360p',\n    encoding: 'VP9',\n    profile: 'profile 0',\n    bitrate: '0.25',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '244': {\n    container: 'webm',\n    resolution: '480p',\n    encoding: 'VP9',\n    profile: 'profile 0',\n    bitrate: '0.5',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '247': {\n    container: 'webm',\n    resolution: '720p',\n    encoding: 'VP9',\n    profile: 'profile 0',\n    bitrate: '0.7-0.8',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '248': {\n    container: 'webm',\n    resolution: '1080p',\n    encoding: 'VP9',\n    profile: 'profile 0',\n    bitrate: '1.5',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '264': {\n    container: 'mp4',\n    resolution: '1440p',\n    encoding: 'H.264',\n    profile: 'high',\n    bitrate: '4-4.5',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '266': {\n    container: 'mp4',\n    resolution: '2160p',\n    encoding: 'H.264',\n    profile: 'high',\n    bitrate: '12.5-16',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '271': {\n    container: 'webm',\n    resolution: '1440p',\n    encoding: 'VP9',\n    profile: 'profile 0',\n    bitrate: '9',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '272': {\n    container: 'webm',\n    resolution: '4320p',\n    encoding: 'VP9',\n    profile: 'profile 0',\n    bitrate: '20-25',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '278': {\n    container: 'webm',\n    resolution: '144p 15fps',\n    encoding: 'VP9',\n    profile: 'profile 0',\n    bitrate: '0.08',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '298': {\n    container: 'mp4',\n    resolution: '720p',\n    encoding: 'H.264',\n    profile: 'main',\n    bitrate: '3-3.5',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '299': {\n    container: 'mp4',\n    resolution: '1080p',\n    encoding: 'H.264',\n    profile: 'high',\n    bitrate: '5.5',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '302': {\n    container: 'webm',\n    resolution: '720p HFR',\n    encoding: 'VP9',\n    profile: 'profile 0',\n    bitrate: '2.5',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '303': {\n    container: 'webm',\n    resolution: '1080p HFR',\n    encoding: 'VP9',\n    profile: 'profile 0',\n    bitrate: '5',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '308': {\n    container: 'webm',\n    resolution: '1440p HFR',\n    encoding: 'VP9',\n    profile: 'profile 0',\n    bitrate: '10',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '313': {\n    container: 'webm',\n    resolution: '2160p',\n    encoding: 'VP9',\n    profile: 'profile 0',\n    bitrate: '13-15',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '315': {\n    container: 'webm',\n    resolution: '2160p HFR',\n    encoding: 'VP9',\n    profile: 'profile 0',\n    bitrate: '20-25',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '330': {\n    container: 'webm',\n    resolution: '144p HDR, HFR',\n    encoding: 'VP9',\n    profile: 'profile 2',\n    bitrate: '0.08',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '331': {\n    container: 'webm',\n    resolution: '240p HDR, HFR',\n    encoding: 'VP9',\n    profile: 'profile 2',\n    bitrate: '0.1-0.15',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '332': {\n    container: 'webm',\n    resolution: '360p HDR, HFR',\n    encoding: 'VP9',\n    profile: 'profile 2',\n    bitrate: '0.25',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '333': {\n    container: 'webm',\n    resolution: '240p HDR, HFR',\n    encoding: 'VP9',\n    profile: 'profile 2',\n    bitrate: '0.5',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '334': {\n    container: 'webm',\n    resolution: '720p HDR, HFR',\n    encoding: 'VP9',\n    profile: 'profile 2',\n    bitrate: '1',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '335': {\n    container: 'webm',\n    resolution: '1080p HDR, HFR',\n    encoding: 'VP9',\n    profile: 'profile 2',\n    bitrate: '1.5-2',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '336': {\n    container: 'webm',\n    resolution: '1440p HDR, HFR',\n    encoding: 'VP9',\n    profile: 'profile 2',\n    bitrate: '5-7',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '337': {\n    container: 'webm',\n    resolution: '2160p HDR, HFR',\n    encoding: 'VP9',\n    profile: 'profile 2',\n    bitrate: '12-14',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  // DASH (audio only)\n  '139': {\n    container: 'mp4',\n    resolution: null,\n    encoding: null,\n    profile: null,\n    bitrate: null,\n    audioEncoding: 'aac',\n    audioBitrate: 48,\n  },\n\n  '140': {\n    container: 'm4a',\n    resolution: null,\n    encoding: null,\n    profile: null,\n    bitrate: null,\n    audioEncoding: 'aac',\n    audioBitrate: 128,\n  },\n\n  '141': {\n    container: 'mp4',\n    resolution: null,\n    encoding: null,\n    profile: null,\n    bitrate: null,\n    audioEncoding: 'aac',\n    audioBitrate: 256,\n  },\n\n  '171': {\n    container: 'webm',\n    resolution: null,\n    encoding: null,\n    profile: null,\n    bitrate: null,\n    audioEncoding: 'vorbis',\n    audioBitrate: 128,\n  },\n\n  '172': {\n    container: 'webm',\n    resolution: null,\n    encoding: null,\n    profile: null,\n    bitrate: null,\n    audioEncoding: 'vorbis',\n    audioBitrate: 192,\n  },\n\n  '249': {\n    container: 'webm',\n    resolution: null,\n    encoding: null,\n    profile: null,\n    bitrate: null,\n    audioEncoding: 'opus',\n    audioBitrate: 48,\n  },\n  '250': {\n    container: 'webm',\n    resolution: null,\n    encoding: null,\n    profile: null,\n    bitrate: null,\n    audioEncoding: 'opus',\n    audioBitrate: 64,\n  },\n  '251': {\n    container: 'webm',\n    resolution: null,\n    encoding: null,\n    profile: null,\n    bitrate: null,\n    audioEncoding: 'opus',\n    audioBitrate: 160,\n  },\n\n  // Live streaming\n  '91': {\n    container: 'ts',\n    resolution: '144p',\n    encoding: 'H.264',\n    profile: 'main',\n    bitrate: '0.1',\n    audioEncoding: 'aac',\n    audioBitrate: 48,\n  },\n\n  '92': {\n    container: 'ts',\n    resolution: '240p',\n    encoding: 'H.264',\n    profile: 'main',\n    bitrate: '0.15-0.3',\n    audioEncoding: 'aac',\n    audioBitrate: 48,\n  },\n\n  '93': {\n    container: 'ts',\n    resolution: '360p',\n    encoding: 'H.264',\n    profile: 'main',\n    bitrate: '0.5-1',\n    audioEncoding: 'aac',\n    audioBitrate: 128,\n  },\n\n  '94': {\n    container: 'ts',\n    resolution: '480p',\n    encoding: 'H.264',\n    profile: 'main',\n    bitrate: '0.8-1.25',\n    audioEncoding: 'aac',\n    audioBitrate: 128,\n  },\n\n  '95': {\n    container: 'ts',\n    resolution: '720p',\n    encoding: 'H.264',\n    profile: 'main',\n    bitrate: '1.5-3',\n    audioEncoding: 'aac',\n    audioBitrate: 256,\n  },\n\n  '96': {\n    container: 'ts',\n    resolution: '1080p',\n    encoding: 'H.264',\n    profile: 'high',\n    bitrate: '2.5-6',\n    audioEncoding: 'aac',\n    audioBitrate: 256,\n  },\n\n  '120': {\n    container: 'flv',\n    resolution: '720p',\n    encoding: 'H.264',\n    profile: 'Main@L3.1',\n    bitrate: '2',\n    audioEncoding: 'aac',\n    audioBitrate: 128,\n  },\n\n  '127': {\n    container: 'ts',\n    resolution: null,\n    encoding: null,\n    profile: null,\n    bitrate: null,\n    audioEncoding: 'aac',\n    audioBitrate: 96,\n  },\n\n  '128': {\n    container: 'ts',\n    resolution: null,\n    encoding: null,\n    profile: null,\n    bitrate: null,\n    audioEncoding: 'aac',\n    audioBitrate: 96,\n  },\n\n  '132': {\n    container: 'ts',\n    resolution: '240p',\n    encoding: 'H.264',\n    profile: 'baseline',\n    bitrate: '0.15-0.2',\n    audioEncoding: 'aac',\n    audioBitrate: 48,\n  },\n\n  '151': {\n    container: 'ts',\n    resolution: '720p',\n    encoding: 'H.264',\n    profile: 'baseline',\n    bitrate: '0.05',\n    audioEncoding: 'aac',\n    audioBitrate: 24,\n  },\n\n};\n","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","const qs       = require('querystring');\nconst url      = require('url');\nconst Entities = require('html-entities').AllHtmlEntities;\nconst util     = require('./util');\n\n\nconst VIDEO_URL = 'https://www.youtube.com/watch?v=';\nconst getMetaItem = (body, name) => {\n  return util.between(body, `<meta itemprop=\"${name}\" content=\"`, '\">');\n};\n\n\n/**\n * Get video description from html\n *\n * @param {string} html\n * @return {string}\n */\nexports.getVideoDescription = (html) => {\n  const regex = /<p.*?id=\"eow-description\".*?>(.+?)<\\/p>[\\n\\r\\s]*?<\\/div>/im;\n  const description = html.match(regex);\n  return description ?\n    Entities.decode(util.stripHTML(description[1])) : '';\n};\n\n/**\n * Get video media (extra information) from html\n *\n * @param {string} body\n * @return {Object}\n */\nexports.getVideoMedia = (body) => {\n  let mediainfo = util.between(body,\n    '<div id=\"watch-description-extras\">',\n    '<div id=\"watch-discussion\" class=\"branded-page-box yt-card\">');\n  if (mediainfo === '') {\n    return {};\n  }\n\n  const regexp = /<h4 class=\"title\">([\\s\\S]*?)<\\/h4>[\\s\\S]*?<ul .*?class=\".*?watch-info-tag-list\">[\\s\\S]*?<li>([\\s\\S]*?)<\\/li>(?:\\s*?<li>([\\s\\S]*?)<\\/li>)?/g;\n  const contentRegexp = /(?: - (\\d{4}) \\()?<a .*?(?:href=\"([^\"]+)\")?.*?>(.*?)<\\/a>/;\n  const imgRegexp = /<img src=\"([^\"]+)\".*?>/;\n  const media = {};\n\n  const image = imgRegexp.exec(mediainfo);\n  if (image) {\n    media.image = url.resolve(VIDEO_URL, image[1]);\n  }\n\n  let match;\n  while ((match = regexp.exec(mediainfo)) != null) {\n    let [, key, value, detail] = match;\n    key = Entities.decode(key).trim().replace(/\\s/g, '_').toLowerCase();\n    const content = contentRegexp.exec(value);\n    if (content) {\n      let [, year, mediaUrl, value2] = content;\n      if (year) {\n        media.year = parseInt(year);\n      } else if (detail) {\n        media.year = parseInt(detail);\n      }\n      value = value.slice(0, content.index);\n      if (key !== 'game' || value2 !== 'YouTube Gaming') {\n        value += value2;\n      }\n      media[key + '_url'] = url.resolve(VIDEO_URL, mediaUrl);\n    }\n    media[key] = Entities.decode(value);\n  }\n  return media;\n};\n\n/**\n * Get video Owner from html.\n *\n * @param {string} body\n * @return {Object}\n */\nconst userRegexp = /<a href=\"\\/user\\/([^\"]+)/;\nconst verifiedRegexp = /<span .*?(aria-label=\"Verified\")(.*?(?=<\\/span>))/;\nexports.getAuthor = (body) => {\n  let ownerinfo = util.between(body,\n    '<div id=\"watch7-user-header\" class=\" spf-link \">',\n    '<div id=\"watch8-action-buttons\" class=\"watch-action-buttons clearfix\">');\n  if (ownerinfo === '') {\n    return {};\n  }\n  const channelName = Entities.decode(util.between(util.between(\n    ownerinfo, '<div class=\"yt-user-info\">', '</div>'), '>', '</a>'));\n  const userMatch = ownerinfo.match(userRegexp);\n  const verifiedMatch = ownerinfo.match(verifiedRegexp);\n  const channelID = getMetaItem(body, 'channelId');\n  const username = userMatch ? userMatch[1] : util.between(\n    util.between(body, '<span itemprop=\"author\"', '</span>'), '/user/', '\">');\n  return {\n    id: channelID,\n    name: channelName,\n    avatar: url.resolve(VIDEO_URL, util.between(ownerinfo,\n      'data-thumb=\"', '\"')),\n    verified: !!verifiedMatch,\n    user: username,\n    channel_url: 'https://www.youtube.com/channel/' + channelID,\n    user_url: 'https://www.youtube.com/user/' + username,\n  };\n};\n\n\n/**\n * Get video published at from html.\n *\n * @param {string} body\n * @return {string}\n */\nexports.getPublished = (body) => {\n  return Date.parse(getMetaItem(body, 'datePublished'));\n};\n\n\n/**\n * Get video published at from html.\n * Credits to https://github.com/paixaop.\n *\n * @param {string} body\n * @return {Array.<Object>}\n */\nexports.getRelatedVideos = (body) => {\n  let jsonStr = util.between(body, '\\'RELATED_PLAYER_ARGS\\': {\"rvs\":', '},');\n  try {\n    jsonStr = JSON.parse(jsonStr);\n  } catch (err) {\n    return [];\n  }\n  return jsonStr.split(',').map((link) => qs.parse(link));\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = $getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  var args = [];\n  for (var i = 0; i < arguments.length; i++) args.push(arguments[i]);\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    ReflectApply(this.listener, this.target, args);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n"],"sourceRoot":""}