{"version":3,"sources":["webpack:///./node_modules/readable-stream/duplex-browser.js","webpack:///./node_modules/core-js/modules/_array-methods.js","webpack:///./node_modules/url/url.js","webpack:///./node_modules/core-js/modules/_is-array.js","webpack:///./node_modules/html-entities/lib/html5-entities.js","webpack:///./node_modules/node-libs-browser/node_modules/punycode/punycode.js","webpack:///./node_modules/html-entities/lib/html4-entities.js","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/core-js/modules/es6.array.find-index.js","webpack:///./node_modules/m3u8stream/lib/m3u8-parser.js","webpack:///./node_modules/https-browserify/index.js","webpack:///./node_modules/readable-stream/lib/_stream_transform.js","webpack:///./node_modules/readable-stream/writable-browser.js","webpack:///./node_modules/sax/lib/sax.js","webpack:///./node_modules/url/util.js","webpack:///./node_modules/core-util-is/lib/util.js","webpack:///./node_modules/m3u8stream/lib/parse-time.js","webpack:///./node_modules/inherits/inherits_browser.js","webpack:///./node_modules/readable-stream/lib/internal/streams/stream-browser.js","webpack:///./node_modules/readable-stream/lib/internal/streams/destroy.js","webpack:///./node_modules/html-entities/lib/xml-entities.js","webpack:///./node_modules/xtend/immutable.js","webpack:///./node_modules/readable-stream/lib/internal/streams/BufferList.js","webpack:///(webpack)/buildin/module.js","webpack:///./node_modules/ytdl-core/lib/util.js","webpack:///./node_modules/core-js/modules/es6.array.find.js","webpack:///./node_modules/readable-stream/lib/_stream_passthrough.js","webpack:///./node_modules/ytdl-core/lib/info.js","webpack:///./node_modules/string_decoder/lib/string_decoder.js","webpack:///./node_modules/html-entities/index.js","webpack:///./node_modules/safe-buffer/index.js","webpack:///./node_modules/builtin-status-codes/browser.js","webpack:///./node_modules/miniget/lib/index.js","webpack:///./node_modules/ieee754/index.js","webpack:///./node_modules/querystring-es3/decode.js","webpack:///./node_modules/stream-http/lib/request.js","webpack:///./node_modules/ytdl-core/lib/sig.js","webpack:///./node_modules/stream-http/index.js","webpack:///./node_modules/ytdl-core/lib/index.js","webpack:///./node_modules/process-nextick-args/index.js","webpack:///./node_modules/stream-http/lib/capability.js","webpack:///./node_modules/readable-stream/lib/_stream_readable.js","webpack:///./node_modules/m3u8stream/lib/index.js","webpack:///./node_modules/readable-stream/lib/_stream_duplex.js","webpack:///./node_modules/querystring-es3/index.js","webpack:///./node_modules/buffer/index.js","webpack:///./node_modules/util-deprecate/browser.js","webpack:///./src/views/Youtube.vue?8352","webpack:///./src/components/YoutubeComp.vue?49cf","webpack:///src/components/YoutubeComp.vue","webpack:///./src/components/YoutubeComp.vue?aa71","webpack:///./src/components/YoutubeComp.vue","webpack:///src/views/Youtube.vue","webpack:///./src/views/Youtube.vue?419a","webpack:///./src/views/Youtube.vue","webpack:///./src/components/YoutubeComp.vue?a52b","webpack:///./node_modules/readable-stream/passthrough.js","webpack:///./node_modules/stream-http/lib/response.js","webpack:///./node_modules/core-js/modules/_array-species-create.js","webpack:///./node_modules/m3u8stream/lib/dash-mpd-parser.js","webpack:///./node_modules/readable-stream/transform.js","webpack:///./node_modules/stream-browserify/index.js","webpack:///./node_modules/to-arraybuffer/index.js","webpack:///./node_modules/m3u8stream/lib/queue.js","webpack:///./node_modules/readable-stream/lib/_stream_writable.js","webpack:///./node_modules/querystring-es3/encode.js","webpack:///./node_modules/ytdl-core/lib/formats.js","webpack:///./node_modules/readable-stream/readable-browser.js","webpack:///./node_modules/isarray/index.js","webpack:///./node_modules/core-js/modules/_array-species-constructor.js","webpack:///./node_modules/ytdl-core/lib/info-extras.js","webpack:///./node_modules/events/events.js"],"names":["module","exports","__webpack_require__","ctx","IObject","toObject","toLength","asc","TYPE","$create","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","NO_HOLES","create","$this","callbackfn","that","val","res","O","self","f","length","index","result","undefined","push","punycode","util","Url","this","protocol","slashes","auth","host","port","hostname","hash","search","query","pathname","path","href","parse","urlParse","resolve","urlResolve","resolveObject","urlResolveObject","format","urlFormat","protocolPattern","portPattern","simplePathPattern","delims","unwise","concat","autoEscape","nonHostChars","hostEndingChars","hostnameMaxLen","hostnamePartPattern","hostnamePartStart","unsafeProtocol","javascript","javascript:","hostlessProtocol","slashedProtocol","http","https","ftp","gopher","file","http:","https:","ftp:","gopher:","file:","querystring","url","parseQueryString","slashesDenoteHost","isObject","u","obj","isString","prototype","call","source","relative","TypeError","queryIndex","indexOf","splitter","uSplit","split","slashRegex","replace","join","rest","trim","simplePath","exec","substr","proto","lowerProto","toLowerCase","match","atSign","hostEnd","i","hec","lastIndexOf","slice","decodeURIComponent","parseHost","ipv6Hostname","hostparts","l","part","newpart","j","k","charCodeAt","validParts","notHost","bit","unshift","toASCII","p","h","ae","esc","encodeURIComponent","escape","qm","s","Object","keys","stringify","charAt","rel","tkeys","tk","tkey","rkeys","rk","rkey","v","relPath","shift","isSourceAbs","isRelAbs","mustEndAbs","removeAllDots","srcPath","psychotic","pop","isNullOrUndefined","authInHost","isNull","last","hasTrailingSlash","up","splice","isAbsolute","cof","Array","isArray","arg","ENTITIES","alphaIndex","charIndex","Html5Entities","createIndexes","_results","charInfo","e","alpha","chars","chr","addChar","chr2","String","fromCharCode","decode","str","entity","code","parseInt","isNaN","encode","strLength","encodeNonUTF","c","encodeNonASCII","global","__WEBPACK_AMD_DEFINE_RESULT__","root","nodeType","freeGlobal","window","maxInt","base","tMin","tMax","skew","damp","initialBias","initialN","delimiter","regexPunycode","regexNonASCII","regexSeparators","errors","overflow","not-basic","invalid-input","baseMinusTMin","floor","Math","stringFromCharCode","error","type","RangeError","map","array","fn","mapDomain","string","parts","labels","encoded","ucs2decode","value","extra","output","counter","ucs2encode","basicToDigit","codePoint","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","input","out","basic","oldi","w","t","baseMinusT","inputLength","n","bias","handledCPCount","basicLength","m","q","currentValue","handledCPCountPlusOne","qMinusT","toUnicode","test","version","ucs2","HTML_ALPHA","HTML_CODES","numIndex","a","Html4Entities","cc","byteLength","toByteArray","fromByteArray","lookup","revLookup","Arr","Uint8Array","len","getLens","b64","Error","validLen","placeHoldersLen","lens","_byteLength","tmp","arr","curByte","tripletToBase64","num","encodeChunk","uint8","start","end","extraBytes","maxChunkLength","len2","$export","$find","KEY","forced","P","F","findIndex","arguments","Writable","[object Object]","super","_lastLine","_seq","_nextItemDuration","on","_parseLine","emit","line","tag","Date","getTime","round","parseFloat","seq","duration","chunk","encoding","callback","lines","toString","forEach","key","hasOwnProperty","validateParams","params","request","cb","get","Transform","Duplex","afterTransform","er","data","ts","_transformState","transforming","writecb","writechunk","rs","_readableState","reading","needReadable","highWaterMark","_read","options","bind","needTransform","writeencoding","sync","transform","_transform","flush","_flush","prefinish","_this","done","stream","_writableState","inherits","_write","_destroy","err","_this2","err2","Buffer","sax","parser","strict","opt","SAXParser","SAXStream","createStream","MAX_BUFFER_LENGTH","Stream","buffers","clearBuffers","bufferCheckPosition","lowercase","lowercasetags","looseCase","tags","closed","closedRoot","sawRoot","noscript","state","S","BEGIN","strictEntities","XML_ENTITIES","attribList","xmlns","ns","rootNS","trackPosition","position","column","checkBufferLength","maxAllowed","max","maxActual","closeText","emitNode","cdata","script","flushBuffers","EVENTS","o","newf","write","resume","close","ex","streamWraps","filter","ev","apply","_parser","writable","readable","me","onend","onerror","_decoder","defineProperty","set","removeAllListeners","enumerable","configurable","constructor","isBuffer","SD","StringDecoder","handler","args","CDATA","DOCTYPE","XML_NAMESPACE","XMLNS_NAMESPACE","xml","nameStart","nameBody","entityStart","entityBody","isWhitespace","isQuote","isAttribEnd","isMatch","regex","notMatch","STATE","BEGIN_WHITESPACE","TEXT","TEXT_ENTITY","OPEN_WAKA","SGML_DECL","SGML_DECL_QUOTED","DOCTYPE_QUOTED","DOCTYPE_DTD","DOCTYPE_DTD_QUOTED","COMMENT_STARTING","COMMENT","COMMENT_ENDING","COMMENT_ENDED","CDATA_ENDING","CDATA_ENDING_2","PROC_INST","PROC_INST_BODY","PROC_INST_ENDING","OPEN_TAG","OPEN_TAG_SLASH","ATTRIB","ATTRIB_NAME","ATTRIB_NAME_SAW_WHITE","ATTRIB_VALUE","ATTRIB_VALUE_QUOTED","ATTRIB_VALUE_CLOSED","ATTRIB_VALUE_UNQUOTED","ATTRIB_VALUE_ENTITY_Q","ATTRIB_VALUE_ENTITY_U","CLOSE_TAG","CLOSE_TAG_SAW_WHITE","SCRIPT","SCRIPT_ENDING","amp","gt","lt","quot","apos","AElig","Aacute","Acirc","Agrave","Aring","Atilde","Auml","Ccedil","ETH","Eacute","Ecirc","Egrave","Euml","Iacute","Icirc","Igrave","Iuml","Ntilde","Oacute","Ocirc","Ograve","Oslash","Otilde","Ouml","THORN","Uacute","Ucirc","Ugrave","Uuml","Yacute","aacute","acirc","aelig","agrave","aring","atilde","auml","ccedil","eacute","ecirc","egrave","eth","euml","iacute","icirc","igrave","iuml","ntilde","oacute","ocirc","ograve","oslash","otilde","ouml","szlig","thorn","uacute","ucirc","ugrave","uuml","yacute","yuml","copy","reg","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","ordf","laquo","not","shy","macr","deg","plusmn","sup1","sup2","sup3","acute","micro","para","middot","cedil","ordm","raquo","frac14","frac12","frac34","iquest","times","divide","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","tilde","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","beta","gamma","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","event","textNode","textopts","text","normalize","strictFail","message","newTag","tagName","parent","name","attributes","qname","attribute","qualName","prefix","local","attrib","attribName","attribValue","qn","openTag","selfClosing","uri","JSON","nv","isSelfClosing","closeTag","closeTo","x","parseEntity","entityLC","numStr","fromCodePoint","beginWhiteSpace","startTagPosition","starti","substring","sgmlDecl","procInstName","procInstBody","pad","toUpperCase","comment","doctype","body","returnState","buffer","highSurrogate","lowSurrogate","MAX_SIZE","codeUnits","Number","isFinite","objectToString","isBoolean","isNumber","isSymbol","isUndefined","isRegExp","re","isDate","d","isError","isFunction","isPrimitive","numberFormat","timeFormat","timeUnits","ms","humanStr","time","firstFormat","total","r","durationStr","ctor","superCtor","super_","TempCtor","EventEmitter","pna","destroy","readableDestroyed","destroyed","writableDestroyed","errorEmitted","nextTick","emitErrorNT","undestroy","ended","endEmitted","ending","finished","ALPHA_INDEX","&lt","&gt","&quot","&apos","&amp","&lt;","&gt;","&quot;","&apos;","&amp;","CHAR_INDEX","60","62","34","39","38","CHAR_S_INDEX","<",">","\"","'","&","XmlEntities","strLenght","extend","target","_classCallCheck","instance","Constructor","copyBuffer","src","offset","BufferList","head","tail","entry","next","ret","clear","alloc","allocUnsafe","inspect","custom","webpackPolyfill","deprecate","paths","children","qs","FORMATS","audioEncodingRanks","mp3","vorbis","aac","opus","flac","videoEncodingRanks","Sorenson H.283","MPEG-4 Visual","VP8","VP9","H.264","sortFormats","b","ares","resolution","bres","afeats","audioBitrate","bfeats","getBitrate","bitrate","audioScore","abitrate","aenc","audioEncoding","avbitrate","bvbitrate","aascore","bascore","avenc","bvenc","chooseFormat","formats","filterFormats","quality","getFormat","itag","find","haystack","needle","RegExp","between","left","right","pos","validQueryDomains","Set","validPathDomains","getURLVideoID","link","parsed","id","has","validateID","idRegex","getVideoID","validateURL","parseFormats","info","url_encoded_fmt_stream_map","adaptive_fmts","addFormatMeta","meta","live","isHLS","isDashMPD","stripHTML","html","parallel","funcs","funcsDone","errGiven","results","checkDone","PassThrough","urllib","extras","sig","VIDEO_URL","EMBED_URL","VIDEO_EURL","INFO_HOST","INFO_PATH","KEYS_TO_SPLIT","getBasicInfo","ceil","now","reqOptions","assign","requestOptions","headers","User-Agent","unavailableMsg","includes","additional","author","getAuthor","published","getPublished","description","getVideoDescription","media","getVideoMedia","related_videos","getRelatedVideos","video_url","jsonStr","config","gotConfig","fromEmbed","video_id","eurl","ps","gl","hl","sts","status","fmt_list","errorcode","reason","no_embed_allowed","player_response","playability","playabilityStatus","age_restricted","html5player","assets","js","getFullInfo","hasManifest","streamingData","dashManifestUrl","hlsManifestUrl","html5playerfile","getTokens","tokens","decipherFormats","debug","decipherURL","getDashManifest","getM3U8","mergeFormats","console","warn","sort","full","_","decipher","formatsMap","onopentag","node","ID","req","setEncoding","cache","Map","timeout","fnName","Promise","reject","setTimeout","delete","isEncoding","_normalizeEncoding","enc","retried","normalizeEncoding","nenc","nb","utf16Text","utf16End","fillLast","utf8FillLast","base64Text","base64End","simpleWrite","simpleEnd","lastNeed","lastTotal","lastChar","utf8CheckByte","byte","utf8CheckIncomplete","buf","utf8CheckExtraBytes","utf8Text","utf8End","AllHtmlEntities","copyProps","dst","SafeBuffer","encodingOrOffset","from","allocUnsafeSlow","size","fill","SlowBuffer","100","101","102","200","201","202","203","204","205","206","207","208","226","300","301","302","303","304","305","307","308","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","421","422","423","424","425","426","428","429","431","451","500","501","502","503","504","505","506","507","508","509","510","511","process","httpLibs","redirectCodes","defaults","maxRedirects","maxRetries","maxReconnects","backoff","inc","acceptEncoding","myreq","myres","retryTimeout","contentLength","rangeEnd","aborted","redirects","retries","reconnects","acceptRanges","rangeStart","downloaded","Range","Accept-Encoding","onRequestError","statusCode","min","doDownload","httpLib","location","decoded","reverse","pipe","abort","unpipe","clearTimeout","read","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","Infinity","pow","rt","abs","log","LN2","sep","eq","regexp","maxKeys","kstr","vstr","idx","xs","capability","response","toArrayBuffer","IncomingMessage","rStates","readyStates","decideMode","preferBinary","useFetch","fetch","mozchunkedarraybuffer","msstream","arraybuffer","vbArray","ClientRequest","opts","_opts","_body","_headers","setHeader","mode","abortController","overrideMimeType","_mode","_fetchTimer","_onFinish","statusValid","xhr","lowerName","unsafeHeaders","getHeader","header","removeHeader","_destroyed","headersObj","method","blobConstructor","Blob","headersList","keyName","signal","controller","AbortController","_fetchAbortController","requestTimeout","credentials","withCredentials","then","_fetchResponse","_connect","_xhr","XMLHttpRequest","open","responseType","ontimeout","setRequestHeader","_response","onreadystatechange","readyState","LOADING","DONE","_onXHRProgress","onprogress","send","flushHeaders","setNoDelay","setSocketKeepAlive","cachedTokens","extractActions","token","swapHeadAndPosition","first","jsVarStr","jsSingleQuoteStr","jsDoubleQuoteStr","jsQuoteStr","jsKeyStr","jsPropStr","jsEmptyStr","reverseStr","sliceStr","spliceStr","swapStr","actionsObjRegexp","actionsFuncRegexp","reverseRegexp","sliceRegexp","spliceRegexp","swapRegexp","objResult","funcResult","objBody","funcBody","reverseKey","sliceKey","spliceKey","swapKey","myreg","tokenizeRegexp","setDownloadURL","decodedUrl","parsedUrl","ratebypass","signature","statusCodes","defaultProtocol","Agent","defaultMaxSockets","globalAgent","STATUS_CODES","METHODS","getInfo","m3u8stream","parseTime","ytdl","downloadFromInfoCallback","_isDestroyed","setImmediate","ondata","chunkReadahead","live_chunk_readahead","begin","liveBuffer","segment","totalSegments","range","removeListener","prependListener","downloadFromInfo","arg1","arg2","arg3","ReadableStream","writableStream","WritableStream","ArrayBuffer","getXHR","XDomainRequest","checkTypeSupport","haveArrayBuffer","haveSlice","VBArray","Readable","ReadableState","EElistenerCount","emitter","listeners","OurUint8Array","_uint8ArrayToBuffer","_isUint8Array","debugUtil","debuglog","destroyImpl","kProxyEvents","_events","isDuplex","objectMode","readableObjectMode","hwm","readableHwm","readableHighWaterMark","defaultHwm","pipes","pipesCount","flowing","emittedReadable","readableListening","resumeScheduled","defaultEncoding","awaitDrain","readingMore","decoder","readableAddChunk","addToFront","skipChunkCheck","onEofChunk","chunkInvalid","getPrototypeOf","addChunk","maybeReadMore","needMoreData","emitReadable","_undestroy","isPaused","MAX_HWM","computeNewHighWaterMark","howMuchToRead","emitReadable_","flow","maybeReadMore_","pipeOnDrain","nReadingNextTick","resume_","fromList","fromListPartial","list","hasStrings","copyFromBufferString","copyFromBuffer","endReadable","endReadableNT","nOrig","doRead","dest","pipeOpts","doEnd","stdout","stderr","endFn","onunpipe","unpipeInfo","hasUnpiped","cleanup","once","ondrain","cleanedUp","onclose","onfinish","needDrain","increasedAwaitDrain","pause","dests","addListener","wrap","paused","_fromList","miniget","m3u8Parser","DashMPDParser","Queue","playlistURL","Parser","m3u8","dash-mpd","currSegment","relativeBegin","liveBegin","streamQueue","concurrency","segmentNumber","requestQueue","onError","refreshThreshold","minRefreshTime","refreshTimeout","lastRefresh","fetchingPlaylist","isStatic","onQueuedEnd","tasks","active","refreshPlaylist","currPlaylist","lastSeq","starttime","addedItems","liveAddedItems","addItem","item","isLive","tailedItems","tailedItemsDuration","reduce","die","objectKeys","allowHalfOpen","onEndNT","base64","ieee754","typedArraySupport","__proto__","foo","subarray","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","fromArrayBuffer","fromString","fromObject","assertSize","checked","actual","fromArrayLike","byteOffset","isnan","isView","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","dir","arrayIndexOf","indexSize","arrLength","valLength","readUInt16BE","foundIndex","found","hexWrite","remaining","strLen","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","bytesPerSequence","decodeCodePointsArray","INSPECT_MAX_BYTES","poolSize","_augment","Symbol","species","_isBuffer","compare","y","swap16","swap32","swap64","equals","thisStart","thisEnd","thisCopy","targetCopy","toJSON","_arr","MAX_ARGUMENTS_LENGTH","codePoints","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","maxBytes","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","INVALID_BASE64_RE","base64clean","stringtrim","units","leadSurrogate","byteArray","hi","lo","msg","warned","deprecated","trace","localStorage","render","_vm","_h","$createElement","_c","_self","staticClass","staticRenderFns","YoutubeCompvue_type_template_id_fc8a5838_scoped_true_render","attrs","action","directives","rawName","expression","placeholder","aria-label","aria-describedby","disabled","domProps","$event","composing","click","savePath","_v","videoSearch","searchVideo","_l","video","title","removeVideo","aria-hidden","thumbnail_url","alt","_s","downloadVideo","YoutubeCompvue_type_template_id_fc8a5838_scoped_true_staticRenderFns","YoutubeCompvue_type_script_lang_js_","props","videoList","methods","lib","getVideoByTitle","electron","dialog","showOpenDialog","properties","catch","components_YoutubeCompvue_type_script_lang_js_","component","componentNormalizer","YoutubeComp","Youtubevue_type_script_lang_js_","components","views_Youtubevue_type_script_lang_js_","Youtube_component","__webpack_exports__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_YoutubeComp_vue_vue_type_style_index_0_id_fc8a5838_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_YoutubeComp_vue_vue_type_style_index_0_id_fc8a5838_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default","UNSENT","OPENED","HEADERS_RECEIVED","fetchTimer","rawHeaders","trailers","rawTrailers","statusMessage","statusText","_resumeFetch","pipeTo","reader","getReader","_pos","responseURL","getAllResponseHeaders","matches","_charset","mimeType","charsetMatch","responseBody","toArray","responseText","newData","MSStreamReader","onload","readAsArrayBuffer","speciesConstructor","original","targetID","lastTag","segmentTemplate","timescale","baseURL","treeLevel","periodStart","currtime","timeline","getSegments","tmpl","context","RepresentationID","Time","p1","availabilitystarttime","startnumber","presentationtimeoffset","initialization","repeat","sourceurl","tl","segmentDuration","onEnd","EE","_isStdio","didOnEnd","listenerCount","arrayCopy","worker","_worker","_concurrency","_next","callbackCalled","CorkedRequest","finish","onCorkedFinish","asyncWrite","browser","WritableState","internalUtil","realHasInstance","nop","writableObjectMode","writableHwm","writableHighWaterMark","finalCalled","noDecode","decodeStrings","writing","corked","bufferProcessing","onwrite","writelen","bufferedRequest","lastBufferedRequest","pendingcb","prefinished","bufferedRequestCount","corkedRequestsFree","writev","_writev","final","_final","writeAfterEnd","validChunk","valid","decodeChunk","writeOrBuffer","isBuf","newChunk","doWrite","onwriteError","finishMaybe","onwriteStateUpdate","needFinish","clearBuffer","afterWrite","onwriteDrain","holder","count","allBuffers","callFinal","need","endWritable","corkReq","getBuffer","current","hasInstance","Function","object","cork","uncork","setDefaultEncoding","stringifyPrimitive","ks","5","container","profile","6","13","17","18","22","35","36","37","43","44","45","46","82","83","84","85","133","134","135","136","137","138","160","242","243","244","247","248","264","266","271","272","278","298","299","313","315","330","331","332","333","334","335","336","337","139","140","141","171","172","249","250","251","91","92","93","94","95","96","120","127","128","132","151","SPECIES","C","Entities","getMetaItem","mediainfo","contentRegexp","imgRegexp","detail","content","year","mediaUrl","value2","userRegexp","verifiedRegexp","ownerinfo","channelName","userMatch","verifiedMatch","channelID","username","avatar","verified","user","channel_url","user_url","ReflectOwnKeys","R","Reflect","ReflectApply","receiver","ProcessEmitWarning","warning","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","NumberIsNaN","init","_eventsCount","_maxListeners","defaultMaxListeners","$getMaxListeners","_addListener","listener","prepend","events","existing","newListener","onceWrapper","fired","wrapFn","_onceWrap","wrapped","_listeners","unwrap","evlistener","unwrapListeners","arrayClone","spliceOne","setMaxListeners","getMaxListeners","doError","prependOnceListener","originalListener","off","rawListeners","eventNames"],"mappings":"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","file":"js/about.0d3c2fd0.js","sourcesContent":["module.exports = require('./lib/_stream_duplex.js');\n","// 0 -> Array#forEach\n// 1 -> Array#map\n// 2 -> Array#filter\n// 3 -> Array#some\n// 4 -> Array#every\n// 5 -> Array#find\n// 6 -> Array#findIndex\nvar ctx = require('./_ctx');\nvar IObject = require('./_iobject');\nvar toObject = require('./_to-object');\nvar toLength = require('./_to-length');\nvar asc = require('./_array-species-create');\nmodule.exports = function (TYPE, $create) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  var create = $create || asc;\n  return function ($this, callbackfn, that) {\n    var O = toObject($this);\n    var self = IObject(O);\n    var f = ctx(callbackfn, that, 3);\n    var length = toLength(self.length);\n    var index = 0;\n    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var val, res;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      val = self[index];\n      res = f(val, index, O);\n      if (TYPE) {\n        if (IS_MAP) result[index] = res;   // map\n        else if (res) switch (TYPE) {\n          case 3: return true;             // some\n          case 5: return val;              // find\n          case 6: return index;            // findIndex\n          case 2: result.push(val);        // filter\n        } else if (IS_EVERY) return false; // every\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar punycode = require('punycode');\nvar util = require('./util');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && util.isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!util.isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n      splitter =\n          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (util.isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      util.isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (util.isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!util.isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host || srcPath.length > 1) &&\n      (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n","// 7.2.2 IsArray(argument)\nvar cof = require('./_cof');\nmodule.exports = Array.isArray || function isArray(arg) {\n  return cof(arg) == 'Array';\n};\n","var ENTITIES = [['Aacute', [193]], ['aacute', [225]], ['Abreve', [258]], ['abreve', [259]], ['ac', [8766]], ['acd', [8767]], ['acE', [8766, 819]], ['Acirc', [194]], ['acirc', [226]], ['acute', [180]], ['Acy', [1040]], ['acy', [1072]], ['AElig', [198]], ['aelig', [230]], ['af', [8289]], ['Afr', [120068]], ['afr', [120094]], ['Agrave', [192]], ['agrave', [224]], ['alefsym', [8501]], ['aleph', [8501]], ['Alpha', [913]], ['alpha', [945]], ['Amacr', [256]], ['amacr', [257]], ['amalg', [10815]], ['amp', [38]], ['AMP', [38]], ['andand', [10837]], ['And', [10835]], ['and', [8743]], ['andd', [10844]], ['andslope', [10840]], ['andv', [10842]], ['ang', [8736]], ['ange', [10660]], ['angle', [8736]], ['angmsdaa', [10664]], ['angmsdab', [10665]], ['angmsdac', [10666]], ['angmsdad', [10667]], ['angmsdae', [10668]], ['angmsdaf', [10669]], ['angmsdag', [10670]], ['angmsdah', [10671]], ['angmsd', [8737]], ['angrt', [8735]], ['angrtvb', [8894]], ['angrtvbd', [10653]], ['angsph', [8738]], ['angst', [197]], ['angzarr', [9084]], ['Aogon', [260]], ['aogon', [261]], ['Aopf', [120120]], ['aopf', [120146]], ['apacir', [10863]], ['ap', [8776]], ['apE', [10864]], ['ape', [8778]], ['apid', [8779]], ['apos', [39]], ['ApplyFunction', [8289]], ['approx', [8776]], ['approxeq', [8778]], ['Aring', [197]], ['aring', [229]], ['Ascr', [119964]], ['ascr', [119990]], ['Assign', [8788]], ['ast', [42]], ['asymp', [8776]], ['asympeq', [8781]], ['Atilde', [195]], ['atilde', [227]], ['Auml', [196]], ['auml', [228]], ['awconint', [8755]], ['awint', [10769]], ['backcong', [8780]], ['backepsilon', [1014]], ['backprime', [8245]], ['backsim', [8765]], ['backsimeq', [8909]], ['Backslash', [8726]], ['Barv', [10983]], ['barvee', [8893]], ['barwed', [8965]], ['Barwed', [8966]], ['barwedge', [8965]], ['bbrk', [9141]], ['bbrktbrk', [9142]], ['bcong', [8780]], ['Bcy', [1041]], ['bcy', [1073]], ['bdquo', [8222]], ['becaus', [8757]], ['because', [8757]], ['Because', [8757]], ['bemptyv', [10672]], ['bepsi', [1014]], ['bernou', [8492]], ['Bernoullis', [8492]], ['Beta', [914]], ['beta', [946]], ['beth', [8502]], ['between', [8812]], ['Bfr', [120069]], ['bfr', [120095]], ['bigcap', [8898]], ['bigcirc', [9711]], ['bigcup', [8899]], ['bigodot', [10752]], ['bigoplus', [10753]], ['bigotimes', [10754]], ['bigsqcup', [10758]], ['bigstar', [9733]], ['bigtriangledown', [9661]], ['bigtriangleup', [9651]], ['biguplus', [10756]], ['bigvee', [8897]], ['bigwedge', [8896]], ['bkarow', [10509]], ['blacklozenge', [10731]], ['blacksquare', [9642]], ['blacktriangle', [9652]], ['blacktriangledown', [9662]], ['blacktriangleleft', [9666]], ['blacktriangleright', [9656]], ['blank', [9251]], ['blk12', [9618]], ['blk14', [9617]], ['blk34', [9619]], ['block', [9608]], ['bne', [61, 8421]], ['bnequiv', [8801, 8421]], ['bNot', [10989]], ['bnot', [8976]], ['Bopf', [120121]], ['bopf', [120147]], ['bot', [8869]], ['bottom', [8869]], ['bowtie', [8904]], ['boxbox', [10697]], ['boxdl', [9488]], ['boxdL', [9557]], ['boxDl', [9558]], ['boxDL', [9559]], ['boxdr', [9484]], ['boxdR', [9554]], ['boxDr', [9555]], ['boxDR', [9556]], ['boxh', [9472]], ['boxH', [9552]], ['boxhd', [9516]], ['boxHd', [9572]], ['boxhD', [9573]], ['boxHD', [9574]], ['boxhu', [9524]], ['boxHu', [9575]], ['boxhU', [9576]], ['boxHU', [9577]], ['boxminus', [8863]], ['boxplus', [8862]], ['boxtimes', [8864]], ['boxul', [9496]], ['boxuL', [9563]], ['boxUl', [9564]], ['boxUL', [9565]], ['boxur', [9492]], ['boxuR', [9560]], ['boxUr', [9561]], ['boxUR', [9562]], ['boxv', [9474]], ['boxV', [9553]], ['boxvh', [9532]], ['boxvH', [9578]], ['boxVh', [9579]], ['boxVH', [9580]], ['boxvl', [9508]], ['boxvL', [9569]], ['boxVl', [9570]], ['boxVL', [9571]], ['boxvr', [9500]], ['boxvR', [9566]], ['boxVr', [9567]], ['boxVR', [9568]], ['bprime', [8245]], ['breve', [728]], ['Breve', [728]], ['brvbar', [166]], ['bscr', [119991]], ['Bscr', [8492]], ['bsemi', [8271]], ['bsim', [8765]], ['bsime', [8909]], ['bsolb', [10693]], ['bsol', [92]], ['bsolhsub', [10184]], ['bull', [8226]], ['bullet', [8226]], ['bump', [8782]], ['bumpE', [10926]], ['bumpe', [8783]], ['Bumpeq', [8782]], ['bumpeq', [8783]], ['Cacute', [262]], ['cacute', [263]], ['capand', [10820]], ['capbrcup', [10825]], ['capcap', [10827]], ['cap', [8745]], ['Cap', [8914]], ['capcup', [10823]], ['capdot', [10816]], ['CapitalDifferentialD', [8517]], ['caps', [8745, 65024]], ['caret', [8257]], ['caron', [711]], ['Cayleys', [8493]], ['ccaps', [10829]], ['Ccaron', [268]], ['ccaron', [269]], ['Ccedil', [199]], ['ccedil', [231]], ['Ccirc', [264]], ['ccirc', [265]], ['Cconint', [8752]], ['ccups', [10828]], ['ccupssm', [10832]], ['Cdot', [266]], ['cdot', [267]], ['cedil', [184]], ['Cedilla', [184]], ['cemptyv', [10674]], ['cent', [162]], ['centerdot', [183]], ['CenterDot', [183]], ['cfr', [120096]], ['Cfr', [8493]], ['CHcy', [1063]], ['chcy', [1095]], ['check', [10003]], ['checkmark', [10003]], ['Chi', [935]], ['chi', [967]], ['circ', [710]], ['circeq', [8791]], ['circlearrowleft', [8634]], ['circlearrowright', [8635]], ['circledast', [8859]], ['circledcirc', [8858]], ['circleddash', [8861]], ['CircleDot', [8857]], ['circledR', [174]], ['circledS', [9416]], ['CircleMinus', [8854]], ['CirclePlus', [8853]], ['CircleTimes', [8855]], ['cir', [9675]], ['cirE', [10691]], ['cire', [8791]], ['cirfnint', [10768]], ['cirmid', [10991]], ['cirscir', [10690]], ['ClockwiseContourIntegral', [8754]], ['clubs', [9827]], ['clubsuit', [9827]], ['colon', [58]], ['Colon', [8759]], ['Colone', [10868]], ['colone', [8788]], ['coloneq', [8788]], ['comma', [44]], ['commat', [64]], ['comp', [8705]], ['compfn', [8728]], ['complement', [8705]], ['complexes', [8450]], ['cong', [8773]], ['congdot', [10861]], ['Congruent', [8801]], ['conint', [8750]], ['Conint', [8751]], ['ContourIntegral', [8750]], ['copf', [120148]], ['Copf', [8450]], ['coprod', [8720]], ['Coproduct', [8720]], ['copy', [169]], ['COPY', [169]], ['copysr', [8471]], ['CounterClockwiseContourIntegral', [8755]], ['crarr', [8629]], ['cross', [10007]], ['Cross', [10799]], ['Cscr', [119966]], ['cscr', [119992]], ['csub', [10959]], ['csube', [10961]], ['csup', [10960]], ['csupe', [10962]], ['ctdot', [8943]], ['cudarrl', [10552]], ['cudarrr', [10549]], ['cuepr', [8926]], ['cuesc', [8927]], ['cularr', [8630]], ['cularrp', [10557]], ['cupbrcap', [10824]], ['cupcap', [10822]], ['CupCap', [8781]], ['cup', [8746]], ['Cup', [8915]], ['cupcup', [10826]], ['cupdot', [8845]], ['cupor', [10821]], ['cups', [8746, 65024]], ['curarr', [8631]], ['curarrm', [10556]], ['curlyeqprec', [8926]], ['curlyeqsucc', [8927]], ['curlyvee', [8910]], ['curlywedge', [8911]], ['curren', [164]], ['curvearrowleft', [8630]], ['curvearrowright', [8631]], ['cuvee', [8910]], ['cuwed', [8911]], ['cwconint', [8754]], ['cwint', [8753]], ['cylcty', [9005]], ['dagger', [8224]], ['Dagger', [8225]], ['daleth', [8504]], ['darr', [8595]], ['Darr', [8609]], ['dArr', [8659]], ['dash', [8208]], ['Dashv', [10980]], ['dashv', [8867]], ['dbkarow', [10511]], ['dblac', [733]], ['Dcaron', [270]], ['dcaron', [271]], ['Dcy', [1044]], ['dcy', [1076]], ['ddagger', [8225]], ['ddarr', [8650]], ['DD', [8517]], ['dd', [8518]], ['DDotrahd', [10513]], ['ddotseq', [10871]], ['deg', [176]], ['Del', [8711]], ['Delta', [916]], ['delta', [948]], ['demptyv', [10673]], ['dfisht', [10623]], ['Dfr', [120071]], ['dfr', [120097]], ['dHar', [10597]], ['dharl', [8643]], ['dharr', [8642]], ['DiacriticalAcute', [180]], ['DiacriticalDot', [729]], ['DiacriticalDoubleAcute', [733]], ['DiacriticalGrave', [96]], ['DiacriticalTilde', [732]], ['diam', [8900]], ['diamond', [8900]], ['Diamond', [8900]], ['diamondsuit', [9830]], ['diams', [9830]], ['die', [168]], ['DifferentialD', [8518]], ['digamma', [989]], ['disin', [8946]], ['div', [247]], ['divide', [247]], ['divideontimes', [8903]], ['divonx', [8903]], ['DJcy', [1026]], ['djcy', [1106]], ['dlcorn', [8990]], ['dlcrop', [8973]], ['dollar', [36]], ['Dopf', [120123]], ['dopf', [120149]], ['Dot', [168]], ['dot', [729]], ['DotDot', [8412]], ['doteq', [8784]], ['doteqdot', [8785]], ['DotEqual', [8784]], ['dotminus', [8760]], ['dotplus', [8724]], ['dotsquare', [8865]], ['doublebarwedge', [8966]], ['DoubleContourIntegral', [8751]], ['DoubleDot', [168]], ['DoubleDownArrow', [8659]], ['DoubleLeftArrow', [8656]], ['DoubleLeftRightArrow', [8660]], ['DoubleLeftTee', [10980]], ['DoubleLongLeftArrow', [10232]], ['DoubleLongLeftRightArrow', [10234]], ['DoubleLongRightArrow', [10233]], ['DoubleRightArrow', [8658]], ['DoubleRightTee', [8872]], ['DoubleUpArrow', [8657]], ['DoubleUpDownArrow', [8661]], ['DoubleVerticalBar', [8741]], ['DownArrowBar', [10515]], ['downarrow', [8595]], ['DownArrow', [8595]], ['Downarrow', [8659]], ['DownArrowUpArrow', [8693]], ['DownBreve', [785]], ['downdownarrows', [8650]], ['downharpoonleft', [8643]], ['downharpoonright', [8642]], ['DownLeftRightVector', [10576]], ['DownLeftTeeVector', [10590]], ['DownLeftVectorBar', [10582]], ['DownLeftVector', [8637]], ['DownRightTeeVector', [10591]], ['DownRightVectorBar', [10583]], ['DownRightVector', [8641]], ['DownTeeArrow', [8615]], ['DownTee', [8868]], ['drbkarow', [10512]], ['drcorn', [8991]], ['drcrop', [8972]], ['Dscr', [119967]], ['dscr', [119993]], ['DScy', [1029]], ['dscy', [1109]], ['dsol', [10742]], ['Dstrok', [272]], ['dstrok', [273]], ['dtdot', [8945]], ['dtri', [9663]], ['dtrif', [9662]], ['duarr', [8693]], ['duhar', [10607]], ['dwangle', [10662]], ['DZcy', [1039]], ['dzcy', [1119]], ['dzigrarr', [10239]], ['Eacute', [201]], ['eacute', [233]], ['easter', [10862]], ['Ecaron', [282]], ['ecaron', [283]], ['Ecirc', [202]], ['ecirc', [234]], ['ecir', [8790]], ['ecolon', [8789]], ['Ecy', [1069]], ['ecy', [1101]], ['eDDot', [10871]], ['Edot', [278]], ['edot', [279]], ['eDot', [8785]], ['ee', [8519]], ['efDot', [8786]], ['Efr', [120072]], ['efr', [120098]], ['eg', [10906]], ['Egrave', [200]], ['egrave', [232]], ['egs', [10902]], ['egsdot', [10904]], ['el', [10905]], ['Element', [8712]], ['elinters', [9191]], ['ell', [8467]], ['els', [10901]], ['elsdot', [10903]], ['Emacr', [274]], ['emacr', [275]], ['empty', [8709]], ['emptyset', [8709]], ['EmptySmallSquare', [9723]], ['emptyv', [8709]], ['EmptyVerySmallSquare', [9643]], ['emsp13', [8196]], ['emsp14', [8197]], ['emsp', [8195]], ['ENG', [330]], ['eng', [331]], ['ensp', [8194]], ['Eogon', [280]], ['eogon', [281]], ['Eopf', [120124]], ['eopf', [120150]], ['epar', [8917]], ['eparsl', [10723]], ['eplus', [10865]], ['epsi', [949]], ['Epsilon', [917]], ['epsilon', [949]], ['epsiv', [1013]], ['eqcirc', [8790]], ['eqcolon', [8789]], ['eqsim', [8770]], ['eqslantgtr', [10902]], ['eqslantless', [10901]], ['Equal', [10869]], ['equals', [61]], ['EqualTilde', [8770]], ['equest', [8799]], ['Equilibrium', [8652]], ['equiv', [8801]], ['equivDD', [10872]], ['eqvparsl', [10725]], ['erarr', [10609]], ['erDot', [8787]], ['escr', [8495]], ['Escr', [8496]], ['esdot', [8784]], ['Esim', [10867]], ['esim', [8770]], ['Eta', [919]], ['eta', [951]], ['ETH', [208]], ['eth', [240]], ['Euml', [203]], ['euml', [235]], ['euro', [8364]], ['excl', [33]], ['exist', [8707]], ['Exists', [8707]], ['expectation', [8496]], ['exponentiale', [8519]], ['ExponentialE', [8519]], ['fallingdotseq', [8786]], ['Fcy', [1060]], ['fcy', [1092]], ['female', [9792]], ['ffilig', [64259]], ['fflig', [64256]], ['ffllig', [64260]], ['Ffr', [120073]], ['ffr', [120099]], ['filig', [64257]], ['FilledSmallSquare', [9724]], ['FilledVerySmallSquare', [9642]], ['fjlig', [102, 106]], ['flat', [9837]], ['fllig', [64258]], ['fltns', [9649]], ['fnof', [402]], ['Fopf', [120125]], ['fopf', [120151]], ['forall', [8704]], ['ForAll', [8704]], ['fork', [8916]], ['forkv', [10969]], ['Fouriertrf', [8497]], ['fpartint', [10765]], ['frac12', [189]], ['frac13', [8531]], ['frac14', [188]], ['frac15', [8533]], ['frac16', [8537]], ['frac18', [8539]], ['frac23', [8532]], ['frac25', [8534]], ['frac34', [190]], ['frac35', [8535]], ['frac38', [8540]], ['frac45', [8536]], ['frac56', [8538]], ['frac58', [8541]], ['frac78', [8542]], ['frasl', [8260]], ['frown', [8994]], ['fscr', [119995]], ['Fscr', [8497]], ['gacute', [501]], ['Gamma', [915]], ['gamma', [947]], ['Gammad', [988]], ['gammad', [989]], ['gap', [10886]], ['Gbreve', [286]], ['gbreve', [287]], ['Gcedil', [290]], ['Gcirc', [284]], ['gcirc', [285]], ['Gcy', [1043]], ['gcy', [1075]], ['Gdot', [288]], ['gdot', [289]], ['ge', [8805]], ['gE', [8807]], ['gEl', [10892]], ['gel', [8923]], ['geq', [8805]], ['geqq', [8807]], ['geqslant', [10878]], ['gescc', [10921]], ['ges', [10878]], ['gesdot', [10880]], ['gesdoto', [10882]], ['gesdotol', [10884]], ['gesl', [8923, 65024]], ['gesles', [10900]], ['Gfr', [120074]], ['gfr', [120100]], ['gg', [8811]], ['Gg', [8921]], ['ggg', [8921]], ['gimel', [8503]], ['GJcy', [1027]], ['gjcy', [1107]], ['gla', [10917]], ['gl', [8823]], ['glE', [10898]], ['glj', [10916]], ['gnap', [10890]], ['gnapprox', [10890]], ['gne', [10888]], ['gnE', [8809]], ['gneq', [10888]], ['gneqq', [8809]], ['gnsim', [8935]], ['Gopf', [120126]], ['gopf', [120152]], ['grave', [96]], ['GreaterEqual', [8805]], ['GreaterEqualLess', [8923]], ['GreaterFullEqual', [8807]], ['GreaterGreater', [10914]], ['GreaterLess', [8823]], ['GreaterSlantEqual', [10878]], ['GreaterTilde', [8819]], ['Gscr', [119970]], ['gscr', [8458]], ['gsim', [8819]], ['gsime', [10894]], ['gsiml', [10896]], ['gtcc', [10919]], ['gtcir', [10874]], ['gt', [62]], ['GT', [62]], ['Gt', [8811]], ['gtdot', [8919]], ['gtlPar', [10645]], ['gtquest', [10876]], ['gtrapprox', [10886]], ['gtrarr', [10616]], ['gtrdot', [8919]], ['gtreqless', [8923]], ['gtreqqless', [10892]], ['gtrless', [8823]], ['gtrsim', [8819]], ['gvertneqq', [8809, 65024]], ['gvnE', [8809, 65024]], ['Hacek', [711]], ['hairsp', [8202]], ['half', [189]], ['hamilt', [8459]], ['HARDcy', [1066]], ['hardcy', [1098]], ['harrcir', [10568]], ['harr', [8596]], ['hArr', [8660]], ['harrw', [8621]], ['Hat', [94]], ['hbar', [8463]], ['Hcirc', [292]], ['hcirc', [293]], ['hearts', [9829]], ['heartsuit', [9829]], ['hellip', [8230]], ['hercon', [8889]], ['hfr', [120101]], ['Hfr', [8460]], ['HilbertSpace', [8459]], ['hksearow', [10533]], ['hkswarow', [10534]], ['hoarr', [8703]], ['homtht', [8763]], ['hookleftarrow', [8617]], ['hookrightarrow', [8618]], ['hopf', [120153]], ['Hopf', [8461]], ['horbar', [8213]], ['HorizontalLine', [9472]], ['hscr', [119997]], ['Hscr', [8459]], ['hslash', [8463]], ['Hstrok', [294]], ['hstrok', [295]], ['HumpDownHump', [8782]], ['HumpEqual', [8783]], ['hybull', [8259]], ['hyphen', [8208]], ['Iacute', [205]], ['iacute', [237]], ['ic', [8291]], ['Icirc', [206]], ['icirc', [238]], ['Icy', [1048]], ['icy', [1080]], ['Idot', [304]], ['IEcy', [1045]], ['iecy', [1077]], ['iexcl', [161]], ['iff', [8660]], ['ifr', [120102]], ['Ifr', [8465]], ['Igrave', [204]], ['igrave', [236]], ['ii', [8520]], ['iiiint', [10764]], ['iiint', [8749]], ['iinfin', [10716]], ['iiota', [8489]], ['IJlig', [306]], ['ijlig', [307]], ['Imacr', [298]], ['imacr', [299]], ['image', [8465]], ['ImaginaryI', [8520]], ['imagline', [8464]], ['imagpart', [8465]], ['imath', [305]], ['Im', [8465]], ['imof', [8887]], ['imped', [437]], ['Implies', [8658]], ['incare', [8453]], ['in', [8712]], ['infin', [8734]], ['infintie', [10717]], ['inodot', [305]], ['intcal', [8890]], ['int', [8747]], ['Int', [8748]], ['integers', [8484]], ['Integral', [8747]], ['intercal', [8890]], ['Intersection', [8898]], ['intlarhk', [10775]], ['intprod', [10812]], ['InvisibleComma', [8291]], ['InvisibleTimes', [8290]], ['IOcy', [1025]], ['iocy', [1105]], ['Iogon', [302]], ['iogon', [303]], ['Iopf', [120128]], ['iopf', [120154]], ['Iota', [921]], ['iota', [953]], ['iprod', [10812]], ['iquest', [191]], ['iscr', [119998]], ['Iscr', [8464]], ['isin', [8712]], ['isindot', [8949]], ['isinE', [8953]], ['isins', [8948]], ['isinsv', [8947]], ['isinv', [8712]], ['it', [8290]], ['Itilde', [296]], ['itilde', [297]], ['Iukcy', [1030]], ['iukcy', [1110]], ['Iuml', [207]], ['iuml', [239]], ['Jcirc', [308]], ['jcirc', [309]], ['Jcy', [1049]], ['jcy', [1081]], ['Jfr', [120077]], ['jfr', [120103]], ['jmath', [567]], ['Jopf', [120129]], ['jopf', [120155]], ['Jscr', [119973]], ['jscr', [119999]], ['Jsercy', [1032]], ['jsercy', [1112]], ['Jukcy', [1028]], ['jukcy', [1108]], ['Kappa', [922]], ['kappa', [954]], ['kappav', [1008]], ['Kcedil', [310]], ['kcedil', [311]], ['Kcy', [1050]], ['kcy', [1082]], ['Kfr', [120078]], ['kfr', [120104]], ['kgreen', [312]], ['KHcy', [1061]], ['khcy', [1093]], ['KJcy', [1036]], ['kjcy', [1116]], ['Kopf', [120130]], ['kopf', [120156]], ['Kscr', [119974]], ['kscr', [120000]], ['lAarr', [8666]], ['Lacute', [313]], ['lacute', [314]], ['laemptyv', [10676]], ['lagran', [8466]], ['Lambda', [923]], ['lambda', [955]], ['lang', [10216]], ['Lang', [10218]], ['langd', [10641]], ['langle', [10216]], ['lap', [10885]], ['Laplacetrf', [8466]], ['laquo', [171]], ['larrb', [8676]], ['larrbfs', [10527]], ['larr', [8592]], ['Larr', [8606]], ['lArr', [8656]], ['larrfs', [10525]], ['larrhk', [8617]], ['larrlp', [8619]], ['larrpl', [10553]], ['larrsim', [10611]], ['larrtl', [8610]], ['latail', [10521]], ['lAtail', [10523]], ['lat', [10923]], ['late', [10925]], ['lates', [10925, 65024]], ['lbarr', [10508]], ['lBarr', [10510]], ['lbbrk', [10098]], ['lbrace', [123]], ['lbrack', [91]], ['lbrke', [10635]], ['lbrksld', [10639]], ['lbrkslu', [10637]], ['Lcaron', [317]], ['lcaron', [318]], ['Lcedil', [315]], ['lcedil', [316]], ['lceil', [8968]], ['lcub', [123]], ['Lcy', [1051]], ['lcy', [1083]], ['ldca', [10550]], ['ldquo', [8220]], ['ldquor', [8222]], ['ldrdhar', [10599]], ['ldrushar', [10571]], ['ldsh', [8626]], ['le', [8804]], ['lE', [8806]], ['LeftAngleBracket', [10216]], ['LeftArrowBar', [8676]], ['leftarrow', [8592]], ['LeftArrow', [8592]], ['Leftarrow', [8656]], ['LeftArrowRightArrow', [8646]], ['leftarrowtail', [8610]], ['LeftCeiling', [8968]], ['LeftDoubleBracket', [10214]], ['LeftDownTeeVector', [10593]], ['LeftDownVectorBar', [10585]], ['LeftDownVector', [8643]], ['LeftFloor', [8970]], ['leftharpoondown', [8637]], ['leftharpoonup', [8636]], ['leftleftarrows', [8647]], ['leftrightarrow', [8596]], ['LeftRightArrow', [8596]], ['Leftrightarrow', [8660]], ['leftrightarrows', [8646]], ['leftrightharpoons', [8651]], ['leftrightsquigarrow', [8621]], ['LeftRightVector', [10574]], ['LeftTeeArrow', [8612]], ['LeftTee', [8867]], ['LeftTeeVector', [10586]], ['leftthreetimes', [8907]], ['LeftTriangleBar', [10703]], ['LeftTriangle', [8882]], ['LeftTriangleEqual', [8884]], ['LeftUpDownVector', [10577]], ['LeftUpTeeVector', [10592]], ['LeftUpVectorBar', [10584]], ['LeftUpVector', [8639]], ['LeftVectorBar', [10578]], ['LeftVector', [8636]], ['lEg', [10891]], ['leg', [8922]], ['leq', [8804]], ['leqq', [8806]], ['leqslant', [10877]], ['lescc', [10920]], ['les', [10877]], ['lesdot', [10879]], ['lesdoto', [10881]], ['lesdotor', [10883]], ['lesg', [8922, 65024]], ['lesges', [10899]], ['lessapprox', [10885]], ['lessdot', [8918]], ['lesseqgtr', [8922]], ['lesseqqgtr', [10891]], ['LessEqualGreater', [8922]], ['LessFullEqual', [8806]], ['LessGreater', [8822]], ['lessgtr', [8822]], ['LessLess', [10913]], ['lesssim', [8818]], ['LessSlantEqual', [10877]], ['LessTilde', [8818]], ['lfisht', [10620]], ['lfloor', [8970]], ['Lfr', [120079]], ['lfr', [120105]], ['lg', [8822]], ['lgE', [10897]], ['lHar', [10594]], ['lhard', [8637]], ['lharu', [8636]], ['lharul', [10602]], ['lhblk', [9604]], ['LJcy', [1033]], ['ljcy', [1113]], ['llarr', [8647]], ['ll', [8810]], ['Ll', [8920]], ['llcorner', [8990]], ['Lleftarrow', [8666]], ['llhard', [10603]], ['lltri', [9722]], ['Lmidot', [319]], ['lmidot', [320]], ['lmoustache', [9136]], ['lmoust', [9136]], ['lnap', [10889]], ['lnapprox', [10889]], ['lne', [10887]], ['lnE', [8808]], ['lneq', [10887]], ['lneqq', [8808]], ['lnsim', [8934]], ['loang', [10220]], ['loarr', [8701]], ['lobrk', [10214]], ['longleftarrow', [10229]], ['LongLeftArrow', [10229]], ['Longleftarrow', [10232]], ['longleftrightarrow', [10231]], ['LongLeftRightArrow', [10231]], ['Longleftrightarrow', [10234]], ['longmapsto', [10236]], ['longrightarrow', [10230]], ['LongRightArrow', [10230]], ['Longrightarrow', [10233]], ['looparrowleft', [8619]], ['looparrowright', [8620]], ['lopar', [10629]], ['Lopf', [120131]], ['lopf', [120157]], ['loplus', [10797]], ['lotimes', [10804]], ['lowast', [8727]], ['lowbar', [95]], ['LowerLeftArrow', [8601]], ['LowerRightArrow', [8600]], ['loz', [9674]], ['lozenge', [9674]], ['lozf', [10731]], ['lpar', [40]], ['lparlt', [10643]], ['lrarr', [8646]], ['lrcorner', [8991]], ['lrhar', [8651]], ['lrhard', [10605]], ['lrm', [8206]], ['lrtri', [8895]], ['lsaquo', [8249]], ['lscr', [120001]], ['Lscr', [8466]], ['lsh', [8624]], ['Lsh', [8624]], ['lsim', [8818]], ['lsime', [10893]], ['lsimg', [10895]], ['lsqb', [91]], ['lsquo', [8216]], ['lsquor', [8218]], ['Lstrok', [321]], ['lstrok', [322]], ['ltcc', [10918]], ['ltcir', [10873]], ['lt', [60]], ['LT', [60]], ['Lt', [8810]], ['ltdot', [8918]], ['lthree', [8907]], ['ltimes', [8905]], ['ltlarr', [10614]], ['ltquest', [10875]], ['ltri', [9667]], ['ltrie', [8884]], ['ltrif', [9666]], ['ltrPar', [10646]], ['lurdshar', [10570]], ['luruhar', [10598]], ['lvertneqq', [8808, 65024]], ['lvnE', [8808, 65024]], ['macr', [175]], ['male', [9794]], ['malt', [10016]], ['maltese', [10016]], ['Map', [10501]], ['map', [8614]], ['mapsto', [8614]], ['mapstodown', [8615]], ['mapstoleft', [8612]], ['mapstoup', [8613]], ['marker', [9646]], ['mcomma', [10793]], ['Mcy', [1052]], ['mcy', [1084]], ['mdash', [8212]], ['mDDot', [8762]], ['measuredangle', [8737]], ['MediumSpace', [8287]], ['Mellintrf', [8499]], ['Mfr', [120080]], ['mfr', [120106]], ['mho', [8487]], ['micro', [181]], ['midast', [42]], ['midcir', [10992]], ['mid', [8739]], ['middot', [183]], ['minusb', [8863]], ['minus', [8722]], ['minusd', [8760]], ['minusdu', [10794]], ['MinusPlus', [8723]], ['mlcp', [10971]], ['mldr', [8230]], ['mnplus', [8723]], ['models', [8871]], ['Mopf', [120132]], ['mopf', [120158]], ['mp', [8723]], ['mscr', [120002]], ['Mscr', [8499]], ['mstpos', [8766]], ['Mu', [924]], ['mu', [956]], ['multimap', [8888]], ['mumap', [8888]], ['nabla', [8711]], ['Nacute', [323]], ['nacute', [324]], ['nang', [8736, 8402]], ['nap', [8777]], ['napE', [10864, 824]], ['napid', [8779, 824]], ['napos', [329]], ['napprox', [8777]], ['natural', [9838]], ['naturals', [8469]], ['natur', [9838]], ['nbsp', [160]], ['nbump', [8782, 824]], ['nbumpe', [8783, 824]], ['ncap', [10819]], ['Ncaron', [327]], ['ncaron', [328]], ['Ncedil', [325]], ['ncedil', [326]], ['ncong', [8775]], ['ncongdot', [10861, 824]], ['ncup', [10818]], ['Ncy', [1053]], ['ncy', [1085]], ['ndash', [8211]], ['nearhk', [10532]], ['nearr', [8599]], ['neArr', [8663]], ['nearrow', [8599]], ['ne', [8800]], ['nedot', [8784, 824]], ['NegativeMediumSpace', [8203]], ['NegativeThickSpace', [8203]], ['NegativeThinSpace', [8203]], ['NegativeVeryThinSpace', [8203]], ['nequiv', [8802]], ['nesear', [10536]], ['nesim', [8770, 824]], ['NestedGreaterGreater', [8811]], ['NestedLessLess', [8810]], ['nexist', [8708]], ['nexists', [8708]], ['Nfr', [120081]], ['nfr', [120107]], ['ngE', [8807, 824]], ['nge', [8817]], ['ngeq', [8817]], ['ngeqq', [8807, 824]], ['ngeqslant', [10878, 824]], ['nges', [10878, 824]], ['nGg', [8921, 824]], ['ngsim', [8821]], ['nGt', [8811, 8402]], ['ngt', [8815]], ['ngtr', [8815]], ['nGtv', [8811, 824]], ['nharr', [8622]], ['nhArr', [8654]], ['nhpar', [10994]], ['ni', [8715]], ['nis', [8956]], ['nisd', [8954]], ['niv', [8715]], ['NJcy', [1034]], ['njcy', [1114]], ['nlarr', [8602]], ['nlArr', [8653]], ['nldr', [8229]], ['nlE', [8806, 824]], ['nle', [8816]], ['nleftarrow', [8602]], ['nLeftarrow', [8653]], ['nleftrightarrow', [8622]], ['nLeftrightarrow', [8654]], ['nleq', [8816]], ['nleqq', [8806, 824]], ['nleqslant', [10877, 824]], ['nles', [10877, 824]], ['nless', [8814]], ['nLl', [8920, 824]], ['nlsim', [8820]], ['nLt', [8810, 8402]], ['nlt', [8814]], ['nltri', [8938]], ['nltrie', [8940]], ['nLtv', [8810, 824]], ['nmid', [8740]], ['NoBreak', [8288]], ['NonBreakingSpace', [160]], ['nopf', [120159]], ['Nopf', [8469]], ['Not', [10988]], ['not', [172]], ['NotCongruent', [8802]], ['NotCupCap', [8813]], ['NotDoubleVerticalBar', [8742]], ['NotElement', [8713]], ['NotEqual', [8800]], ['NotEqualTilde', [8770, 824]], ['NotExists', [8708]], ['NotGreater', [8815]], ['NotGreaterEqual', [8817]], ['NotGreaterFullEqual', [8807, 824]], ['NotGreaterGreater', [8811, 824]], ['NotGreaterLess', [8825]], ['NotGreaterSlantEqual', [10878, 824]], ['NotGreaterTilde', [8821]], ['NotHumpDownHump', [8782, 824]], ['NotHumpEqual', [8783, 824]], ['notin', [8713]], ['notindot', [8949, 824]], ['notinE', [8953, 824]], ['notinva', [8713]], ['notinvb', [8951]], ['notinvc', [8950]], ['NotLeftTriangleBar', [10703, 824]], ['NotLeftTriangle', [8938]], ['NotLeftTriangleEqual', [8940]], ['NotLess', [8814]], ['NotLessEqual', [8816]], ['NotLessGreater', [8824]], ['NotLessLess', [8810, 824]], ['NotLessSlantEqual', [10877, 824]], ['NotLessTilde', [8820]], ['NotNestedGreaterGreater', [10914, 824]], ['NotNestedLessLess', [10913, 824]], ['notni', [8716]], ['notniva', [8716]], ['notnivb', [8958]], ['notnivc', [8957]], ['NotPrecedes', [8832]], ['NotPrecedesEqual', [10927, 824]], ['NotPrecedesSlantEqual', [8928]], ['NotReverseElement', [8716]], ['NotRightTriangleBar', [10704, 824]], ['NotRightTriangle', [8939]], ['NotRightTriangleEqual', [8941]], ['NotSquareSubset', [8847, 824]], ['NotSquareSubsetEqual', [8930]], ['NotSquareSuperset', [8848, 824]], ['NotSquareSupersetEqual', [8931]], ['NotSubset', [8834, 8402]], ['NotSubsetEqual', [8840]], ['NotSucceeds', [8833]], ['NotSucceedsEqual', [10928, 824]], ['NotSucceedsSlantEqual', [8929]], ['NotSucceedsTilde', [8831, 824]], ['NotSuperset', [8835, 8402]], ['NotSupersetEqual', [8841]], ['NotTilde', [8769]], ['NotTildeEqual', [8772]], ['NotTildeFullEqual', [8775]], ['NotTildeTilde', [8777]], ['NotVerticalBar', [8740]], ['nparallel', [8742]], ['npar', [8742]], ['nparsl', [11005, 8421]], ['npart', [8706, 824]], ['npolint', [10772]], ['npr', [8832]], ['nprcue', [8928]], ['nprec', [8832]], ['npreceq', [10927, 824]], ['npre', [10927, 824]], ['nrarrc', [10547, 824]], ['nrarr', [8603]], ['nrArr', [8655]], ['nrarrw', [8605, 824]], ['nrightarrow', [8603]], ['nRightarrow', [8655]], ['nrtri', [8939]], ['nrtrie', [8941]], ['nsc', [8833]], ['nsccue', [8929]], ['nsce', [10928, 824]], ['Nscr', [119977]], ['nscr', [120003]], ['nshortmid', [8740]], ['nshortparallel', [8742]], ['nsim', [8769]], ['nsime', [8772]], ['nsimeq', [8772]], ['nsmid', [8740]], ['nspar', [8742]], ['nsqsube', [8930]], ['nsqsupe', [8931]], ['nsub', [8836]], ['nsubE', [10949, 824]], ['nsube', [8840]], ['nsubset', [8834, 8402]], ['nsubseteq', [8840]], ['nsubseteqq', [10949, 824]], ['nsucc', [8833]], ['nsucceq', [10928, 824]], ['nsup', [8837]], ['nsupE', [10950, 824]], ['nsupe', [8841]], ['nsupset', [8835, 8402]], ['nsupseteq', [8841]], ['nsupseteqq', [10950, 824]], ['ntgl', [8825]], ['Ntilde', [209]], ['ntilde', [241]], ['ntlg', [8824]], ['ntriangleleft', [8938]], ['ntrianglelefteq', [8940]], ['ntriangleright', [8939]], ['ntrianglerighteq', [8941]], ['Nu', [925]], ['nu', [957]], ['num', [35]], ['numero', [8470]], ['numsp', [8199]], ['nvap', [8781, 8402]], ['nvdash', [8876]], ['nvDash', [8877]], ['nVdash', [8878]], ['nVDash', [8879]], ['nvge', [8805, 8402]], ['nvgt', [62, 8402]], ['nvHarr', [10500]], ['nvinfin', [10718]], ['nvlArr', [10498]], ['nvle', [8804, 8402]], ['nvlt', [60, 8402]], ['nvltrie', [8884, 8402]], ['nvrArr', [10499]], ['nvrtrie', [8885, 8402]], ['nvsim', [8764, 8402]], ['nwarhk', [10531]], ['nwarr', [8598]], ['nwArr', [8662]], ['nwarrow', [8598]], ['nwnear', [10535]], ['Oacute', [211]], ['oacute', [243]], ['oast', [8859]], ['Ocirc', [212]], ['ocirc', [244]], ['ocir', [8858]], ['Ocy', [1054]], ['ocy', [1086]], ['odash', [8861]], ['Odblac', [336]], ['odblac', [337]], ['odiv', [10808]], ['odot', [8857]], ['odsold', [10684]], ['OElig', [338]], ['oelig', [339]], ['ofcir', [10687]], ['Ofr', [120082]], ['ofr', [120108]], ['ogon', [731]], ['Ograve', [210]], ['ograve', [242]], ['ogt', [10689]], ['ohbar', [10677]], ['ohm', [937]], ['oint', [8750]], ['olarr', [8634]], ['olcir', [10686]], ['olcross', [10683]], ['oline', [8254]], ['olt', [10688]], ['Omacr', [332]], ['omacr', [333]], ['Omega', [937]], ['omega', [969]], ['Omicron', [927]], ['omicron', [959]], ['omid', [10678]], ['ominus', [8854]], ['Oopf', [120134]], ['oopf', [120160]], ['opar', [10679]], ['OpenCurlyDoubleQuote', [8220]], ['OpenCurlyQuote', [8216]], ['operp', [10681]], ['oplus', [8853]], ['orarr', [8635]], ['Or', [10836]], ['or', [8744]], ['ord', [10845]], ['order', [8500]], ['orderof', [8500]], ['ordf', [170]], ['ordm', [186]], ['origof', [8886]], ['oror', [10838]], ['orslope', [10839]], ['orv', [10843]], ['oS', [9416]], ['Oscr', [119978]], ['oscr', [8500]], ['Oslash', [216]], ['oslash', [248]], ['osol', [8856]], ['Otilde', [213]], ['otilde', [245]], ['otimesas', [10806]], ['Otimes', [10807]], ['otimes', [8855]], ['Ouml', [214]], ['ouml', [246]], ['ovbar', [9021]], ['OverBar', [8254]], ['OverBrace', [9182]], ['OverBracket', [9140]], ['OverParenthesis', [9180]], ['para', [182]], ['parallel', [8741]], ['par', [8741]], ['parsim', [10995]], ['parsl', [11005]], ['part', [8706]], ['PartialD', [8706]], ['Pcy', [1055]], ['pcy', [1087]], ['percnt', [37]], ['period', [46]], ['permil', [8240]], ['perp', [8869]], ['pertenk', [8241]], ['Pfr', [120083]], ['pfr', [120109]], ['Phi', [934]], ['phi', [966]], ['phiv', [981]], ['phmmat', [8499]], ['phone', [9742]], ['Pi', [928]], ['pi', [960]], ['pitchfork', [8916]], ['piv', [982]], ['planck', [8463]], ['planckh', [8462]], ['plankv', [8463]], ['plusacir', [10787]], ['plusb', [8862]], ['pluscir', [10786]], ['plus', [43]], ['plusdo', [8724]], ['plusdu', [10789]], ['pluse', [10866]], ['PlusMinus', [177]], ['plusmn', [177]], ['plussim', [10790]], ['plustwo', [10791]], ['pm', [177]], ['Poincareplane', [8460]], ['pointint', [10773]], ['popf', [120161]], ['Popf', [8473]], ['pound', [163]], ['prap', [10935]], ['Pr', [10939]], ['pr', [8826]], ['prcue', [8828]], ['precapprox', [10935]], ['prec', [8826]], ['preccurlyeq', [8828]], ['Precedes', [8826]], ['PrecedesEqual', [10927]], ['PrecedesSlantEqual', [8828]], ['PrecedesTilde', [8830]], ['preceq', [10927]], ['precnapprox', [10937]], ['precneqq', [10933]], ['precnsim', [8936]], ['pre', [10927]], ['prE', [10931]], ['precsim', [8830]], ['prime', [8242]], ['Prime', [8243]], ['primes', [8473]], ['prnap', [10937]], ['prnE', [10933]], ['prnsim', [8936]], ['prod', [8719]], ['Product', [8719]], ['profalar', [9006]], ['profline', [8978]], ['profsurf', [8979]], ['prop', [8733]], ['Proportional', [8733]], ['Proportion', [8759]], ['propto', [8733]], ['prsim', [8830]], ['prurel', [8880]], ['Pscr', [119979]], ['pscr', [120005]], ['Psi', [936]], ['psi', [968]], ['puncsp', [8200]], ['Qfr', [120084]], ['qfr', [120110]], ['qint', [10764]], ['qopf', [120162]], ['Qopf', [8474]], ['qprime', [8279]], ['Qscr', [119980]], ['qscr', [120006]], ['quaternions', [8461]], ['quatint', [10774]], ['quest', [63]], ['questeq', [8799]], ['quot', [34]], ['QUOT', [34]], ['rAarr', [8667]], ['race', [8765, 817]], ['Racute', [340]], ['racute', [341]], ['radic', [8730]], ['raemptyv', [10675]], ['rang', [10217]], ['Rang', [10219]], ['rangd', [10642]], ['range', [10661]], ['rangle', [10217]], ['raquo', [187]], ['rarrap', [10613]], ['rarrb', [8677]], ['rarrbfs', [10528]], ['rarrc', [10547]], ['rarr', [8594]], ['Rarr', [8608]], ['rArr', [8658]], ['rarrfs', [10526]], ['rarrhk', [8618]], ['rarrlp', [8620]], ['rarrpl', [10565]], ['rarrsim', [10612]], ['Rarrtl', [10518]], ['rarrtl', [8611]], ['rarrw', [8605]], ['ratail', [10522]], ['rAtail', [10524]], ['ratio', [8758]], ['rationals', [8474]], ['rbarr', [10509]], ['rBarr', [10511]], ['RBarr', [10512]], ['rbbrk', [10099]], ['rbrace', [125]], ['rbrack', [93]], ['rbrke', [10636]], ['rbrksld', [10638]], ['rbrkslu', [10640]], ['Rcaron', [344]], ['rcaron', [345]], ['Rcedil', [342]], ['rcedil', [343]], ['rceil', [8969]], ['rcub', [125]], ['Rcy', [1056]], ['rcy', [1088]], ['rdca', [10551]], ['rdldhar', [10601]], ['rdquo', [8221]], ['rdquor', [8221]], ['CloseCurlyDoubleQuote', [8221]], ['rdsh', [8627]], ['real', [8476]], ['realine', [8475]], ['realpart', [8476]], ['reals', [8477]], ['Re', [8476]], ['rect', [9645]], ['reg', [174]], ['REG', [174]], ['ReverseElement', [8715]], ['ReverseEquilibrium', [8651]], ['ReverseUpEquilibrium', [10607]], ['rfisht', [10621]], ['rfloor', [8971]], ['rfr', [120111]], ['Rfr', [8476]], ['rHar', [10596]], ['rhard', [8641]], ['rharu', [8640]], ['rharul', [10604]], ['Rho', [929]], ['rho', [961]], ['rhov', [1009]], ['RightAngleBracket', [10217]], ['RightArrowBar', [8677]], ['rightarrow', [8594]], ['RightArrow', [8594]], ['Rightarrow', [8658]], ['RightArrowLeftArrow', [8644]], ['rightarrowtail', [8611]], ['RightCeiling', [8969]], ['RightDoubleBracket', [10215]], ['RightDownTeeVector', [10589]], ['RightDownVectorBar', [10581]], ['RightDownVector', [8642]], ['RightFloor', [8971]], ['rightharpoondown', [8641]], ['rightharpoonup', [8640]], ['rightleftarrows', [8644]], ['rightleftharpoons', [8652]], ['rightrightarrows', [8649]], ['rightsquigarrow', [8605]], ['RightTeeArrow', [8614]], ['RightTee', [8866]], ['RightTeeVector', [10587]], ['rightthreetimes', [8908]], ['RightTriangleBar', [10704]], ['RightTriangle', [8883]], ['RightTriangleEqual', [8885]], ['RightUpDownVector', [10575]], ['RightUpTeeVector', [10588]], ['RightUpVectorBar', [10580]], ['RightUpVector', [8638]], ['RightVectorBar', [10579]], ['RightVector', [8640]], ['ring', [730]], ['risingdotseq', [8787]], ['rlarr', [8644]], ['rlhar', [8652]], ['rlm', [8207]], ['rmoustache', [9137]], ['rmoust', [9137]], ['rnmid', [10990]], ['roang', [10221]], ['roarr', [8702]], ['robrk', [10215]], ['ropar', [10630]], ['ropf', [120163]], ['Ropf', [8477]], ['roplus', [10798]], ['rotimes', [10805]], ['RoundImplies', [10608]], ['rpar', [41]], ['rpargt', [10644]], ['rppolint', [10770]], ['rrarr', [8649]], ['Rrightarrow', [8667]], ['rsaquo', [8250]], ['rscr', [120007]], ['Rscr', [8475]], ['rsh', [8625]], ['Rsh', [8625]], ['rsqb', [93]], ['rsquo', [8217]], ['rsquor', [8217]], ['CloseCurlyQuote', [8217]], ['rthree', [8908]], ['rtimes', [8906]], ['rtri', [9657]], ['rtrie', [8885]], ['rtrif', [9656]], ['rtriltri', [10702]], ['RuleDelayed', [10740]], ['ruluhar', [10600]], ['rx', [8478]], ['Sacute', [346]], ['sacute', [347]], ['sbquo', [8218]], ['scap', [10936]], ['Scaron', [352]], ['scaron', [353]], ['Sc', [10940]], ['sc', [8827]], ['sccue', [8829]], ['sce', [10928]], ['scE', [10932]], ['Scedil', [350]], ['scedil', [351]], ['Scirc', [348]], ['scirc', [349]], ['scnap', [10938]], ['scnE', [10934]], ['scnsim', [8937]], ['scpolint', [10771]], ['scsim', [8831]], ['Scy', [1057]], ['scy', [1089]], ['sdotb', [8865]], ['sdot', [8901]], ['sdote', [10854]], ['searhk', [10533]], ['searr', [8600]], ['seArr', [8664]], ['searrow', [8600]], ['sect', [167]], ['semi', [59]], ['seswar', [10537]], ['setminus', [8726]], ['setmn', [8726]], ['sext', [10038]], ['Sfr', [120086]], ['sfr', [120112]], ['sfrown', [8994]], ['sharp', [9839]], ['SHCHcy', [1065]], ['shchcy', [1097]], ['SHcy', [1064]], ['shcy', [1096]], ['ShortDownArrow', [8595]], ['ShortLeftArrow', [8592]], ['shortmid', [8739]], ['shortparallel', [8741]], ['ShortRightArrow', [8594]], ['ShortUpArrow', [8593]], ['shy', [173]], ['Sigma', [931]], ['sigma', [963]], ['sigmaf', [962]], ['sigmav', [962]], ['sim', [8764]], ['simdot', [10858]], ['sime', [8771]], ['simeq', [8771]], ['simg', [10910]], ['simgE', [10912]], ['siml', [10909]], ['simlE', [10911]], ['simne', [8774]], ['simplus', [10788]], ['simrarr', [10610]], ['slarr', [8592]], ['SmallCircle', [8728]], ['smallsetminus', [8726]], ['smashp', [10803]], ['smeparsl', [10724]], ['smid', [8739]], ['smile', [8995]], ['smt', [10922]], ['smte', [10924]], ['smtes', [10924, 65024]], ['SOFTcy', [1068]], ['softcy', [1100]], ['solbar', [9023]], ['solb', [10692]], ['sol', [47]], ['Sopf', [120138]], ['sopf', [120164]], ['spades', [9824]], ['spadesuit', [9824]], ['spar', [8741]], ['sqcap', [8851]], ['sqcaps', [8851, 65024]], ['sqcup', [8852]], ['sqcups', [8852, 65024]], ['Sqrt', [8730]], ['sqsub', [8847]], ['sqsube', [8849]], ['sqsubset', [8847]], ['sqsubseteq', [8849]], ['sqsup', [8848]], ['sqsupe', [8850]], ['sqsupset', [8848]], ['sqsupseteq', [8850]], ['square', [9633]], ['Square', [9633]], ['SquareIntersection', [8851]], ['SquareSubset', [8847]], ['SquareSubsetEqual', [8849]], ['SquareSuperset', [8848]], ['SquareSupersetEqual', [8850]], ['SquareUnion', [8852]], ['squarf', [9642]], ['squ', [9633]], ['squf', [9642]], ['srarr', [8594]], ['Sscr', [119982]], ['sscr', [120008]], ['ssetmn', [8726]], ['ssmile', [8995]], ['sstarf', [8902]], ['Star', [8902]], ['star', [9734]], ['starf', [9733]], ['straightepsilon', [1013]], ['straightphi', [981]], ['strns', [175]], ['sub', [8834]], ['Sub', [8912]], ['subdot', [10941]], ['subE', [10949]], ['sube', [8838]], ['subedot', [10947]], ['submult', [10945]], ['subnE', [10955]], ['subne', [8842]], ['subplus', [10943]], ['subrarr', [10617]], ['subset', [8834]], ['Subset', [8912]], ['subseteq', [8838]], ['subseteqq', [10949]], ['SubsetEqual', [8838]], ['subsetneq', [8842]], ['subsetneqq', [10955]], ['subsim', [10951]], ['subsub', [10965]], ['subsup', [10963]], ['succapprox', [10936]], ['succ', [8827]], ['succcurlyeq', [8829]], ['Succeeds', [8827]], ['SucceedsEqual', [10928]], ['SucceedsSlantEqual', [8829]], ['SucceedsTilde', [8831]], ['succeq', [10928]], ['succnapprox', [10938]], ['succneqq', [10934]], ['succnsim', [8937]], ['succsim', [8831]], ['SuchThat', [8715]], ['sum', [8721]], ['Sum', [8721]], ['sung', [9834]], ['sup1', [185]], ['sup2', [178]], ['sup3', [179]], ['sup', [8835]], ['Sup', [8913]], ['supdot', [10942]], ['supdsub', [10968]], ['supE', [10950]], ['supe', [8839]], ['supedot', [10948]], ['Superset', [8835]], ['SupersetEqual', [8839]], ['suphsol', [10185]], ['suphsub', [10967]], ['suplarr', [10619]], ['supmult', [10946]], ['supnE', [10956]], ['supne', [8843]], ['supplus', [10944]], ['supset', [8835]], ['Supset', [8913]], ['supseteq', [8839]], ['supseteqq', [10950]], ['supsetneq', [8843]], ['supsetneqq', [10956]], ['supsim', [10952]], ['supsub', [10964]], ['supsup', [10966]], ['swarhk', [10534]], ['swarr', [8601]], ['swArr', [8665]], ['swarrow', [8601]], ['swnwar', [10538]], ['szlig', [223]], ['Tab', [9]], ['target', [8982]], ['Tau', [932]], ['tau', [964]], ['tbrk', [9140]], ['Tcaron', [356]], ['tcaron', [357]], ['Tcedil', [354]], ['tcedil', [355]], ['Tcy', [1058]], ['tcy', [1090]], ['tdot', [8411]], ['telrec', [8981]], ['Tfr', [120087]], ['tfr', [120113]], ['there4', [8756]], ['therefore', [8756]], ['Therefore', [8756]], ['Theta', [920]], ['theta', [952]], ['thetasym', [977]], ['thetav', [977]], ['thickapprox', [8776]], ['thicksim', [8764]], ['ThickSpace', [8287, 8202]], ['ThinSpace', [8201]], ['thinsp', [8201]], ['thkap', [8776]], ['thksim', [8764]], ['THORN', [222]], ['thorn', [254]], ['tilde', [732]], ['Tilde', [8764]], ['TildeEqual', [8771]], ['TildeFullEqual', [8773]], ['TildeTilde', [8776]], ['timesbar', [10801]], ['timesb', [8864]], ['times', [215]], ['timesd', [10800]], ['tint', [8749]], ['toea', [10536]], ['topbot', [9014]], ['topcir', [10993]], ['top', [8868]], ['Topf', [120139]], ['topf', [120165]], ['topfork', [10970]], ['tosa', [10537]], ['tprime', [8244]], ['trade', [8482]], ['TRADE', [8482]], ['triangle', [9653]], ['triangledown', [9663]], ['triangleleft', [9667]], ['trianglelefteq', [8884]], ['triangleq', [8796]], ['triangleright', [9657]], ['trianglerighteq', [8885]], ['tridot', [9708]], ['trie', [8796]], ['triminus', [10810]], ['TripleDot', [8411]], ['triplus', [10809]], ['trisb', [10701]], ['tritime', [10811]], ['trpezium', [9186]], ['Tscr', [119983]], ['tscr', [120009]], ['TScy', [1062]], ['tscy', [1094]], ['TSHcy', [1035]], ['tshcy', [1115]], ['Tstrok', [358]], ['tstrok', [359]], ['twixt', [8812]], ['twoheadleftarrow', [8606]], ['twoheadrightarrow', [8608]], ['Uacute', [218]], ['uacute', [250]], ['uarr', [8593]], ['Uarr', [8607]], ['uArr', [8657]], ['Uarrocir', [10569]], ['Ubrcy', [1038]], ['ubrcy', [1118]], ['Ubreve', [364]], ['ubreve', [365]], ['Ucirc', [219]], ['ucirc', [251]], ['Ucy', [1059]], ['ucy', [1091]], ['udarr', [8645]], ['Udblac', [368]], ['udblac', [369]], ['udhar', [10606]], ['ufisht', [10622]], ['Ufr', [120088]], ['ufr', [120114]], ['Ugrave', [217]], ['ugrave', [249]], ['uHar', [10595]], ['uharl', [8639]], ['uharr', [8638]], ['uhblk', [9600]], ['ulcorn', [8988]], ['ulcorner', [8988]], ['ulcrop', [8975]], ['ultri', [9720]], ['Umacr', [362]], ['umacr', [363]], ['uml', [168]], ['UnderBar', [95]], ['UnderBrace', [9183]], ['UnderBracket', [9141]], ['UnderParenthesis', [9181]], ['Union', [8899]], ['UnionPlus', [8846]], ['Uogon', [370]], ['uogon', [371]], ['Uopf', [120140]], ['uopf', [120166]], ['UpArrowBar', [10514]], ['uparrow', [8593]], ['UpArrow', [8593]], ['Uparrow', [8657]], ['UpArrowDownArrow', [8645]], ['updownarrow', [8597]], ['UpDownArrow', [8597]], ['Updownarrow', [8661]], ['UpEquilibrium', [10606]], ['upharpoonleft', [8639]], ['upharpoonright', [8638]], ['uplus', [8846]], ['UpperLeftArrow', [8598]], ['UpperRightArrow', [8599]], ['upsi', [965]], ['Upsi', [978]], ['upsih', [978]], ['Upsilon', [933]], ['upsilon', [965]], ['UpTeeArrow', [8613]], ['UpTee', [8869]], ['upuparrows', [8648]], ['urcorn', [8989]], ['urcorner', [8989]], ['urcrop', [8974]], ['Uring', [366]], ['uring', [367]], ['urtri', [9721]], ['Uscr', [119984]], ['uscr', [120010]], ['utdot', [8944]], ['Utilde', [360]], ['utilde', [361]], ['utri', [9653]], ['utrif', [9652]], ['uuarr', [8648]], ['Uuml', [220]], ['uuml', [252]], ['uwangle', [10663]], ['vangrt', [10652]], ['varepsilon', [1013]], ['varkappa', [1008]], ['varnothing', [8709]], ['varphi', [981]], ['varpi', [982]], ['varpropto', [8733]], ['varr', [8597]], ['vArr', [8661]], ['varrho', [1009]], ['varsigma', [962]], ['varsubsetneq', [8842, 65024]], ['varsubsetneqq', [10955, 65024]], ['varsupsetneq', [8843, 65024]], ['varsupsetneqq', [10956, 65024]], ['vartheta', [977]], ['vartriangleleft', [8882]], ['vartriangleright', [8883]], ['vBar', [10984]], ['Vbar', [10987]], ['vBarv', [10985]], ['Vcy', [1042]], ['vcy', [1074]], ['vdash', [8866]], ['vDash', [8872]], ['Vdash', [8873]], ['VDash', [8875]], ['Vdashl', [10982]], ['veebar', [8891]], ['vee', [8744]], ['Vee', [8897]], ['veeeq', [8794]], ['vellip', [8942]], ['verbar', [124]], ['Verbar', [8214]], ['vert', [124]], ['Vert', [8214]], ['VerticalBar', [8739]], ['VerticalLine', [124]], ['VerticalSeparator', [10072]], ['VerticalTilde', [8768]], ['VeryThinSpace', [8202]], ['Vfr', [120089]], ['vfr', [120115]], ['vltri', [8882]], ['vnsub', [8834, 8402]], ['vnsup', [8835, 8402]], ['Vopf', [120141]], ['vopf', [120167]], ['vprop', [8733]], ['vrtri', [8883]], ['Vscr', [119985]], ['vscr', [120011]], ['vsubnE', [10955, 65024]], ['vsubne', [8842, 65024]], ['vsupnE', [10956, 65024]], ['vsupne', [8843, 65024]], ['Vvdash', [8874]], ['vzigzag', [10650]], ['Wcirc', [372]], ['wcirc', [373]], ['wedbar', [10847]], ['wedge', [8743]], ['Wedge', [8896]], ['wedgeq', [8793]], ['weierp', [8472]], ['Wfr', [120090]], ['wfr', [120116]], ['Wopf', [120142]], ['wopf', [120168]], ['wp', [8472]], ['wr', [8768]], ['wreath', [8768]], ['Wscr', [119986]], ['wscr', [120012]], ['xcap', [8898]], ['xcirc', [9711]], ['xcup', [8899]], ['xdtri', [9661]], ['Xfr', [120091]], ['xfr', [120117]], ['xharr', [10231]], ['xhArr', [10234]], ['Xi', [926]], ['xi', [958]], ['xlarr', [10229]], ['xlArr', [10232]], ['xmap', [10236]], ['xnis', [8955]], ['xodot', [10752]], ['Xopf', [120143]], ['xopf', [120169]], ['xoplus', [10753]], ['xotime', [10754]], ['xrarr', [10230]], ['xrArr', [10233]], ['Xscr', [119987]], ['xscr', [120013]], ['xsqcup', [10758]], ['xuplus', [10756]], ['xutri', [9651]], ['xvee', [8897]], ['xwedge', [8896]], ['Yacute', [221]], ['yacute', [253]], ['YAcy', [1071]], ['yacy', [1103]], ['Ycirc', [374]], ['ycirc', [375]], ['Ycy', [1067]], ['ycy', [1099]], ['yen', [165]], ['Yfr', [120092]], ['yfr', [120118]], ['YIcy', [1031]], ['yicy', [1111]], ['Yopf', [120144]], ['yopf', [120170]], ['Yscr', [119988]], ['yscr', [120014]], ['YUcy', [1070]], ['yucy', [1102]], ['yuml', [255]], ['Yuml', [376]], ['Zacute', [377]], ['zacute', [378]], ['Zcaron', [381]], ['zcaron', [382]], ['Zcy', [1047]], ['zcy', [1079]], ['Zdot', [379]], ['zdot', [380]], ['zeetrf', [8488]], ['ZeroWidthSpace', [8203]], ['Zeta', [918]], ['zeta', [950]], ['zfr', [120119]], ['Zfr', [8488]], ['ZHcy', [1046]], ['zhcy', [1078]], ['zigrarr', [8669]], ['zopf', [120171]], ['Zopf', [8484]], ['Zscr', [119989]], ['zscr', [120015]], ['zwj', [8205]], ['zwnj', [8204]]];\n\nvar alphaIndex = {};\nvar charIndex = {};\n\ncreateIndexes(alphaIndex, charIndex);\n\n/**\n * @constructor\n */\nfunction Html5Entities() {}\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml5Entities.prototype.decode = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    return str.replace(/&(#?[\\w\\d]+);?/g, function(s, entity) {\n        var chr;\n        if (entity.charAt(0) === \"#\") {\n            var code = entity.charAt(1) === 'x' ?\n                parseInt(entity.substr(2).toLowerCase(), 16) :\n                parseInt(entity.substr(1));\n\n            if (!(isNaN(code) || code < -32768 || code > 65535)) {\n                chr = String.fromCharCode(code);\n            }\n        } else {\n            chr = alphaIndex[entity];\n        }\n        return chr || s;\n    });\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\n Html5Entities.decode = function(str) {\n    return new Html5Entities().decode(str);\n };\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml5Entities.prototype.encode = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    var strLength = str.length;\n    var result = '';\n    var i = 0;\n    while (i < strLength) {\n        var charInfo = charIndex[str.charCodeAt(i)];\n        if (charInfo) {\n            var alpha = charInfo[str.charCodeAt(i + 1)];\n            if (alpha) {\n                i++;\n            } else {\n                alpha = charInfo[''];\n            }\n            if (alpha) {\n                result += \"&\" + alpha + \";\";\n                i++;\n                continue;\n            }\n        }\n        result += str.charAt(i);\n        i++;\n    }\n    return result;\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\n Html5Entities.encode = function(str) {\n    return new Html5Entities().encode(str);\n };\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml5Entities.prototype.encodeNonUTF = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    var strLength = str.length;\n    var result = '';\n    var i = 0;\n    while (i < strLength) {\n        var c = str.charCodeAt(i);\n        var charInfo = charIndex[c];\n        if (charInfo) {\n            var alpha = charInfo[str.charCodeAt(i + 1)];\n            if (alpha) {\n                i++;\n            } else {\n                alpha = charInfo[''];\n            }\n            if (alpha) {\n                result += \"&\" + alpha + \";\";\n                i++;\n                continue;\n            }\n        }\n        if (c < 32 || c > 126) {\n            result += '&#' + c + ';';\n        } else {\n            result += str.charAt(i);\n        }\n        i++;\n    }\n    return result;\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\n Html5Entities.encodeNonUTF = function(str) {\n    return new Html5Entities().encodeNonUTF(str);\n };\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml5Entities.prototype.encodeNonASCII = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    var strLength = str.length;\n    var result = '';\n    var i = 0;\n    while (i < strLength) {\n        var c = str.charCodeAt(i);\n        if (c <= 255) {\n            result += str[i++];\n            continue;\n        }\n        result += '&#' + c + ';';\n        i++\n    }\n    return result;\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\n Html5Entities.encodeNonASCII = function(str) {\n    return new Html5Entities().encodeNonASCII(str);\n };\n\n/**\n * @param {Object} alphaIndex Passed by reference.\n * @param {Object} charIndex Passed by reference.\n */\nfunction createIndexes(alphaIndex, charIndex) {\n    var i = ENTITIES.length;\n    var _results = [];\n    while (i--) {\n        var e = ENTITIES[i];\n        var alpha = e[0];\n        var chars = e[1];\n        var chr = chars[0];\n        var addChar = (chr < 32 || chr > 126) || chr === 62 || chr === 60 || chr === 38 || chr === 34 || chr === 39;\n        var charInfo;\n        if (addChar) {\n            charInfo = charIndex[chr] = charIndex[chr] || {};\n        }\n        if (chars[1]) {\n            var chr2 = chars[1];\n            alphaIndex[alpha] = String.fromCharCode(chr) + String.fromCharCode(chr2);\n            _results.push(addChar && (charInfo[chr2] = alpha));\n        } else {\n            alphaIndex[alpha] = String.fromCharCode(chr);\n            _results.push(addChar && (charInfo[''] = alpha));\n        }\n    }\n}\n\nmodule.exports = Html5Entities;\n","/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","var HTML_ALPHA = ['apos', 'nbsp', 'iexcl', 'cent', 'pound', 'curren', 'yen', 'brvbar', 'sect', 'uml', 'copy', 'ordf', 'laquo', 'not', 'shy', 'reg', 'macr', 'deg', 'plusmn', 'sup2', 'sup3', 'acute', 'micro', 'para', 'middot', 'cedil', 'sup1', 'ordm', 'raquo', 'frac14', 'frac12', 'frac34', 'iquest', 'Agrave', 'Aacute', 'Acirc', 'Atilde', 'Auml', 'Aring', 'Aelig', 'Ccedil', 'Egrave', 'Eacute', 'Ecirc', 'Euml', 'Igrave', 'Iacute', 'Icirc', 'Iuml', 'ETH', 'Ntilde', 'Ograve', 'Oacute', 'Ocirc', 'Otilde', 'Ouml', 'times', 'Oslash', 'Ugrave', 'Uacute', 'Ucirc', 'Uuml', 'Yacute', 'THORN', 'szlig', 'agrave', 'aacute', 'acirc', 'atilde', 'auml', 'aring', 'aelig', 'ccedil', 'egrave', 'eacute', 'ecirc', 'euml', 'igrave', 'iacute', 'icirc', 'iuml', 'eth', 'ntilde', 'ograve', 'oacute', 'ocirc', 'otilde', 'ouml', 'divide', 'oslash', 'ugrave', 'uacute', 'ucirc', 'uuml', 'yacute', 'thorn', 'yuml', 'quot', 'amp', 'lt', 'gt', 'OElig', 'oelig', 'Scaron', 'scaron', 'Yuml', 'circ', 'tilde', 'ensp', 'emsp', 'thinsp', 'zwnj', 'zwj', 'lrm', 'rlm', 'ndash', 'mdash', 'lsquo', 'rsquo', 'sbquo', 'ldquo', 'rdquo', 'bdquo', 'dagger', 'Dagger', 'permil', 'lsaquo', 'rsaquo', 'euro', 'fnof', 'Alpha', 'Beta', 'Gamma', 'Delta', 'Epsilon', 'Zeta', 'Eta', 'Theta', 'Iota', 'Kappa', 'Lambda', 'Mu', 'Nu', 'Xi', 'Omicron', 'Pi', 'Rho', 'Sigma', 'Tau', 'Upsilon', 'Phi', 'Chi', 'Psi', 'Omega', 'alpha', 'beta', 'gamma', 'delta', 'epsilon', 'zeta', 'eta', 'theta', 'iota', 'kappa', 'lambda', 'mu', 'nu', 'xi', 'omicron', 'pi', 'rho', 'sigmaf', 'sigma', 'tau', 'upsilon', 'phi', 'chi', 'psi', 'omega', 'thetasym', 'upsih', 'piv', 'bull', 'hellip', 'prime', 'Prime', 'oline', 'frasl', 'weierp', 'image', 'real', 'trade', 'alefsym', 'larr', 'uarr', 'rarr', 'darr', 'harr', 'crarr', 'lArr', 'uArr', 'rArr', 'dArr', 'hArr', 'forall', 'part', 'exist', 'empty', 'nabla', 'isin', 'notin', 'ni', 'prod', 'sum', 'minus', 'lowast', 'radic', 'prop', 'infin', 'ang', 'and', 'or', 'cap', 'cup', 'int', 'there4', 'sim', 'cong', 'asymp', 'ne', 'equiv', 'le', 'ge', 'sub', 'sup', 'nsub', 'sube', 'supe', 'oplus', 'otimes', 'perp', 'sdot', 'lceil', 'rceil', 'lfloor', 'rfloor', 'lang', 'rang', 'loz', 'spades', 'clubs', 'hearts', 'diams'];\nvar HTML_CODES = [39, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 34, 38, 60, 62, 338, 339, 352, 353, 376, 710, 732, 8194, 8195, 8201, 8204, 8205, 8206, 8207, 8211, 8212, 8216, 8217, 8218, 8220, 8221, 8222, 8224, 8225, 8240, 8249, 8250, 8364, 402, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 931, 932, 933, 934, 935, 936, 937, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 977, 978, 982, 8226, 8230, 8242, 8243, 8254, 8260, 8472, 8465, 8476, 8482, 8501, 8592, 8593, 8594, 8595, 8596, 8629, 8656, 8657, 8658, 8659, 8660, 8704, 8706, 8707, 8709, 8711, 8712, 8713, 8715, 8719, 8721, 8722, 8727, 8730, 8733, 8734, 8736, 8743, 8744, 8745, 8746, 8747, 8756, 8764, 8773, 8776, 8800, 8801, 8804, 8805, 8834, 8835, 8836, 8838, 8839, 8853, 8855, 8869, 8901, 8968, 8969, 8970, 8971, 9001, 9002, 9674, 9824, 9827, 9829, 9830];\n\nvar alphaIndex = {};\nvar numIndex = {};\n\nvar i = 0;\nvar length = HTML_ALPHA.length;\nwhile (i < length) {\n    var a = HTML_ALPHA[i];\n    var c = HTML_CODES[i];\n    alphaIndex[a] = String.fromCharCode(c);\n    numIndex[c] = a;\n    i++;\n}\n\n/**\n * @constructor\n */\nfunction Html4Entities() {}\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.prototype.decode = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    return str.replace(/&(#?[\\w\\d]+);?/g, function(s, entity) {\n        var chr;\n        if (entity.charAt(0) === \"#\") {\n            var code = entity.charAt(1).toLowerCase() === 'x' ?\n                parseInt(entity.substr(2), 16) :\n                parseInt(entity.substr(1));\n\n            if (!(isNaN(code) || code < -32768 || code > 65535)) {\n                chr = String.fromCharCode(code);\n            }\n        } else {\n            chr = alphaIndex[entity];\n        }\n        return chr || s;\n    });\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.decode = function(str) {\n    return new Html4Entities().decode(str);\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.prototype.encode = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    var strLength = str.length;\n    var result = '';\n    var i = 0;\n    while (i < strLength) {\n        var alpha = numIndex[str.charCodeAt(i)];\n        result += alpha ? \"&\" + alpha + \";\" : str.charAt(i);\n        i++;\n    }\n    return result;\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.encode = function(str) {\n    return new Html4Entities().encode(str);\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.prototype.encodeNonUTF = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    var strLength = str.length;\n    var result = '';\n    var i = 0;\n    while (i < strLength) {\n        var cc = str.charCodeAt(i);\n        var alpha = numIndex[cc];\n        if (alpha) {\n            result += \"&\" + alpha + \";\";\n        } else if (cc < 32 || cc > 126) {\n            result += \"&#\" + cc + \";\";\n        } else {\n            result += str.charAt(i);\n        }\n        i++;\n    }\n    return result;\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.encodeNonUTF = function(str) {\n    return new Html4Entities().encodeNonUTF(str);\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.prototype.encodeNonASCII = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    var strLength = str.length;\n    var result = '';\n    var i = 0;\n    while (i < strLength) {\n        var c = str.charCodeAt(i);\n        if (c <= 255) {\n            result += str[i++];\n            continue;\n        }\n        result += '&#' + c + ';';\n        i++;\n    }\n    return result;\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.encodeNonASCII = function(str) {\n    return new Html4Entities().encodeNonASCII(str);\n};\n\nmodule.exports = Html4Entities;\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","'use strict';\n// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)\nvar $export = require('./_export');\nvar $find = require('./_array-methods')(6);\nvar KEY = 'findIndex';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  findIndex: function findIndex(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\nrequire('./_add-to-unscopables')(KEY);\n","const Writable = require('stream').Writable;\n\n\n/**\n * A very simple m3u8 playlist file parser that detects tags and segments.\n *\n * @extends WritableStream\n * @constructor\n */\nmodule.exports = class m3u8Parser extends Writable {\n  constructor() {\n    super();\n    this._lastLine = '';\n    this._seq = 0;\n    this._nextItemDuration = null;\n    this.on('finish', () => {\n      this._parseLine(this._lastLine);\n      this.emit('end');\n    });\n  }\n\n  _parseLine(line) {\n    let match = line.match(/^#(EXT[A-Z0-9-]+)(?::(.*))?/);\n    if (match) {\n      // This is a tag.\n      const tag = match[1];\n      const value = match[2] || null;\n      switch (tag) {\n        case 'EXT-X-PROGRAM-DATE-TIME':\n          this.emit('starttime', new Date(value).getTime());\n          break;\n        case 'EXT-X-MEDIA-SEQUENCE':\n          this._seq = parseInt(value);\n          break;\n        case 'EXTINF':\n          this._nextItemDuration =\n            Math.round(parseFloat(value.split(',')[0]) * 1000);\n          break;\n        case 'EXT-X-ENDLIST':\n          this.emit('endlist');\n          break;\n      }\n\n    } else if (!/^#/.test(line) && line.trim()) {\n      // This is a segment\n      this.emit('item', {\n        url: line.trim(),\n        seq: this._seq++,\n        duration: this._nextItemDuration,\n      });\n    }\n  }\n\n  _write(chunk, encoding, callback) {\n    let lines = chunk.toString('utf8').split('\\n');\n    if (this._lastLine) { lines[0] = this._lastLine + lines[0]; }\n    lines.forEach((line, i) => {\n      if (i < lines.length - 1) {\n        this._parseLine(line);\n      } else {\n        // Save the last line in case it has been broken up.\n        this._lastLine = line;\n      }\n    });\n    callback();\n  }\n};\n","var http = require('http')\nvar url = require('url')\n\nvar https = module.exports\n\nfor (var key in http) {\n  if (http.hasOwnProperty(key)) https[key] = http[key]\n}\n\nhttps.request = function (params, cb) {\n  params = validateParams(params)\n  return http.request.call(this, params, cb)\n}\n\nhttps.get = function (params, cb) {\n  params = validateParams(params)\n  return http.get.call(this, params, cb)\n}\n\nfunction validateParams (params) {\n  if (typeof params === 'string') {\n    params = url.parse(params)\n  }\n  if (!params.protocol) {\n    params.protocol = 'https:'\n  }\n  if (params.protocol !== 'https:') {\n    throw new Error('Protocol \"' + params.protocol + '\" not supported. Expected \"https:\"')\n  }\n  return params\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) {\n    return this.emit('error', new Error('write callback called multiple times'));\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n\n  cb(er);\n\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function') {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('_transform() is not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  var _this2 = this;\n\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n    _this2.emit('close');\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}","module.exports = require('./lib/_stream_writable.js');\n",";(function (sax) { // wrapper for non-node envs\n  sax.parser = function (strict, opt) { return new SAXParser(strict, opt) }\n  sax.SAXParser = SAXParser\n  sax.SAXStream = SAXStream\n  sax.createStream = createStream\n\n  // When we pass the MAX_BUFFER_LENGTH position, start checking for buffer overruns.\n  // When we check, schedule the next check for MAX_BUFFER_LENGTH - (max(buffer lengths)),\n  // since that's the earliest that a buffer overrun could occur.  This way, checks are\n  // as rare as required, but as often as necessary to ensure never crossing this bound.\n  // Furthermore, buffers are only tested at most once per write(), so passing a very\n  // large string into write() might have undesirable effects, but this is manageable by\n  // the caller, so it is assumed to be safe.  Thus, a call to write() may, in the extreme\n  // edge case, result in creating at most one complete copy of the string passed in.\n  // Set to Infinity to have unlimited buffers.\n  sax.MAX_BUFFER_LENGTH = 64 * 1024\n\n  var buffers = [\n    'comment', 'sgmlDecl', 'textNode', 'tagName', 'doctype',\n    'procInstName', 'procInstBody', 'entity', 'attribName',\n    'attribValue', 'cdata', 'script'\n  ]\n\n  sax.EVENTS = [\n    'text',\n    'processinginstruction',\n    'sgmldeclaration',\n    'doctype',\n    'comment',\n    'opentagstart',\n    'attribute',\n    'opentag',\n    'closetag',\n    'opencdata',\n    'cdata',\n    'closecdata',\n    'error',\n    'end',\n    'ready',\n    'script',\n    'opennamespace',\n    'closenamespace'\n  ]\n\n  function SAXParser (strict, opt) {\n    if (!(this instanceof SAXParser)) {\n      return new SAXParser(strict, opt)\n    }\n\n    var parser = this\n    clearBuffers(parser)\n    parser.q = parser.c = ''\n    parser.bufferCheckPosition = sax.MAX_BUFFER_LENGTH\n    parser.opt = opt || {}\n    parser.opt.lowercase = parser.opt.lowercase || parser.opt.lowercasetags\n    parser.looseCase = parser.opt.lowercase ? 'toLowerCase' : 'toUpperCase'\n    parser.tags = []\n    parser.closed = parser.closedRoot = parser.sawRoot = false\n    parser.tag = parser.error = null\n    parser.strict = !!strict\n    parser.noscript = !!(strict || parser.opt.noscript)\n    parser.state = S.BEGIN\n    parser.strictEntities = parser.opt.strictEntities\n    parser.ENTITIES = parser.strictEntities ? Object.create(sax.XML_ENTITIES) : Object.create(sax.ENTITIES)\n    parser.attribList = []\n\n    // namespaces form a prototype chain.\n    // it always points at the current tag,\n    // which protos to its parent tag.\n    if (parser.opt.xmlns) {\n      parser.ns = Object.create(rootNS)\n    }\n\n    // mostly just for error reporting\n    parser.trackPosition = parser.opt.position !== false\n    if (parser.trackPosition) {\n      parser.position = parser.line = parser.column = 0\n    }\n    emit(parser, 'onready')\n  }\n\n  if (!Object.create) {\n    Object.create = function (o) {\n      function F () {}\n      F.prototype = o\n      var newf = new F()\n      return newf\n    }\n  }\n\n  if (!Object.keys) {\n    Object.keys = function (o) {\n      var a = []\n      for (var i in o) if (o.hasOwnProperty(i)) a.push(i)\n      return a\n    }\n  }\n\n  function checkBufferLength (parser) {\n    var maxAllowed = Math.max(sax.MAX_BUFFER_LENGTH, 10)\n    var maxActual = 0\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      var len = parser[buffers[i]].length\n      if (len > maxAllowed) {\n        // Text/cdata nodes can get big, and since they're buffered,\n        // we can get here under normal conditions.\n        // Avoid issues by emitting the text node now,\n        // so at least it won't get any bigger.\n        switch (buffers[i]) {\n          case 'textNode':\n            closeText(parser)\n            break\n\n          case 'cdata':\n            emitNode(parser, 'oncdata', parser.cdata)\n            parser.cdata = ''\n            break\n\n          case 'script':\n            emitNode(parser, 'onscript', parser.script)\n            parser.script = ''\n            break\n\n          default:\n            error(parser, 'Max buffer length exceeded: ' + buffers[i])\n        }\n      }\n      maxActual = Math.max(maxActual, len)\n    }\n    // schedule the next check for the earliest possible buffer overrun.\n    var m = sax.MAX_BUFFER_LENGTH - maxActual\n    parser.bufferCheckPosition = m + parser.position\n  }\n\n  function clearBuffers (parser) {\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      parser[buffers[i]] = ''\n    }\n  }\n\n  function flushBuffers (parser) {\n    closeText(parser)\n    if (parser.cdata !== '') {\n      emitNode(parser, 'oncdata', parser.cdata)\n      parser.cdata = ''\n    }\n    if (parser.script !== '') {\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n  }\n\n  SAXParser.prototype = {\n    end: function () { end(this) },\n    write: write,\n    resume: function () { this.error = null; return this },\n    close: function () { return this.write(null) },\n    flush: function () { flushBuffers(this) }\n  }\n\n  var Stream\n  try {\n    Stream = require('stream').Stream\n  } catch (ex) {\n    Stream = function () {}\n  }\n\n  var streamWraps = sax.EVENTS.filter(function (ev) {\n    return ev !== 'error' && ev !== 'end'\n  })\n\n  function createStream (strict, opt) {\n    return new SAXStream(strict, opt)\n  }\n\n  function SAXStream (strict, opt) {\n    if (!(this instanceof SAXStream)) {\n      return new SAXStream(strict, opt)\n    }\n\n    Stream.apply(this)\n\n    this._parser = new SAXParser(strict, opt)\n    this.writable = true\n    this.readable = true\n\n    var me = this\n\n    this._parser.onend = function () {\n      me.emit('end')\n    }\n\n    this._parser.onerror = function (er) {\n      me.emit('error', er)\n\n      // if didn't throw, then means error was handled.\n      // go ahead and clear error, so we can write again.\n      me._parser.error = null\n    }\n\n    this._decoder = null\n\n    streamWraps.forEach(function (ev) {\n      Object.defineProperty(me, 'on' + ev, {\n        get: function () {\n          return me._parser['on' + ev]\n        },\n        set: function (h) {\n          if (!h) {\n            me.removeAllListeners(ev)\n            me._parser['on' + ev] = h\n            return h\n          }\n          me.on(ev, h)\n        },\n        enumerable: true,\n        configurable: false\n      })\n    })\n  }\n\n  SAXStream.prototype = Object.create(Stream.prototype, {\n    constructor: {\n      value: SAXStream\n    }\n  })\n\n  SAXStream.prototype.write = function (data) {\n    if (typeof Buffer === 'function' &&\n      typeof Buffer.isBuffer === 'function' &&\n      Buffer.isBuffer(data)) {\n      if (!this._decoder) {\n        var SD = require('string_decoder').StringDecoder\n        this._decoder = new SD('utf8')\n      }\n      data = this._decoder.write(data)\n    }\n\n    this._parser.write(data.toString())\n    this.emit('data', data)\n    return true\n  }\n\n  SAXStream.prototype.end = function (chunk) {\n    if (chunk && chunk.length) {\n      this.write(chunk)\n    }\n    this._parser.end()\n    return true\n  }\n\n  SAXStream.prototype.on = function (ev, handler) {\n    var me = this\n    if (!me._parser['on' + ev] && streamWraps.indexOf(ev) !== -1) {\n      me._parser['on' + ev] = function () {\n        var args = arguments.length === 1 ? [arguments[0]] : Array.apply(null, arguments)\n        args.splice(0, 0, ev)\n        me.emit.apply(me, args)\n      }\n    }\n\n    return Stream.prototype.on.call(me, ev, handler)\n  }\n\n  // this really needs to be replaced with character classes.\n  // XML allows all manner of ridiculous numbers and digits.\n  var CDATA = '[CDATA['\n  var DOCTYPE = 'DOCTYPE'\n  var XML_NAMESPACE = 'http://www.w3.org/XML/1998/namespace'\n  var XMLNS_NAMESPACE = 'http://www.w3.org/2000/xmlns/'\n  var rootNS = { xml: XML_NAMESPACE, xmlns: XMLNS_NAMESPACE }\n\n  // http://www.w3.org/TR/REC-xml/#NT-NameStartChar\n  // This implementation works on strings, a single character at a time\n  // as such, it cannot ever support astral-plane characters (10000-EFFFF)\n  // without a significant breaking change to either this  parser, or the\n  // JavaScript language.  Implementation of an emoji-capable xml parser\n  // is left as an exercise for the reader.\n  var nameStart = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n\n  var nameBody = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\n\n  var entityStart = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n  var entityBody = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\n\n  function isWhitespace (c) {\n    return c === ' ' || c === '\\n' || c === '\\r' || c === '\\t'\n  }\n\n  function isQuote (c) {\n    return c === '\"' || c === '\\''\n  }\n\n  function isAttribEnd (c) {\n    return c === '>' || isWhitespace(c)\n  }\n\n  function isMatch (regex, c) {\n    return regex.test(c)\n  }\n\n  function notMatch (regex, c) {\n    return !isMatch(regex, c)\n  }\n\n  var S = 0\n  sax.STATE = {\n    BEGIN: S++, // leading byte order mark or whitespace\n    BEGIN_WHITESPACE: S++, // leading whitespace\n    TEXT: S++, // general stuff\n    TEXT_ENTITY: S++, // &amp and such.\n    OPEN_WAKA: S++, // <\n    SGML_DECL: S++, // <!BLARG\n    SGML_DECL_QUOTED: S++, // <!BLARG foo \"bar\n    DOCTYPE: S++, // <!DOCTYPE\n    DOCTYPE_QUOTED: S++, // <!DOCTYPE \"//blah\n    DOCTYPE_DTD: S++, // <!DOCTYPE \"//blah\" [ ...\n    DOCTYPE_DTD_QUOTED: S++, // <!DOCTYPE \"//blah\" [ \"foo\n    COMMENT_STARTING: S++, // <!-\n    COMMENT: S++, // <!--\n    COMMENT_ENDING: S++, // <!-- blah -\n    COMMENT_ENDED: S++, // <!-- blah --\n    CDATA: S++, // <![CDATA[ something\n    CDATA_ENDING: S++, // ]\n    CDATA_ENDING_2: S++, // ]]\n    PROC_INST: S++, // <?hi\n    PROC_INST_BODY: S++, // <?hi there\n    PROC_INST_ENDING: S++, // <?hi \"there\" ?\n    OPEN_TAG: S++, // <strong\n    OPEN_TAG_SLASH: S++, // <strong /\n    ATTRIB: S++, // <a\n    ATTRIB_NAME: S++, // <a foo\n    ATTRIB_NAME_SAW_WHITE: S++, // <a foo _\n    ATTRIB_VALUE: S++, // <a foo=\n    ATTRIB_VALUE_QUOTED: S++, // <a foo=\"bar\n    ATTRIB_VALUE_CLOSED: S++, // <a foo=\"bar\"\n    ATTRIB_VALUE_UNQUOTED: S++, // <a foo=bar\n    ATTRIB_VALUE_ENTITY_Q: S++, // <foo bar=\"&quot;\"\n    ATTRIB_VALUE_ENTITY_U: S++, // <foo bar=&quot\n    CLOSE_TAG: S++, // </a\n    CLOSE_TAG_SAW_WHITE: S++, // </a   >\n    SCRIPT: S++, // <script> ...\n    SCRIPT_ENDING: S++ // <script> ... <\n  }\n\n  sax.XML_ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\"\n  }\n\n  sax.ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\",\n    'AElig': 198,\n    'Aacute': 193,\n    'Acirc': 194,\n    'Agrave': 192,\n    'Aring': 197,\n    'Atilde': 195,\n    'Auml': 196,\n    'Ccedil': 199,\n    'ETH': 208,\n    'Eacute': 201,\n    'Ecirc': 202,\n    'Egrave': 200,\n    'Euml': 203,\n    'Iacute': 205,\n    'Icirc': 206,\n    'Igrave': 204,\n    'Iuml': 207,\n    'Ntilde': 209,\n    'Oacute': 211,\n    'Ocirc': 212,\n    'Ograve': 210,\n    'Oslash': 216,\n    'Otilde': 213,\n    'Ouml': 214,\n    'THORN': 222,\n    'Uacute': 218,\n    'Ucirc': 219,\n    'Ugrave': 217,\n    'Uuml': 220,\n    'Yacute': 221,\n    'aacute': 225,\n    'acirc': 226,\n    'aelig': 230,\n    'agrave': 224,\n    'aring': 229,\n    'atilde': 227,\n    'auml': 228,\n    'ccedil': 231,\n    'eacute': 233,\n    'ecirc': 234,\n    'egrave': 232,\n    'eth': 240,\n    'euml': 235,\n    'iacute': 237,\n    'icirc': 238,\n    'igrave': 236,\n    'iuml': 239,\n    'ntilde': 241,\n    'oacute': 243,\n    'ocirc': 244,\n    'ograve': 242,\n    'oslash': 248,\n    'otilde': 245,\n    'ouml': 246,\n    'szlig': 223,\n    'thorn': 254,\n    'uacute': 250,\n    'ucirc': 251,\n    'ugrave': 249,\n    'uuml': 252,\n    'yacute': 253,\n    'yuml': 255,\n    'copy': 169,\n    'reg': 174,\n    'nbsp': 160,\n    'iexcl': 161,\n    'cent': 162,\n    'pound': 163,\n    'curren': 164,\n    'yen': 165,\n    'brvbar': 166,\n    'sect': 167,\n    'uml': 168,\n    'ordf': 170,\n    'laquo': 171,\n    'not': 172,\n    'shy': 173,\n    'macr': 175,\n    'deg': 176,\n    'plusmn': 177,\n    'sup1': 185,\n    'sup2': 178,\n    'sup3': 179,\n    'acute': 180,\n    'micro': 181,\n    'para': 182,\n    'middot': 183,\n    'cedil': 184,\n    'ordm': 186,\n    'raquo': 187,\n    'frac14': 188,\n    'frac12': 189,\n    'frac34': 190,\n    'iquest': 191,\n    'times': 215,\n    'divide': 247,\n    'OElig': 338,\n    'oelig': 339,\n    'Scaron': 352,\n    'scaron': 353,\n    'Yuml': 376,\n    'fnof': 402,\n    'circ': 710,\n    'tilde': 732,\n    'Alpha': 913,\n    'Beta': 914,\n    'Gamma': 915,\n    'Delta': 916,\n    'Epsilon': 917,\n    'Zeta': 918,\n    'Eta': 919,\n    'Theta': 920,\n    'Iota': 921,\n    'Kappa': 922,\n    'Lambda': 923,\n    'Mu': 924,\n    'Nu': 925,\n    'Xi': 926,\n    'Omicron': 927,\n    'Pi': 928,\n    'Rho': 929,\n    'Sigma': 931,\n    'Tau': 932,\n    'Upsilon': 933,\n    'Phi': 934,\n    'Chi': 935,\n    'Psi': 936,\n    'Omega': 937,\n    'alpha': 945,\n    'beta': 946,\n    'gamma': 947,\n    'delta': 948,\n    'epsilon': 949,\n    'zeta': 950,\n    'eta': 951,\n    'theta': 952,\n    'iota': 953,\n    'kappa': 954,\n    'lambda': 955,\n    'mu': 956,\n    'nu': 957,\n    'xi': 958,\n    'omicron': 959,\n    'pi': 960,\n    'rho': 961,\n    'sigmaf': 962,\n    'sigma': 963,\n    'tau': 964,\n    'upsilon': 965,\n    'phi': 966,\n    'chi': 967,\n    'psi': 968,\n    'omega': 969,\n    'thetasym': 977,\n    'upsih': 978,\n    'piv': 982,\n    'ensp': 8194,\n    'emsp': 8195,\n    'thinsp': 8201,\n    'zwnj': 8204,\n    'zwj': 8205,\n    'lrm': 8206,\n    'rlm': 8207,\n    'ndash': 8211,\n    'mdash': 8212,\n    'lsquo': 8216,\n    'rsquo': 8217,\n    'sbquo': 8218,\n    'ldquo': 8220,\n    'rdquo': 8221,\n    'bdquo': 8222,\n    'dagger': 8224,\n    'Dagger': 8225,\n    'bull': 8226,\n    'hellip': 8230,\n    'permil': 8240,\n    'prime': 8242,\n    'Prime': 8243,\n    'lsaquo': 8249,\n    'rsaquo': 8250,\n    'oline': 8254,\n    'frasl': 8260,\n    'euro': 8364,\n    'image': 8465,\n    'weierp': 8472,\n    'real': 8476,\n    'trade': 8482,\n    'alefsym': 8501,\n    'larr': 8592,\n    'uarr': 8593,\n    'rarr': 8594,\n    'darr': 8595,\n    'harr': 8596,\n    'crarr': 8629,\n    'lArr': 8656,\n    'uArr': 8657,\n    'rArr': 8658,\n    'dArr': 8659,\n    'hArr': 8660,\n    'forall': 8704,\n    'part': 8706,\n    'exist': 8707,\n    'empty': 8709,\n    'nabla': 8711,\n    'isin': 8712,\n    'notin': 8713,\n    'ni': 8715,\n    'prod': 8719,\n    'sum': 8721,\n    'minus': 8722,\n    'lowast': 8727,\n    'radic': 8730,\n    'prop': 8733,\n    'infin': 8734,\n    'ang': 8736,\n    'and': 8743,\n    'or': 8744,\n    'cap': 8745,\n    'cup': 8746,\n    'int': 8747,\n    'there4': 8756,\n    'sim': 8764,\n    'cong': 8773,\n    'asymp': 8776,\n    'ne': 8800,\n    'equiv': 8801,\n    'le': 8804,\n    'ge': 8805,\n    'sub': 8834,\n    'sup': 8835,\n    'nsub': 8836,\n    'sube': 8838,\n    'supe': 8839,\n    'oplus': 8853,\n    'otimes': 8855,\n    'perp': 8869,\n    'sdot': 8901,\n    'lceil': 8968,\n    'rceil': 8969,\n    'lfloor': 8970,\n    'rfloor': 8971,\n    'lang': 9001,\n    'rang': 9002,\n    'loz': 9674,\n    'spades': 9824,\n    'clubs': 9827,\n    'hearts': 9829,\n    'diams': 9830\n  }\n\n  Object.keys(sax.ENTITIES).forEach(function (key) {\n    var e = sax.ENTITIES[key]\n    var s = typeof e === 'number' ? String.fromCharCode(e) : e\n    sax.ENTITIES[key] = s\n  })\n\n  for (var s in sax.STATE) {\n    sax.STATE[sax.STATE[s]] = s\n  }\n\n  // shorthand\n  S = sax.STATE\n\n  function emit (parser, event, data) {\n    parser[event] && parser[event](data)\n  }\n\n  function emitNode (parser, nodeType, data) {\n    if (parser.textNode) closeText(parser)\n    emit(parser, nodeType, data)\n  }\n\n  function closeText (parser) {\n    parser.textNode = textopts(parser.opt, parser.textNode)\n    if (parser.textNode) emit(parser, 'ontext', parser.textNode)\n    parser.textNode = ''\n  }\n\n  function textopts (opt, text) {\n    if (opt.trim) text = text.trim()\n    if (opt.normalize) text = text.replace(/\\s+/g, ' ')\n    return text\n  }\n\n  function error (parser, er) {\n    closeText(parser)\n    if (parser.trackPosition) {\n      er += '\\nLine: ' + parser.line +\n        '\\nColumn: ' + parser.column +\n        '\\nChar: ' + parser.c\n    }\n    er = new Error(er)\n    parser.error = er\n    emit(parser, 'onerror', er)\n    return parser\n  }\n\n  function end (parser) {\n    if (parser.sawRoot && !parser.closedRoot) strictFail(parser, 'Unclosed root tag')\n    if ((parser.state !== S.BEGIN) &&\n      (parser.state !== S.BEGIN_WHITESPACE) &&\n      (parser.state !== S.TEXT)) {\n      error(parser, 'Unexpected end')\n    }\n    closeText(parser)\n    parser.c = ''\n    parser.closed = true\n    emit(parser, 'onend')\n    SAXParser.call(parser, parser.strict, parser.opt)\n    return parser\n  }\n\n  function strictFail (parser, message) {\n    if (typeof parser !== 'object' || !(parser instanceof SAXParser)) {\n      throw new Error('bad call to strictFail')\n    }\n    if (parser.strict) {\n      error(parser, message)\n    }\n  }\n\n  function newTag (parser) {\n    if (!parser.strict) parser.tagName = parser.tagName[parser.looseCase]()\n    var parent = parser.tags[parser.tags.length - 1] || parser\n    var tag = parser.tag = { name: parser.tagName, attributes: {} }\n\n    // will be overridden if tag contails an xmlns=\"foo\" or xmlns:foo=\"bar\"\n    if (parser.opt.xmlns) {\n      tag.ns = parent.ns\n    }\n    parser.attribList.length = 0\n    emitNode(parser, 'onopentagstart', tag)\n  }\n\n  function qname (name, attribute) {\n    var i = name.indexOf(':')\n    var qualName = i < 0 ? [ '', name ] : name.split(':')\n    var prefix = qualName[0]\n    var local = qualName[1]\n\n    // <x \"xmlns\"=\"http://foo\">\n    if (attribute && name === 'xmlns') {\n      prefix = 'xmlns'\n      local = ''\n    }\n\n    return { prefix: prefix, local: local }\n  }\n\n  function attrib (parser) {\n    if (!parser.strict) {\n      parser.attribName = parser.attribName[parser.looseCase]()\n    }\n\n    if (parser.attribList.indexOf(parser.attribName) !== -1 ||\n      parser.tag.attributes.hasOwnProperty(parser.attribName)) {\n      parser.attribName = parser.attribValue = ''\n      return\n    }\n\n    if (parser.opt.xmlns) {\n      var qn = qname(parser.attribName, true)\n      var prefix = qn.prefix\n      var local = qn.local\n\n      if (prefix === 'xmlns') {\n        // namespace binding attribute. push the binding into scope\n        if (local === 'xml' && parser.attribValue !== XML_NAMESPACE) {\n          strictFail(parser,\n            'xml: prefix must be bound to ' + XML_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else if (local === 'xmlns' && parser.attribValue !== XMLNS_NAMESPACE) {\n          strictFail(parser,\n            'xmlns: prefix must be bound to ' + XMLNS_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else {\n          var tag = parser.tag\n          var parent = parser.tags[parser.tags.length - 1] || parser\n          if (tag.ns === parent.ns) {\n            tag.ns = Object.create(parent.ns)\n          }\n          tag.ns[local] = parser.attribValue\n        }\n      }\n\n      // defer onattribute events until all attributes have been seen\n      // so any new bindings can take effect. preserve attribute order\n      // so deferred events can be emitted in document order\n      parser.attribList.push([parser.attribName, parser.attribValue])\n    } else {\n      // in non-xmlns mode, we can emit the event right away\n      parser.tag.attributes[parser.attribName] = parser.attribValue\n      emitNode(parser, 'onattribute', {\n        name: parser.attribName,\n        value: parser.attribValue\n      })\n    }\n\n    parser.attribName = parser.attribValue = ''\n  }\n\n  function openTag (parser, selfClosing) {\n    if (parser.opt.xmlns) {\n      // emit namespace binding events\n      var tag = parser.tag\n\n      // add namespace info to tag\n      var qn = qname(parser.tagName)\n      tag.prefix = qn.prefix\n      tag.local = qn.local\n      tag.uri = tag.ns[qn.prefix] || ''\n\n      if (tag.prefix && !tag.uri) {\n        strictFail(parser, 'Unbound namespace prefix: ' +\n          JSON.stringify(parser.tagName))\n        tag.uri = qn.prefix\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (tag.ns && parent.ns !== tag.ns) {\n        Object.keys(tag.ns).forEach(function (p) {\n          emitNode(parser, 'onopennamespace', {\n            prefix: p,\n            uri: tag.ns[p]\n          })\n        })\n      }\n\n      // handle deferred onattribute events\n      // Note: do not apply default ns to attributes:\n      //   http://www.w3.org/TR/REC-xml-names/#defaulting\n      for (var i = 0, l = parser.attribList.length; i < l; i++) {\n        var nv = parser.attribList[i]\n        var name = nv[0]\n        var value = nv[1]\n        var qualName = qname(name, true)\n        var prefix = qualName.prefix\n        var local = qualName.local\n        var uri = prefix === '' ? '' : (tag.ns[prefix] || '')\n        var a = {\n          name: name,\n          value: value,\n          prefix: prefix,\n          local: local,\n          uri: uri\n        }\n\n        // if there's any attributes with an undefined namespace,\n        // then fail on them now.\n        if (prefix && prefix !== 'xmlns' && !uri) {\n          strictFail(parser, 'Unbound namespace prefix: ' +\n            JSON.stringify(prefix))\n          a.uri = prefix\n        }\n        parser.tag.attributes[name] = a\n        emitNode(parser, 'onattribute', a)\n      }\n      parser.attribList.length = 0\n    }\n\n    parser.tag.isSelfClosing = !!selfClosing\n\n    // process the tag\n    parser.sawRoot = true\n    parser.tags.push(parser.tag)\n    emitNode(parser, 'onopentag', parser.tag)\n    if (!selfClosing) {\n      // special case for <script> in non-strict mode.\n      if (!parser.noscript && parser.tagName.toLowerCase() === 'script') {\n        parser.state = S.SCRIPT\n      } else {\n        parser.state = S.TEXT\n      }\n      parser.tag = null\n      parser.tagName = ''\n    }\n    parser.attribName = parser.attribValue = ''\n    parser.attribList.length = 0\n  }\n\n  function closeTag (parser) {\n    if (!parser.tagName) {\n      strictFail(parser, 'Weird empty close tag.')\n      parser.textNode += '</>'\n      parser.state = S.TEXT\n      return\n    }\n\n    if (parser.script) {\n      if (parser.tagName !== 'script') {\n        parser.script += '</' + parser.tagName + '>'\n        parser.tagName = ''\n        parser.state = S.SCRIPT\n        return\n      }\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n\n    // first make sure that the closing tag actually exists.\n    // <a><b></c></b></a> will close everything, otherwise.\n    var t = parser.tags.length\n    var tagName = parser.tagName\n    if (!parser.strict) {\n      tagName = tagName[parser.looseCase]()\n    }\n    var closeTo = tagName\n    while (t--) {\n      var close = parser.tags[t]\n      if (close.name !== closeTo) {\n        // fail the first time in strict mode\n        strictFail(parser, 'Unexpected close tag')\n      } else {\n        break\n      }\n    }\n\n    // didn't find it.  we already failed for strict, so just abort.\n    if (t < 0) {\n      strictFail(parser, 'Unmatched closing tag: ' + parser.tagName)\n      parser.textNode += '</' + parser.tagName + '>'\n      parser.state = S.TEXT\n      return\n    }\n    parser.tagName = tagName\n    var s = parser.tags.length\n    while (s-- > t) {\n      var tag = parser.tag = parser.tags.pop()\n      parser.tagName = parser.tag.name\n      emitNode(parser, 'onclosetag', parser.tagName)\n\n      var x = {}\n      for (var i in tag.ns) {\n        x[i] = tag.ns[i]\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (parser.opt.xmlns && tag.ns !== parent.ns) {\n        // remove namespace bindings introduced by tag\n        Object.keys(tag.ns).forEach(function (p) {\n          var n = tag.ns[p]\n          emitNode(parser, 'onclosenamespace', { prefix: p, uri: n })\n        })\n      }\n    }\n    if (t === 0) parser.closedRoot = true\n    parser.tagName = parser.attribValue = parser.attribName = ''\n    parser.attribList.length = 0\n    parser.state = S.TEXT\n  }\n\n  function parseEntity (parser) {\n    var entity = parser.entity\n    var entityLC = entity.toLowerCase()\n    var num\n    var numStr = ''\n\n    if (parser.ENTITIES[entity]) {\n      return parser.ENTITIES[entity]\n    }\n    if (parser.ENTITIES[entityLC]) {\n      return parser.ENTITIES[entityLC]\n    }\n    entity = entityLC\n    if (entity.charAt(0) === '#') {\n      if (entity.charAt(1) === 'x') {\n        entity = entity.slice(2)\n        num = parseInt(entity, 16)\n        numStr = num.toString(16)\n      } else {\n        entity = entity.slice(1)\n        num = parseInt(entity, 10)\n        numStr = num.toString(10)\n      }\n    }\n    entity = entity.replace(/^0+/, '')\n    if (isNaN(num) || numStr.toLowerCase() !== entity) {\n      strictFail(parser, 'Invalid character entity')\n      return '&' + parser.entity + ';'\n    }\n\n    return String.fromCodePoint(num)\n  }\n\n  function beginWhiteSpace (parser, c) {\n    if (c === '<') {\n      parser.state = S.OPEN_WAKA\n      parser.startTagPosition = parser.position\n    } else if (!isWhitespace(c)) {\n      // have to process this as a text node.\n      // weird, but happens.\n      strictFail(parser, 'Non-whitespace before first tag.')\n      parser.textNode = c\n      parser.state = S.TEXT\n    }\n  }\n\n  function charAt (chunk, i) {\n    var result = ''\n    if (i < chunk.length) {\n      result = chunk.charAt(i)\n    }\n    return result\n  }\n\n  function write (chunk) {\n    var parser = this\n    if (this.error) {\n      throw this.error\n    }\n    if (parser.closed) {\n      return error(parser,\n        'Cannot write after close. Assign an onready handler.')\n    }\n    if (chunk === null) {\n      return end(parser)\n    }\n    if (typeof chunk === 'object') {\n      chunk = chunk.toString()\n    }\n    var i = 0\n    var c = ''\n    while (true) {\n      c = charAt(chunk, i++)\n      parser.c = c\n\n      if (!c) {\n        break\n      }\n\n      if (parser.trackPosition) {\n        parser.position++\n        if (c === '\\n') {\n          parser.line++\n          parser.column = 0\n        } else {\n          parser.column++\n        }\n      }\n\n      switch (parser.state) {\n        case S.BEGIN:\n          parser.state = S.BEGIN_WHITESPACE\n          if (c === '\\uFEFF') {\n            continue\n          }\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.BEGIN_WHITESPACE:\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.TEXT:\n          if (parser.sawRoot && !parser.closedRoot) {\n            var starti = i - 1\n            while (c && c !== '<' && c !== '&') {\n              c = charAt(chunk, i++)\n              if (c && parser.trackPosition) {\n                parser.position++\n                if (c === '\\n') {\n                  parser.line++\n                  parser.column = 0\n                } else {\n                  parser.column++\n                }\n              }\n            }\n            parser.textNode += chunk.substring(starti, i - 1)\n          }\n          if (c === '<' && !(parser.sawRoot && parser.closedRoot && !parser.strict)) {\n            parser.state = S.OPEN_WAKA\n            parser.startTagPosition = parser.position\n          } else {\n            if (!isWhitespace(c) && (!parser.sawRoot || parser.closedRoot)) {\n              strictFail(parser, 'Text data outside of root node.')\n            }\n            if (c === '&') {\n              parser.state = S.TEXT_ENTITY\n            } else {\n              parser.textNode += c\n            }\n          }\n          continue\n\n        case S.SCRIPT:\n          // only non-strict\n          if (c === '<') {\n            parser.state = S.SCRIPT_ENDING\n          } else {\n            parser.script += c\n          }\n          continue\n\n        case S.SCRIPT_ENDING:\n          if (c === '/') {\n            parser.state = S.CLOSE_TAG\n          } else {\n            parser.script += '<' + c\n            parser.state = S.SCRIPT\n          }\n          continue\n\n        case S.OPEN_WAKA:\n          // either a /, ?, !, or text is coming next.\n          if (c === '!') {\n            parser.state = S.SGML_DECL\n            parser.sgmlDecl = ''\n          } else if (isWhitespace(c)) {\n            // wait for it...\n          } else if (isMatch(nameStart, c)) {\n            parser.state = S.OPEN_TAG\n            parser.tagName = c\n          } else if (c === '/') {\n            parser.state = S.CLOSE_TAG\n            parser.tagName = ''\n          } else if (c === '?') {\n            parser.state = S.PROC_INST\n            parser.procInstName = parser.procInstBody = ''\n          } else {\n            strictFail(parser, 'Unencoded <')\n            // if there was some whitespace, then add that in.\n            if (parser.startTagPosition + 1 < parser.position) {\n              var pad = parser.position - parser.startTagPosition\n              c = new Array(pad).join(' ') + c\n            }\n            parser.textNode += '<' + c\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.SGML_DECL:\n          if ((parser.sgmlDecl + c).toUpperCase() === CDATA) {\n            emitNode(parser, 'onopencdata')\n            parser.state = S.CDATA\n            parser.sgmlDecl = ''\n            parser.cdata = ''\n          } else if (parser.sgmlDecl + c === '--') {\n            parser.state = S.COMMENT\n            parser.comment = ''\n            parser.sgmlDecl = ''\n          } else if ((parser.sgmlDecl + c).toUpperCase() === DOCTYPE) {\n            parser.state = S.DOCTYPE\n            if (parser.doctype || parser.sawRoot) {\n              strictFail(parser,\n                'Inappropriately located doctype declaration')\n            }\n            parser.doctype = ''\n            parser.sgmlDecl = ''\n          } else if (c === '>') {\n            emitNode(parser, 'onsgmldeclaration', parser.sgmlDecl)\n            parser.sgmlDecl = ''\n            parser.state = S.TEXT\n          } else if (isQuote(c)) {\n            parser.state = S.SGML_DECL_QUOTED\n            parser.sgmlDecl += c\n          } else {\n            parser.sgmlDecl += c\n          }\n          continue\n\n        case S.SGML_DECL_QUOTED:\n          if (c === parser.q) {\n            parser.state = S.SGML_DECL\n            parser.q = ''\n          }\n          parser.sgmlDecl += c\n          continue\n\n        case S.DOCTYPE:\n          if (c === '>') {\n            parser.state = S.TEXT\n            emitNode(parser, 'ondoctype', parser.doctype)\n            parser.doctype = true // just remember that we saw it.\n          } else {\n            parser.doctype += c\n            if (c === '[') {\n              parser.state = S.DOCTYPE_DTD\n            } else if (isQuote(c)) {\n              parser.state = S.DOCTYPE_QUOTED\n              parser.q = c\n            }\n          }\n          continue\n\n        case S.DOCTYPE_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.q = ''\n            parser.state = S.DOCTYPE\n          }\n          continue\n\n        case S.DOCTYPE_DTD:\n          parser.doctype += c\n          if (c === ']') {\n            parser.state = S.DOCTYPE\n          } else if (isQuote(c)) {\n            parser.state = S.DOCTYPE_DTD_QUOTED\n            parser.q = c\n          }\n          continue\n\n        case S.DOCTYPE_DTD_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.state = S.DOCTYPE_DTD\n            parser.q = ''\n          }\n          continue\n\n        case S.COMMENT:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDING\n          } else {\n            parser.comment += c\n          }\n          continue\n\n        case S.COMMENT_ENDING:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDED\n            parser.comment = textopts(parser.opt, parser.comment)\n            if (parser.comment) {\n              emitNode(parser, 'oncomment', parser.comment)\n            }\n            parser.comment = ''\n          } else {\n            parser.comment += '-' + c\n            parser.state = S.COMMENT\n          }\n          continue\n\n        case S.COMMENT_ENDED:\n          if (c !== '>') {\n            strictFail(parser, 'Malformed comment')\n            // allow <!-- blah -- bloo --> in non-strict mode,\n            // which is a comment of \" blah -- bloo \"\n            parser.comment += '--' + c\n            parser.state = S.COMMENT\n          } else {\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.CDATA:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING\n          } else {\n            parser.cdata += c\n          }\n          continue\n\n        case S.CDATA_ENDING:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING_2\n          } else {\n            parser.cdata += ']' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.CDATA_ENDING_2:\n          if (c === '>') {\n            if (parser.cdata) {\n              emitNode(parser, 'oncdata', parser.cdata)\n            }\n            emitNode(parser, 'onclosecdata')\n            parser.cdata = ''\n            parser.state = S.TEXT\n          } else if (c === ']') {\n            parser.cdata += ']'\n          } else {\n            parser.cdata += ']]' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.PROC_INST:\n          if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else if (isWhitespace(c)) {\n            parser.state = S.PROC_INST_BODY\n          } else {\n            parser.procInstName += c\n          }\n          continue\n\n        case S.PROC_INST_BODY:\n          if (!parser.procInstBody && isWhitespace(c)) {\n            continue\n          } else if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else {\n            parser.procInstBody += c\n          }\n          continue\n\n        case S.PROC_INST_ENDING:\n          if (c === '>') {\n            emitNode(parser, 'onprocessinginstruction', {\n              name: parser.procInstName,\n              body: parser.procInstBody\n            })\n            parser.procInstName = parser.procInstBody = ''\n            parser.state = S.TEXT\n          } else {\n            parser.procInstBody += '?' + c\n            parser.state = S.PROC_INST_BODY\n          }\n          continue\n\n        case S.OPEN_TAG:\n          if (isMatch(nameBody, c)) {\n            parser.tagName += c\n          } else {\n            newTag(parser)\n            if (c === '>') {\n              openTag(parser)\n            } else if (c === '/') {\n              parser.state = S.OPEN_TAG_SLASH\n            } else {\n              if (!isWhitespace(c)) {\n                strictFail(parser, 'Invalid character in tag name')\n              }\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.OPEN_TAG_SLASH:\n          if (c === '>') {\n            openTag(parser, true)\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Forward-slash in opening tag not followed by >')\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.ATTRIB:\n          // haven't read the attribute name yet.\n          if (isWhitespace(c)) {\n            continue\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (isMatch(nameStart, c)) {\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (c === '>') {\n            strictFail(parser, 'Attribute without value')\n            parser.attribValue = parser.attribName\n            attrib(parser)\n            openTag(parser)\n          } else if (isWhitespace(c)) {\n            parser.state = S.ATTRIB_NAME_SAW_WHITE\n          } else if (isMatch(nameBody, c)) {\n            parser.attribName += c\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME_SAW_WHITE:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (isWhitespace(c)) {\n            continue\n          } else {\n            strictFail(parser, 'Attribute without value')\n            parser.tag.attributes[parser.attribName] = ''\n            parser.attribValue = ''\n            emitNode(parser, 'onattribute', {\n              name: parser.attribName,\n              value: ''\n            })\n            parser.attribName = ''\n            if (c === '>') {\n              openTag(parser)\n            } else if (isMatch(nameStart, c)) {\n              parser.attribName = c\n              parser.state = S.ATTRIB_NAME\n            } else {\n              strictFail(parser, 'Invalid attribute name')\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.ATTRIB_VALUE:\n          if (isWhitespace(c)) {\n            continue\n          } else if (isQuote(c)) {\n            parser.q = c\n            parser.state = S.ATTRIB_VALUE_QUOTED\n          } else {\n            strictFail(parser, 'Unquoted attribute value')\n            parser.state = S.ATTRIB_VALUE_UNQUOTED\n            parser.attribValue = c\n          }\n          continue\n\n        case S.ATTRIB_VALUE_QUOTED:\n          if (c !== parser.q) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_Q\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          parser.q = ''\n          parser.state = S.ATTRIB_VALUE_CLOSED\n          continue\n\n        case S.ATTRIB_VALUE_CLOSED:\n          if (isWhitespace(c)) {\n            parser.state = S.ATTRIB\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (isMatch(nameStart, c)) {\n            strictFail(parser, 'No whitespace between attributes')\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_VALUE_UNQUOTED:\n          if (!isAttribEnd(c)) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_U\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          if (c === '>') {\n            openTag(parser)\n          } else {\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.CLOSE_TAG:\n          if (!parser.tagName) {\n            if (isWhitespace(c)) {\n              continue\n            } else if (notMatch(nameStart, c)) {\n              if (parser.script) {\n                parser.script += '</' + c\n                parser.state = S.SCRIPT\n              } else {\n                strictFail(parser, 'Invalid tagname in closing tag.')\n              }\n            } else {\n              parser.tagName = c\n            }\n          } else if (c === '>') {\n            closeTag(parser)\n          } else if (isMatch(nameBody, c)) {\n            parser.tagName += c\n          } else if (parser.script) {\n            parser.script += '</' + parser.tagName\n            parser.tagName = ''\n            parser.state = S.SCRIPT\n          } else {\n            if (!isWhitespace(c)) {\n              strictFail(parser, 'Invalid tagname in closing tag')\n            }\n            parser.state = S.CLOSE_TAG_SAW_WHITE\n          }\n          continue\n\n        case S.CLOSE_TAG_SAW_WHITE:\n          if (isWhitespace(c)) {\n            continue\n          }\n          if (c === '>') {\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Invalid characters in closing tag')\n          }\n          continue\n\n        case S.TEXT_ENTITY:\n        case S.ATTRIB_VALUE_ENTITY_Q:\n        case S.ATTRIB_VALUE_ENTITY_U:\n          var returnState\n          var buffer\n          switch (parser.state) {\n            case S.TEXT_ENTITY:\n              returnState = S.TEXT\n              buffer = 'textNode'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_Q:\n              returnState = S.ATTRIB_VALUE_QUOTED\n              buffer = 'attribValue'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_U:\n              returnState = S.ATTRIB_VALUE_UNQUOTED\n              buffer = 'attribValue'\n              break\n          }\n\n          if (c === ';') {\n            parser[buffer] += parseEntity(parser)\n            parser.entity = ''\n            parser.state = returnState\n          } else if (isMatch(parser.entity.length ? entityBody : entityStart, c)) {\n            parser.entity += c\n          } else {\n            strictFail(parser, 'Invalid character in entity name')\n            parser[buffer] += '&' + parser.entity + c\n            parser.entity = ''\n            parser.state = returnState\n          }\n\n          continue\n\n        default:\n          throw new Error(parser, 'Unknown state: ' + parser.state)\n      }\n    } // while\n\n    if (parser.position >= parser.bufferCheckPosition) {\n      checkBufferLength(parser)\n    }\n    return parser\n  }\n\n  /*! http://mths.be/fromcodepoint v0.1.0 by @mathias */\n  /* istanbul ignore next */\n  if (!String.fromCodePoint) {\n    (function () {\n      var stringFromCharCode = String.fromCharCode\n      var floor = Math.floor\n      var fromCodePoint = function () {\n        var MAX_SIZE = 0x4000\n        var codeUnits = []\n        var highSurrogate\n        var lowSurrogate\n        var index = -1\n        var length = arguments.length\n        if (!length) {\n          return ''\n        }\n        var result = ''\n        while (++index < length) {\n          var codePoint = Number(arguments[index])\n          if (\n            !isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n            codePoint < 0 || // not a valid Unicode code point\n            codePoint > 0x10FFFF || // not a valid Unicode code point\n            floor(codePoint) !== codePoint // not an integer\n          ) {\n            throw RangeError('Invalid code point: ' + codePoint)\n          }\n          if (codePoint <= 0xFFFF) { // BMP code point\n            codeUnits.push(codePoint)\n          } else { // Astral code point; split in surrogate halves\n            // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n            codePoint -= 0x10000\n            highSurrogate = (codePoint >> 10) + 0xD800\n            lowSurrogate = (codePoint % 0x400) + 0xDC00\n            codeUnits.push(highSurrogate, lowSurrogate)\n          }\n          if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n            result += stringFromCharCode.apply(null, codeUnits)\n            codeUnits.length = 0\n          }\n        }\n        return result\n      }\n      /* istanbul ignore next */\n      if (Object.defineProperty) {\n        Object.defineProperty(String, 'fromCodePoint', {\n          value: fromCodePoint,\n          configurable: true,\n          writable: true\n        })\n      } else {\n        String.fromCodePoint = fromCodePoint\n      }\n    }())\n  }\n})(typeof exports === 'undefined' ? this.sax = {} : exports)\n","'use strict';\n\nmodule.exports = {\n  isString: function(arg) {\n    return typeof(arg) === 'string';\n  },\n  isObject: function(arg) {\n    return typeof(arg) === 'object' && arg !== null;\n  },\n  isNull: function(arg) {\n    return arg === null;\n  },\n  isNullOrUndefined: function(arg) {\n    return arg == null;\n  }\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n","/**\n * Converts human friendly time to milliseconds. Supports the format\n * 00:00:00.000 for hours, minutes, seconds, and milliseconds respectively.\n * And 0ms, 0s, 0m, 0h, and together 1m1s.\n *\n * @param {string|number} time\n * @return {number}\n */\nconst numberFormat = /^\\d+$/;\nconst timeFormat = /^(?:(?:(\\d+):)?(\\d{1,2}):)?(\\d{1,2})(?:\\.(\\d{3}))?$/;\nconst timeUnits = {\n  ms: 1,\n  s: 1000,\n  m: 60000,\n  h: 3600000,\n};\nexports.humanStr = (time) => {\n  if (typeof time === 'number') { return time; }\n  if (numberFormat.test(time)) { return +time; }\n  const firstFormat = timeFormat.exec(time);\n  if (firstFormat) {\n    return +(firstFormat[1] || 0) * timeUnits.h +\n      +(firstFormat[2] || 0) * timeUnits.m +\n      +firstFormat[3] * timeUnits.s +\n      +(firstFormat[4] || 0);\n  } else {\n    let total = 0;\n    const r = /(-?\\d+)(ms|s|m|h)/g;\n    let rs;\n    while ((rs = r.exec(time)) != null) {\n      total += +rs[1] * timeUnits[rs[2]];\n    }\n    return total;\n  }\n};\n\n/**\n * Parses a duration string in the form of \"123.456S\", returns milliseconds.\n *\n * @param {string} time\n * @return {number}\n */\nexports.durationStr = (time) => {\n  let total = 0;\n  const r = /(\\d+(?:\\.\\d+)?)(S|M|H)/g;\n  let rs;\n  while ((rs = r.exec(time)) != null) {\n    total += +rs[1] * timeUnits[rs[2].toLowerCase()];\n  }\n  return total;\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","module.exports = require('events').EventEmitter;\n","'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {\n      pna.nextTick(emitErrorNT, this, err);\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      pna.nextTick(emitErrorNT, _this, err);\n      if (_this._writableState) {\n        _this._writableState.errorEmitted = true;\n      }\n    } else if (cb) {\n      cb(err);\n    }\n  });\n\n  return this;\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy\n};","var ALPHA_INDEX = {\n    '&lt': '<',\n    '&gt': '>',\n    '&quot': '\"',\n    '&apos': '\\'',\n    '&amp': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&apos;': '\\'',\n    '&amp;': '&'\n};\n\nvar CHAR_INDEX = {\n    60: 'lt',\n    62: 'gt',\n    34: 'quot',\n    39: 'apos',\n    38: 'amp'\n};\n\nvar CHAR_S_INDEX = {\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    '\\'': '&apos;',\n    '&': '&amp;'\n};\n\n/**\n * @constructor\n */\nfunction XmlEntities() {}\n\n/**\n * @param {String} str\n * @returns {String}\n */\nXmlEntities.prototype.encode = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    return str.replace(/<|>|\"|'|&/g, function(s) {\n        return CHAR_S_INDEX[s];\n    });\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\n XmlEntities.encode = function(str) {\n    return new XmlEntities().encode(str);\n };\n\n/**\n * @param {String} str\n * @returns {String}\n */\nXmlEntities.prototype.decode = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    return str.replace(/&#?[0-9a-zA-Z]+;?/g, function(s) {\n        if (s.charAt(1) === '#') {\n            var code = s.charAt(2).toLowerCase() === 'x' ?\n                parseInt(s.substr(3), 16) :\n                parseInt(s.substr(2));\n\n            if (isNaN(code) || code < -32768 || code > 65535) {\n                return '';\n            }\n            return String.fromCharCode(code);\n        }\n        return ALPHA_INDEX[s] || s;\n    });\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\n XmlEntities.decode = function(str) {\n    return new XmlEntities().decode(str);\n };\n\n/**\n * @param {String} str\n * @returns {String}\n */\nXmlEntities.prototype.encodeNonUTF = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    var strLength = str.length;\n    var result = '';\n    var i = 0;\n    while (i < strLength) {\n        var c = str.charCodeAt(i);\n        var alpha = CHAR_INDEX[c];\n        if (alpha) {\n            result += \"&\" + alpha + \";\";\n            i++;\n            continue;\n        }\n        if (c < 32 || c > 126) {\n            result += '&#' + c + ';';\n        } else {\n            result += str.charAt(i);\n        }\n        i++;\n    }\n    return result;\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\n XmlEntities.encodeNonUTF = function(str) {\n    return new XmlEntities().encodeNonUTF(str);\n };\n\n/**\n * @param {String} str\n * @returns {String}\n */\nXmlEntities.prototype.encodeNonASCII = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    var strLenght = str.length;\n    var result = '';\n    var i = 0;\n    while (i < strLenght) {\n        var c = str.charCodeAt(i);\n        if (c <= 255) {\n            result += str[i++];\n            continue;\n        }\n        result += '&#' + c + ';';\n        i++;\n    }\n    return result;\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\n XmlEntities.encodeNonASCII = function(str) {\n    return new XmlEntities().encodeNonASCII(str);\n };\n\nmodule.exports = XmlEntities;\n","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n","'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Buffer = require('safe-buffer').Buffer;\nvar util = require('util');\n\nfunction copyBuffer(src, target, offset) {\n  src.copy(target, offset);\n}\n\nmodule.exports = function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  BufferList.prototype.push = function push(v) {\n    var entry = { data: v, next: null };\n    if (this.length > 0) this.tail.next = entry;else this.head = entry;\n    this.tail = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.unshift = function unshift(v) {\n    var entry = { data: v, next: this.head };\n    if (this.length === 0) this.tail = entry;\n    this.head = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.shift = function shift() {\n    if (this.length === 0) return;\n    var ret = this.head.data;\n    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n    --this.length;\n    return ret;\n  };\n\n  BufferList.prototype.clear = function clear() {\n    this.head = this.tail = null;\n    this.length = 0;\n  };\n\n  BufferList.prototype.join = function join(s) {\n    if (this.length === 0) return '';\n    var p = this.head;\n    var ret = '' + p.data;\n    while (p = p.next) {\n      ret += s + p.data;\n    }return ret;\n  };\n\n  BufferList.prototype.concat = function concat(n) {\n    if (this.length === 0) return Buffer.alloc(0);\n    if (this.length === 1) return this.head.data;\n    var ret = Buffer.allocUnsafe(n >>> 0);\n    var p = this.head;\n    var i = 0;\n    while (p) {\n      copyBuffer(p.data, ret, i);\n      i += p.data.length;\n      p = p.next;\n    }\n    return ret;\n  };\n\n  return BufferList;\n}();\n\nif (util && util.inspect && util.inspect.custom) {\n  module.exports.prototype[util.inspect.custom] = function () {\n    var obj = util.inspect({ length: this.length });\n    return this.constructor.name + ' ' + obj;\n  };\n}","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","const qs       = require('querystring');\nconst url      = require('url');\nconst FORMATS  = require('./formats');\n\n\n// Use these to help sort formats, higher is better.\nconst audioEncodingRanks = {\n  mp3: 1,\n  vorbis: 2,\n  aac: 3,\n  opus: 4,\n  flac: 5,\n};\nconst videoEncodingRanks = {\n  'Sorenson H.283': 1,\n  'MPEG-4 Visual': 2,\n  'VP8': 3,\n  'VP9': 4,\n  'H.264': 5,\n};\n\n\n/**\n * Sort formats from highest quality to lowest.\n * By resolution, then video bitrate, then audio bitrate.\n *\n * @param {Object} a\n * @param {Object} b\n */\nexports.sortFormats = (a, b) => {\n  const ares = a.resolution ? parseInt(a.resolution.slice(0, -1), 10) : 0;\n  const bres = b.resolution ? parseInt(b.resolution.slice(0, -1), 10) : 0;\n  const afeats = ~~!!ares * 2 + ~~!!a.audioBitrate;\n  const bfeats = ~~!!bres * 2 + ~~!!b.audioBitrate;\n\n  const getBitrate = (c) => {\n    if (c.bitrate) {\n      let s = c.bitrate.split('-');\n      return parseFloat(s[s.length - 1], 10);\n    } else {\n      return 0;\n    }\n  };\n\n  const audioScore = (c) => {\n    const abitrate = c.audioBitrate || 0;\n    const aenc = audioEncodingRanks[c.audioEncoding] || 0;\n    return abitrate + aenc / 10;\n  };\n\n  if (afeats === bfeats) {\n    if (ares === bres) {\n      let avbitrate = getBitrate(a);\n      let bvbitrate = getBitrate(b);\n      if (avbitrate === bvbitrate) {\n        let aascore = audioScore(a);\n        let bascore = audioScore(b);\n        if (aascore === bascore) {\n          let avenc = videoEncodingRanks[a.encoding] || 0;\n          let bvenc = videoEncodingRanks[b.encoding] || 0;\n          return bvenc - avenc;\n        } else {\n          return bascore - aascore;\n        }\n      } else {\n        return bvbitrate - avbitrate;\n      }\n    } else {\n      return bres - ares;\n    }\n  } else {\n    return bfeats - afeats;\n  }\n};\n\n\n/**\n * Choose a format depending on the given options.\n *\n * @param {Array.<Object>} formats\n * @param {Object} options\n * @return {Object|Error}\n */\nexports.chooseFormat = (formats, options) => {\n  if (typeof options.format === 'object') {\n    return options.format;\n  }\n\n  if (options.filter) {\n    formats = exports.filterFormats(formats, options.filter);\n    if (formats.length === 0) {\n      return Error('No formats found with custom filter');\n    }\n  }\n\n  let format;\n  const quality = options.quality || 'highest';\n  const getBitrate = (f) => {\n    let s = f.bitrate.split('-');\n    return parseFloat(s[s.length - 1], 10);\n  };\n  switch (quality) {\n    case 'highest':\n      format = formats[0];\n      break;\n\n    case 'lowest':\n      format = formats[formats.length - 1];\n      break;\n\n    case 'highestaudio':\n      formats = exports.filterFormats(formats, 'audio');\n      format = null;\n      for (let f of formats) {\n        if (!format\n          || f.audioBitrate > format.audioBitrate\n          || (f.audioBitrate === format.audioBitrate && format.encoding && !f.encoding))\n          format = f;\n      }\n      break;\n\n    case 'lowestaudio':\n      formats = exports.filterFormats(formats, 'audio')\n      format = null;\n      for (let f of formats) {\n        if (!format\n          || f.audioBitrate < format.audioBitrate\n          || (f.audioBitrate === format.audioBitrate && format.encoding && !f.encoding))\n          format = f;\n      }\n      break;\n\n    case 'highestvideo':\n      formats = exports.filterFormats(formats, 'video');\n      format = null;\n      for (let f of formats) {\n        if (!format\n          || getBitrate(f) > getBitrate(format)\n          || (getBitrate(f) === getBitrate(format) && format.audioEncoding && !f.audioEncoding))\n          format = f;\n      }\n      break;\n\n    case 'lowestvideo':\n      formats = exports.filterFormats(formats, 'video')\n      format = null;\n      for (let f of formats) {\n        if (!format\n          || getBitrate(f) < getBitrate(format)\n          || (getBitrate(f) === getBitrate(format) && format.audioEncoding && !f.audioEncoding))\n          format = f;\n      }\n      break;\n\n    default: {\n      let getFormat = (itag) => {\n        return formats.find((format) => format.itag === '' + itag);\n      };\n      if (Array.isArray(quality)) {\n        quality.find((q) => format = getFormat(q));\n      } else {\n        format = getFormat(quality);\n      }\n    }\n\n  }\n\n  if (!format) {\n    return Error('No such format found: ' + quality);\n  }\n  return format;\n};\n\n\n/**\n * @param {Array.<Object>} formats\n * @param {Function} filter\n * @return {Array.<Object>}\n */\nexports.filterFormats = (formats, filter) => {\n  let fn;\n  switch (filter) {\n    case 'audioandvideo':\n      fn = (format) => format.bitrate && format.audioBitrate;\n      break;\n\n    case 'video':\n      fn = (format) => format.bitrate;\n      break;\n\n    case 'videoonly':\n      fn = (format) => format.bitrate && !format.audioBitrate;\n      break;\n\n    case 'audio':\n      fn = (format) => format.audioBitrate;\n      break;\n\n    case 'audioonly':\n      fn = (format) => !format.bitrate && format.audioBitrate;\n      break;\n\n    default:\n      if (typeof filter === 'function') {\n        fn = filter;\n      } else {\n        throw TypeError(`Given filter (${filter}) is not supported`);\n      }\n  }\n  return formats.filter(fn);\n};\n\n\n/**\n * String#indexOf() that supports regex too.\n *\n * @param {string} haystack\n * @param {string|RegExp} needle\n * @return {number}\n */\nconst indexOf = (haystack, needle) => {\n  return needle instanceof RegExp ?\n    haystack.search(needle) : haystack.indexOf(needle);\n};\n\n\n/**\n * Extract string inbetween another.\n *\n * @param {string} haystack\n * @param {string} left\n * @param {string} right\n * @return {string}\n */\nexports.between = (haystack, left, right) => {\n  let pos = indexOf(haystack, left);\n  if (pos === -1) { return ''; }\n  haystack = haystack.slice(pos + left.length);\n  pos = indexOf(haystack, right);\n  if (pos === -1) { return ''; }\n  haystack = haystack.slice(0, pos);\n  return haystack;\n};\n\n\n/**\n * Get video ID.\n *\n * There are a few type of video URL formats.\n *  - https://www.youtube.com/watch?v=VIDEO_ID\n *  - https://m.youtube.com/watch?v=VIDEO_ID\n *  - https://youtu.be/VIDEO_ID\n *  - https://www.youtube.com/v/VIDEO_ID\n *  - https://www.youtube.com/embed/VIDEO_ID\n *  - https://music.youtube.com/watch?v=VIDEO_ID\n *  - https://gaming.youtube.com/watch?v=VIDEO_ID\n *\n * @param {string} link\n * @return {string|Error}\n */\nconst validQueryDomains = new Set([\n  'youtube.com',\n  'www.youtube.com',\n  'm.youtube.com',\n  'music.youtube.com',\n  'gaming.youtube.com',\n]);\nconst validPathDomains = new Set([\n  'youtu.be',\n  'youtube.com',\n  'www.youtube.com',\n]);\nexports.getURLVideoID = (link) => {\n  const parsed = url.parse(link, true);\n  let id = parsed.query.v;\n  if (validPathDomains.has(parsed.hostname) && !id) {\n    const paths = parsed.pathname.split('/');\n    id = paths[paths.length - 1];\n  } else if (parsed.hostname && !validQueryDomains.has(parsed.hostname)) {\n    return Error('Not a YouTube domain');\n  }\n  if (!id) {\n    return Error('No video id found: ' + link);\n  }\n  id = id.substring(0, 11);\n  if (!exports.validateID(id)) {\n    return TypeError(`Video id (${id}) does not match expected ` +\n      `format (${idRegex.toString()})`);\n  }\n  return id;\n};\n\n\n/**\n * Gets video ID either from a url or by checking if the given string\n * matches the video ID format.\n *\n * @param {string} str\n * @return {string|Error}\n */\nexports.getVideoID = (str) => {\n  if (exports.validateID(str)) {\n    return str;\n  } else {\n    return exports.getURLVideoID(str);\n  }\n};\n\n\n/**\n * Returns true if given id satifies YouTube's id format.\n *\n * @param {string} id\n * @return {boolean}\n */\nconst idRegex = /^[a-zA-Z0-9-_]{11}$/;\nexports.validateID = (id) => {\n  return idRegex.test(id);\n};\n\n\n/**\n * Checks wether the input string includes a valid id.\n *\n * @param {string} string\n * @return {boolean}\n */\nexports.validateURL = (string) => {\n  return !(exports.getURLVideoID(string) instanceof Error);\n};\n\n\n/**\n * @param {Object} info\n * @return {Array.<Object>}\n */\nexports.parseFormats = (info) => {\n  let formats = [];\n  if (info.url_encoded_fmt_stream_map) {\n    formats = formats\n      .concat(info.url_encoded_fmt_stream_map.split(','));\n  }\n  if (info.adaptive_fmts) {\n    formats = formats.concat(info.adaptive_fmts.split(','));\n  }\n\n  formats = formats.map((format) => qs.parse(format));\n  delete info.url_encoded_fmt_stream_map;\n  delete info.adaptive_fmts;\n\n  return formats;\n};\n\n\n/**\n * @param {Object} format\n */\nexports.addFormatMeta = (format) => {\n  const meta = FORMATS[format.itag];\n  for (let key in meta) {\n    format[key] = meta[key];\n  }\n\n  format.live = /\\/source\\/yt_live_broadcast\\//.test(format.url);\n  format.isHLS = /\\/manifest\\/hls_(variant|playlist)\\//.test(format.url);\n  format.isDashMPD = /\\/manifest\\/dash\\//.test(format.url);\n};\n\n\n/**\n * Get only the string from an HTML string.\n *\n * @param {string} html\n * @return {string}\n */\nexports.stripHTML = (html) => {\n  return html\n    .replace(/\\n/g, ' ')\n    .replace(/\\s*<\\s*br\\s*\\/?\\s*>\\s*/gi, '\\n')\n    .replace(/<\\s*\\/\\s*p\\s*>\\s*<\\s*p[^>]*>/gi, '\\n')\n    .replace(/<.*?>/gi, '')\n    .trim();\n};\n\n\n/**\n * @param {Array.<Function>} funcs\n * @param {Function(!Error, Array.<Object>)} callback\n */\nexports.parallel = (funcs, callback) => {\n  let funcsDone = 0;\n  let errGiven = false;\n  let results = [];\n  const len = funcs.length;\n\n  const checkDone = (index, err, result) => {\n    if (errGiven) { return; }\n    if (err) {\n      errGiven = true;\n      callback(err);\n      return;\n    }\n    results[index] = result;\n    if (++funcsDone === len) {\n      callback(null, results);\n    }\n  };\n\n  if (len > 0) {\n    funcs.forEach((f, i) => { f(checkDone.bind(null, i)); });\n  } else {\n    callback(null, results);\n  }\n};\n","'use strict';\n// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)\nvar $export = require('./_export');\nvar $find = require('./_array-methods')(5);\nvar KEY = 'find';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\nrequire('./_add-to-unscopables')(KEY);\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","const urllib      = require('url');\nconst querystring = require('querystring');\nconst sax         = require('sax');\nconst request     = require('miniget');\nconst util        = require('./util');\nconst extras      = require('./info-extras');\nconst sig         = require('./sig');\nconst FORMATS     = require('./formats');\n\n\nconst VIDEO_URL = 'https://www.youtube.com/watch?v=';\nconst EMBED_URL = 'https://www.youtube.com/embed/';\nconst VIDEO_EURL = 'https://youtube.googleapis.com/v/';\nconst INFO_HOST = 'www.youtube.com';\nconst INFO_PATH = '/get_video_info';\nconst KEYS_TO_SPLIT = [\n  'fmt_list',\n  'fexp',\n  'watermark'\n];\n\n\n/**\n * Gets info from a video without getting additional formats.\n *\n * @param {string} id\n * @param {Object} options\n * @param {Function(Error, Object)} callback\n */\nexports.getBasicInfo = (id, options, callback) => {\n  // Try getting config from the video page first.\n  const params = 'hl=' + (options.lang || 'en');\n  let url = VIDEO_URL + id + '&' + params +\n    '&bpctr=' + Math.ceil(Date.now() / 1000);\n\n  // Remove header from watch page request.\n  // Otherwise, it'll use a different framework for rendering content.\n  const reqOptions = Object.assign({}, options.requestOptions);\n  reqOptions.headers = Object.assign({}, reqOptions.headers, {\n    'User-Agent': ''\n  });\n\n  request(url, reqOptions, (err, res, body) => {\n    if (err) return callback(err);\n\n    // Check if there are any errors with this video page.\n    const unavailableMsg = util.between(body, '<div id=\"player-unavailable\"', '>');\n    if (unavailableMsg &&\n        !/\\bhid\\b/.test(util.between(unavailableMsg, 'class=\"', '\"'))) {\n      // Ignore error about age restriction.\n      if (!body.includes('<div id=\"watch7-player-age-gate-content\"')) {\n        return callback(Error(util.between(body,\n          '<h1 id=\"unavailable-message\" class=\"message\">', '</h1>').trim()));\n      }\n    }\n\n    // Parse out additional metadata from this page.\n    const additional = {\n      // Get the author/uploader.\n      author: extras.getAuthor(body),\n\n      // Get the day the vid was published.\n      published: extras.getPublished(body),\n\n      // Get description.\n      description: extras.getVideoDescription(body),\n\n      // Get media info.\n      media: extras.getVideoMedia(body),\n\n      // Get related videos.\n      related_videos: extras.getRelatedVideos(body),\n\n      // Give the standard link to the video.\n      video_url: VIDEO_URL + id,\n    };\n\n    const jsonStr = util.between(body, 'ytplayer.config = ', '</script>');\n    let config;\n    if (jsonStr) {\n      config = jsonStr.slice(0, jsonStr.lastIndexOf(';ytplayer.load'));\n      gotConfig(id, options, additional, config, false, callback);\n\n    } else {\n      // If the video page doesn't work, maybe because it has mature content.\n      // and requires an account logged in to view, try the embed page.\n      url = EMBED_URL + id + '?' + params;\n      request(url, options.requestOptions, (err, res, body) => {\n        if (err) return callback(err);\n        config = util.between(body, 't.setConfig({\\'PLAYER_CONFIG\\': ', /\\}(,'|\\}\\);)/);\n        gotConfig(id, options, additional, config, true, callback);\n      });\n    }\n  });\n};\n\n\n/**\n * @param {Object} id\n * @param {Object} options\n * @param {Object} additional\n * @param {Object} config\n * @param {boolean} fromEmbed\n * @param {Function(Error, Object)} callback\n */\nconst gotConfig = (id, options, additional, config, fromEmbed, callback) => {\n  if (!config) {\n    return callback(Error('Could not find player config'));\n  }\n  try {\n    config = JSON.parse(config + (fromEmbed ? '}' : ''));\n  } catch (err) {\n    return callback(Error('Error parsing config: ' + err.message));\n  }\n  const url = urllib.format({\n    protocol: 'https',\n    host: INFO_HOST,\n    pathname: INFO_PATH,\n    query: {\n      video_id: id,\n      eurl: VIDEO_EURL + id,\n      ps: 'default',\n      gl: 'US',\n      hl: (options.lang || 'en'),\n      sts: config.sts,\n    },\n  });\n  request(url, options.requestOptions, (err, res, body) => {\n    if (err) return callback(err);\n    let info = querystring.parse(body);\n\n    if (info.status === 'fail') {\n      if (config.args && (config.args.fmt_list ||\n        config.args.url_encoded_fmt_stream_map || config.args.adaptive_fmts)) {\n        info = config.args;\n        info.no_embed_allowed = true;\n      } else {\n        return callback(\n          Error(`Code ${info.errorcode}: ${util.stripHTML(info.reason)}`));\n      }\n    }\n\n    const player_response = config.args.player_response || info.player_response;\n    if (player_response) {\n      try {\n        info.player_response = JSON.parse(player_response);\n      } catch (err) {\n        return callback(\n          Error('Error parsing `player_response`: ' + err.message));\n      }\n      let playability = info.player_response.playabilityStatus;\n      if (playability && playability.status === 'UNPLAYABLE') {\n        return callback(Error(playability.reason));\n      }\n    }\n\n    // Split some keys by commas.\n    KEYS_TO_SPLIT.forEach((key) => {\n      if (!info[key]) return;\n      info[key] = info[key]\n        .split(',')\n        .filter((v) => v !== '');\n    });\n\n    info.fmt_list = info.fmt_list ?\n      info.fmt_list.map((format) => format.split('/')) : [];\n\n    info.formats = util.parseFormats(info);\n\n    // Add additional properties to info.\n    Object.assign(info, additional);\n    info.age_restricted = fromEmbed;\n    info.html5player = config.assets.js;\n\n    callback(null, info);\n  });\n};\n\n\n/**\n * Gets info from a video additional formats and deciphered URLs.\n *\n * @param {string} id\n * @param {Object} options\n * @param {Function(Error, Object)} callback\n */\nexports.getFullInfo = (id, options, callback) => {\n  return exports.getBasicInfo(id, options, (err, info) => {\n    if (err) return callback(err);\n    const hasManifest =\n      info.player_response && info.player_response.streamingData && (\n        info.player_response.streamingData.dashManifestUrl ||\n        info.player_response.streamingData.hlsManifestUrl\n      );\n    if (info.formats.length || hasManifest) {\n      const html5playerfile = urllib.resolve(VIDEO_URL, info.html5player);\n      sig.getTokens(html5playerfile, options, (err, tokens) => {\n        if (err) return callback(err);\n\n        sig.decipherFormats(info.formats, tokens, options.debug);\n        let funcs = [];\n        if (hasManifest && info.player_response.streamingData.dashManifestUrl) {\n          let url = decipherURL(info.player_response.streamingData.dashManifestUrl, tokens);\n          funcs.push(getDashManifest.bind(null, url, options));\n        }\n        if (hasManifest && info.player_response.streamingData.hlsManifestUrl) {\n          let url = decipherURL(info.player_response.streamingData.hlsManifestUrl, tokens);\n          funcs.push(getM3U8.bind(null, url, options));\n        }\n\n        util.parallel(funcs, (err, results) => {\n          if (err) return callback(err);\n          if (results[0]) { mergeFormats(info, results[0]); }\n          if (results[1]) { mergeFormats(info, results[1]); }\n          if (!info.formats.length) {\n            callback(Error('No formats found'));\n            return;\n          }\n\n          if (options.debug) {\n            info.formats.forEach((format) => {\n              const itag = format.itag;\n              if (!FORMATS[itag]) {\n                console.warn(`No format metadata for itag ${itag} found`);\n              }\n            });\n          }\n\n          info.formats.forEach(util.addFormatMeta);\n          info.formats.sort(util.sortFormats);\n          info.full = true;\n          callback(null, info);\n        });\n      });\n    } else {\n      callback(Error('This video is unavailable'));\n    }\n  });\n};\n\n\n/**\n * @param {string} url\n * @param {Array.<string>} tokens\n */\nconst decipherURL = (url, tokens) => {\n  return url.replace(/\\/s\\/([a-fA-F0-9.]+)/, (_, s) => {\n    return '/signature/' + sig.decipher(tokens, s);\n  });\n};\n\n\n/**\n * Merges formats from DASH or M3U8 with formats from video info page.\n *\n * @param {Object} info\n * @param {Object} formatsMap\n */\nconst mergeFormats = (info, formatsMap) => {\n  info.formats.forEach((f) => {\n    if (!formatsMap[f.itag]) {\n      formatsMap[f.itag] = f;\n    }\n  });\n  info.formats = [];\n  for (let itag in formatsMap) { info.formats.push(formatsMap[itag]); }\n};\n\n\n/**\n * Gets additional DASH formats.\n *\n * @param {string} url\n * @param {Object} options\n * @param {Function(!Error, Array.<Object>)} callback\n */\nconst getDashManifest = (url, options, callback) => {\n  let formats = {};\n\n  const parser = sax.parser(false);\n  parser.onerror = callback;\n  parser.onopentag = (node) => {\n    if (node.name === 'REPRESENTATION') {\n      const itag = node.attributes.ID;\n      formats[itag] = { itag, url };\n    }\n  };\n  parser.onend = () => { callback(null, formats); };\n\n  const req = request(urllib.resolve(VIDEO_URL, url), options.requestOptions);\n  req.setEncoding('utf8');\n  req.on('error', callback);\n  req.on('data', (chunk) => { parser.write(chunk); });\n  req.on('end', parser.close.bind(parser));\n};\n\n\n/**\n * Gets additional formats.\n *\n * @param {string} url\n * @param {Object} options\n * @param {Function(!Error, Array.<Object>)} callback\n */\nconst getM3U8 = (url, options, callback) => {\n  url = urllib.resolve(VIDEO_URL, url);\n  request(url, options.requestOptions, (err, res, body) => {\n    if (err) return callback(err);\n\n    let formats = {};\n    body\n      .split('\\n')\n      .filter((line) => /https?:\\/\\//.test(line))\n      .forEach((line) => {\n        const itag = line.match(/\\/itag\\/(\\d+)\\//)[1];\n        formats[itag] = { itag: itag, url: line };\n      });\n    callback(null, formats);\n  });\n};\n\n\n// Cached for getting basic/full info.\nexports.cache = new Map();\nexports.cache.timeout = 1000;\n\n\n// Cache get info functions.\n// In case a user wants to get a video's info before downloading.\nfor (let fnName of ['getBasicInfo', 'getFullInfo']) {\n  /**\n   * @param {string} link\n   * @param {Object} options\n   * @param {Function(Error, Object)} callback\n   */\n  const fn = exports[fnName];\n  exports[fnName] = (link, options, callback) => {\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    } else if (!options) {\n      options = {};\n    }\n\n    if (!callback) {\n      return new Promise((resolve, reject) => {\n        exports[fnName](link, options, (err, info) => {\n          if (err) return reject(err);\n          resolve(info);\n        });\n      });\n    }\n\n    const id = util.getVideoID(link);\n    if (id instanceof Error) return callback(id);\n\n    const key = [fnName, id, options.lang].join('-');\n    if (exports.cache.has(key)) {\n      callback(null, exports.cache.get(key));\n    } else {\n      fn(id, options, (err, info) => {\n        if (err) return callback(err);\n        exports.cache.set(key, info);\n        setTimeout(() => { exports.cache.delete(key); }, exports.cache.timeout);\n        callback(null, info);\n      });\n    }\n  };\n}\n\n\n// Export a few helpers.\nexports.validateID = util.validateID;\nexports.validateURL = util.validateURL;\nexports.getURLVideoID = util.getURLVideoID;\nexports.getVideoID = util.getVideoID;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","module.exports = {\n  XmlEntities: require('./lib/xml-entities.js'),\n  Html4Entities: require('./lib/html4-entities.js'),\n  Html5Entities: require('./lib/html5-entities.js'),\n  AllHtmlEntities: require('./lib/html5-entities.js')\n};\n","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","module.exports = {\n  \"100\": \"Continue\",\n  \"101\": \"Switching Protocols\",\n  \"102\": \"Processing\",\n  \"200\": \"OK\",\n  \"201\": \"Created\",\n  \"202\": \"Accepted\",\n  \"203\": \"Non-Authoritative Information\",\n  \"204\": \"No Content\",\n  \"205\": \"Reset Content\",\n  \"206\": \"Partial Content\",\n  \"207\": \"Multi-Status\",\n  \"208\": \"Already Reported\",\n  \"226\": \"IM Used\",\n  \"300\": \"Multiple Choices\",\n  \"301\": \"Moved Permanently\",\n  \"302\": \"Found\",\n  \"303\": \"See Other\",\n  \"304\": \"Not Modified\",\n  \"305\": \"Use Proxy\",\n  \"307\": \"Temporary Redirect\",\n  \"308\": \"Permanent Redirect\",\n  \"400\": \"Bad Request\",\n  \"401\": \"Unauthorized\",\n  \"402\": \"Payment Required\",\n  \"403\": \"Forbidden\",\n  \"404\": \"Not Found\",\n  \"405\": \"Method Not Allowed\",\n  \"406\": \"Not Acceptable\",\n  \"407\": \"Proxy Authentication Required\",\n  \"408\": \"Request Timeout\",\n  \"409\": \"Conflict\",\n  \"410\": \"Gone\",\n  \"411\": \"Length Required\",\n  \"412\": \"Precondition Failed\",\n  \"413\": \"Payload Too Large\",\n  \"414\": \"URI Too Long\",\n  \"415\": \"Unsupported Media Type\",\n  \"416\": \"Range Not Satisfiable\",\n  \"417\": \"Expectation Failed\",\n  \"418\": \"I'm a teapot\",\n  \"421\": \"Misdirected Request\",\n  \"422\": \"Unprocessable Entity\",\n  \"423\": \"Locked\",\n  \"424\": \"Failed Dependency\",\n  \"425\": \"Unordered Collection\",\n  \"426\": \"Upgrade Required\",\n  \"428\": \"Precondition Required\",\n  \"429\": \"Too Many Requests\",\n  \"431\": \"Request Header Fields Too Large\",\n  \"451\": \"Unavailable For Legal Reasons\",\n  \"500\": \"Internal Server Error\",\n  \"501\": \"Not Implemented\",\n  \"502\": \"Bad Gateway\",\n  \"503\": \"Service Unavailable\",\n  \"504\": \"Gateway Timeout\",\n  \"505\": \"HTTP Version Not Supported\",\n  \"506\": \"Variant Also Negotiates\",\n  \"507\": \"Insufficient Storage\",\n  \"508\": \"Loop Detected\",\n  \"509\": \"Bandwidth Limit Exceeded\",\n  \"510\": \"Not Extended\",\n  \"511\": \"Network Authentication Required\"\n}\n","const http        = require('http');\nconst https       = require('https');\nconst urlParse    = require('url').parse;\nconst PassThrough = require('stream').PassThrough;\n\n\nconst httpLibs = { 'http:': http, 'https:': https };\nconst redirectCodes = { 301: true, 302: true, 303: true, 307: true };\nconst defaults = {\n  maxRedirects: 2,\n  maxRetries: 2,\n  maxReconnects: 0,\n  backoff: { inc: 100, max: 10000 },\n  highWaterMark: null,\n  transform: null,\n  acceptEncoding: null,\n};\n\n/**\n* @param {string} url\n* @param {!Object} options\n* @param {!Function(Error, http.IncomingMessage, string)} callback\n* @return {stream.Readable}\n*/\nmodule.exports = (url, options, callback) => {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  } else if (!options) {\n    options = {};\n  }\n  options = Object.assign({}, defaults, options);\n  const stream = new PassThrough({ highWaterMark: options.highWaterMark });\n  let myreq, myres;\n  let aborted = false;\n  let redirects = 0;\n  let retries = 0;\n  let retryTimeout;\n  let reconnects = 0;\n  let contentLength;\n  let acceptRanges = false;\n  let rangeStart = 0, rangeEnd;\n  let downloaded = 0;\n\n  // Check if this is a ranged request.\n  if (options.headers && options.headers.Range) {\n    let r = /bytes=(\\d+)-(\\d+)?/.exec(options.headers.Range);\n    if (r) {\n      rangeStart = parseInt(r[1], 10);\n      rangeEnd = parseInt(r[2], 10);\n    }\n  }\n\n  // Add `Accept-Encoding` header.\n  if (options.acceptEncoding) {\n    options.headers = Object.assign({\n      'Accept-Encoding': Object.keys(options.acceptEncoding).join(', ')\n    }, options.headers);\n  }\n\n  const onRequestError = (err, statusCode) => {\n    if (!aborted) {\n      // If there is an error when the download has already started,\n      // but not finished, try reconnecting.\n      if (myres && acceptRanges &&\n        0 < downloaded && downloaded < contentLength) {\n        if (reconnects++ < options.maxReconnects) {\n          myres = null;\n          retries = 0;\n          let ms = Math.min(options.backoff.inc, options.backoff.max);\n          retryTimeout = setTimeout(doDownload, ms);\n          stream.emit('reconnect', reconnects, err);\n          return;\n        }\n      } else if ((!statusCode || err.message === 'ENOTFOUND') &&\n        retries++ < options.maxRetries) {\n        let ms = Math.min(retries * options.backoff.inc, options.backoff.max);\n        retryTimeout = setTimeout(doDownload, ms);\n        stream.emit('retry', retries, err);\n        return;\n      }\n    }\n    stream.emit('error', err);\n  };\n\n  const doDownload = () => {\n    if (aborted) { return; }\n    let parsed = urlParse(url);\n    let httpLib = httpLibs[parsed.protocol];\n    if (!httpLib) {\n      stream.emit('error', Error('Invalid URL: ' + url));\n      return;\n    }\n\n    Object.assign(parsed, options);\n    for (let key in defaults) {\n      delete parsed[key];\n    }\n    if (acceptRanges && downloaded > 0) {\n      parsed.headers = Object.assign({}, parsed.headers, {\n        Range: `bytes=${downloaded + rangeStart}-${rangeEnd || ''}`\n      });\n    }\n\n    if (options.transform) {\n      parsed = options.transform(parsed);\n      if (parsed.protocol) {\n        httpLib = httpLibs[parsed.protocol];\n      }\n    }\n\n    myreq = httpLib.get(parsed, (res) => {\n      if (redirectCodes[res.statusCode] === true) {\n        if (redirects++ >= options.maxRedirects) {\n          stream.emit('error', Error('Too many redirects'));\n        } else {\n          url = res.headers.location;\n          stream.emit('redirect', url);\n          doDownload();\n        }\n        return;\n      } else if (res.statusCode < 200 || 400 <= res.statusCode) {\n        let err = Error('Status code: ' + res.statusCode);\n        if (res.statusCode >= 500) {\n          onRequestError(err, res.statusCode);\n        } else {\n          stream.emit('error', err);\n        }\n        return;\n      }\n      let decoded = res;\n      if (options.acceptEncoding && res.headers['content-encoding']) {\n        for (let enc of res.headers['content-encoding'].split(', ').reverse()) {\n          let fn = options.acceptEncoding[enc];\n          if (fn != null) {\n            decoded = decoded.pipe(fn(decoded));\n            decoded.on('error', stream.emit.bind(stream, 'error'));\n          }\n        }\n      }\n      if (!contentLength) {\n        contentLength = parseInt(res.headers['content-length'], 10);\n        acceptRanges = res.headers['accept-ranges'] === 'bytes' &&\n          contentLength > 0 && options.maxReconnects > 0;\n      }\n      if (acceptRanges) {\n        res.on('data', (chunk) => { downloaded += chunk.length; });\n        decoded.on('end', () => {\n          if (downloaded === contentLength) {\n            stream.end();\n          }\n        });\n      }\n      decoded.pipe(stream, { end: !acceptRanges });\n      myres = decoded;\n      stream.emit('response', res);\n      res.on('error', stream.emit.bind(stream, 'error'));\n    });\n    myreq.on('error', onRequestError);\n    stream.emit('request', myreq);\n  };\n\n  stream.abort = () => {\n    aborted = true;\n    stream.emit('abort');\n    if (myreq) { myreq.abort(); }\n    if (myres) { myres.unpipe(stream); }\n    clearTimeout(retryTimeout);\n  };\n\n  process.nextTick(doDownload);\n  if (callback) {\n    let body = '';\n    stream.setEncoding('utf8');\n    stream.on('data', (chunk) => { body += chunk; });\n    stream.on('end', () => { callback(null, myres, body); });\n    stream.on('error', callback);\n  }\n  return callback ? null : stream;\n};\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n","var capability = require('./capability')\nvar inherits = require('inherits')\nvar response = require('./response')\nvar stream = require('readable-stream')\nvar toArrayBuffer = require('to-arraybuffer')\n\nvar IncomingMessage = response.IncomingMessage\nvar rStates = response.readyStates\n\nfunction decideMode (preferBinary, useFetch) {\n\tif (capability.fetch && useFetch) {\n\t\treturn 'fetch'\n\t} else if (capability.mozchunkedarraybuffer) {\n\t\treturn 'moz-chunked-arraybuffer'\n\t} else if (capability.msstream) {\n\t\treturn 'ms-stream'\n\t} else if (capability.arraybuffer && preferBinary) {\n\t\treturn 'arraybuffer'\n\t} else if (capability.vbArray && preferBinary) {\n\t\treturn 'text:vbarray'\n\t} else {\n\t\treturn 'text'\n\t}\n}\n\nvar ClientRequest = module.exports = function (opts) {\n\tvar self = this\n\tstream.Writable.call(self)\n\n\tself._opts = opts\n\tself._body = []\n\tself._headers = {}\n\tif (opts.auth)\n\t\tself.setHeader('Authorization', 'Basic ' + new Buffer(opts.auth).toString('base64'))\n\tObject.keys(opts.headers).forEach(function (name) {\n\t\tself.setHeader(name, opts.headers[name])\n\t})\n\n\tvar preferBinary\n\tvar useFetch = true\n\tif (opts.mode === 'disable-fetch' || ('requestTimeout' in opts && !capability.abortController)) {\n\t\t// If the use of XHR should be preferred. Not typically needed.\n\t\tuseFetch = false\n\t\tpreferBinary = true\n\t} else if (opts.mode === 'prefer-streaming') {\n\t\t// If streaming is a high priority but binary compatibility and\n\t\t// the accuracy of the 'content-type' header aren't\n\t\tpreferBinary = false\n\t} else if (opts.mode === 'allow-wrong-content-type') {\n\t\t// If streaming is more important than preserving the 'content-type' header\n\t\tpreferBinary = !capability.overrideMimeType\n\t} else if (!opts.mode || opts.mode === 'default' || opts.mode === 'prefer-fast') {\n\t\t// Use binary if text streaming may corrupt data or the content-type header, or for speed\n\t\tpreferBinary = true\n\t} else {\n\t\tthrow new Error('Invalid value for opts.mode')\n\t}\n\tself._mode = decideMode(preferBinary, useFetch)\n\tself._fetchTimer = null\n\n\tself.on('finish', function () {\n\t\tself._onFinish()\n\t})\n}\n\ninherits(ClientRequest, stream.Writable)\n\nClientRequest.prototype.setHeader = function (name, value) {\n\tvar self = this\n\tvar lowerName = name.toLowerCase()\n\t// This check is not necessary, but it prevents warnings from browsers about setting unsafe\n\t// headers. To be honest I'm not entirely sure hiding these warnings is a good thing, but\n\t// http-browserify did it, so I will too.\n\tif (unsafeHeaders.indexOf(lowerName) !== -1)\n\t\treturn\n\n\tself._headers[lowerName] = {\n\t\tname: name,\n\t\tvalue: value\n\t}\n}\n\nClientRequest.prototype.getHeader = function (name) {\n\tvar header = this._headers[name.toLowerCase()]\n\tif (header)\n\t\treturn header.value\n\treturn null\n}\n\nClientRequest.prototype.removeHeader = function (name) {\n\tvar self = this\n\tdelete self._headers[name.toLowerCase()]\n}\n\nClientRequest.prototype._onFinish = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\tvar opts = self._opts\n\n\tvar headersObj = self._headers\n\tvar body = null\n\tif (opts.method !== 'GET' && opts.method !== 'HEAD') {\n\t\tif (capability.arraybuffer) {\n\t\t\tbody = toArrayBuffer(Buffer.concat(self._body))\n\t\t} else if (capability.blobConstructor) {\n\t\t\tbody = new global.Blob(self._body.map(function (buffer) {\n\t\t\t\treturn toArrayBuffer(buffer)\n\t\t\t}), {\n\t\t\t\ttype: (headersObj['content-type'] || {}).value || ''\n\t\t\t})\n\t\t} else {\n\t\t\t// get utf8 string\n\t\t\tbody = Buffer.concat(self._body).toString()\n\t\t}\n\t}\n\n\t// create flattened list of headers\n\tvar headersList = []\n\tObject.keys(headersObj).forEach(function (keyName) {\n\t\tvar name = headersObj[keyName].name\n\t\tvar value = headersObj[keyName].value\n\t\tif (Array.isArray(value)) {\n\t\t\tvalue.forEach(function (v) {\n\t\t\t\theadersList.push([name, v])\n\t\t\t})\n\t\t} else {\n\t\t\theadersList.push([name, value])\n\t\t}\n\t})\n\n\tif (self._mode === 'fetch') {\n\t\tvar signal = null\n\t\tvar fetchTimer = null\n\t\tif (capability.abortController) {\n\t\t\tvar controller = new AbortController()\n\t\t\tsignal = controller.signal\n\t\t\tself._fetchAbortController = controller\n\n\t\t\tif ('requestTimeout' in opts && opts.requestTimeout !== 0) {\n\t\t\t\tself._fetchTimer = global.setTimeout(function () {\n\t\t\t\t\tself.emit('requestTimeout')\n\t\t\t\t\tif (self._fetchAbortController)\n\t\t\t\t\t\tself._fetchAbortController.abort()\n\t\t\t\t}, opts.requestTimeout)\n\t\t\t}\n\t\t}\n\n\t\tglobal.fetch(self._opts.url, {\n\t\t\tmethod: self._opts.method,\n\t\t\theaders: headersList,\n\t\t\tbody: body || undefined,\n\t\t\tmode: 'cors',\n\t\t\tcredentials: opts.withCredentials ? 'include' : 'same-origin',\n\t\t\tsignal: signal\n\t\t}).then(function (response) {\n\t\t\tself._fetchResponse = response\n\t\t\tself._connect()\n\t\t}, function (reason) {\n\t\t\tglobal.clearTimeout(self._fetchTimer)\n\t\t\tif (!self._destroyed)\n\t\t\t\tself.emit('error', reason)\n\t\t})\n\t} else {\n\t\tvar xhr = self._xhr = new global.XMLHttpRequest()\n\t\ttry {\n\t\t\txhr.open(self._opts.method, self._opts.url, true)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\n\t\t// Can't set responseType on really old browsers\n\t\tif ('responseType' in xhr)\n\t\t\txhr.responseType = self._mode.split(':')[0]\n\n\t\tif ('withCredentials' in xhr)\n\t\t\txhr.withCredentials = !!opts.withCredentials\n\n\t\tif (self._mode === 'text' && 'overrideMimeType' in xhr)\n\t\t\txhr.overrideMimeType('text/plain; charset=x-user-defined')\n\n\t\tif ('requestTimeout' in opts) {\n\t\t\txhr.timeout = opts.requestTimeout\n\t\t\txhr.ontimeout = function () {\n\t\t\t\tself.emit('requestTimeout')\n\t\t\t}\n\t\t}\n\n\t\theadersList.forEach(function (header) {\n\t\t\txhr.setRequestHeader(header[0], header[1])\n\t\t})\n\n\t\tself._response = null\n\t\txhr.onreadystatechange = function () {\n\t\t\tswitch (xhr.readyState) {\n\t\t\t\tcase rStates.LOADING:\n\t\t\t\tcase rStates.DONE:\n\t\t\t\t\tself._onXHRProgress()\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\t// Necessary for streaming in Firefox, since xhr.response is ONLY defined\n\t\t// in onprogress, not in onreadystatechange with xhr.readyState = 3\n\t\tif (self._mode === 'moz-chunked-arraybuffer') {\n\t\t\txhr.onprogress = function () {\n\t\t\t\tself._onXHRProgress()\n\t\t\t}\n\t\t}\n\n\t\txhr.onerror = function () {\n\t\t\tif (self._destroyed)\n\t\t\t\treturn\n\t\t\tself.emit('error', new Error('XHR error'))\n\t\t}\n\n\t\ttry {\n\t\t\txhr.send(body)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\t}\n}\n\n/**\n * Checks if xhr.status is readable and non-zero, indicating no error.\n * Even though the spec says it should be available in readyState 3,\n * accessing it throws an exception in IE8\n */\nfunction statusValid (xhr) {\n\ttry {\n\t\tvar status = xhr.status\n\t\treturn (status !== null && status !== 0)\n\t} catch (e) {\n\t\treturn false\n\t}\n}\n\nClientRequest.prototype._onXHRProgress = function () {\n\tvar self = this\n\n\tif (!statusValid(self._xhr) || self._destroyed)\n\t\treturn\n\n\tif (!self._response)\n\t\tself._connect()\n\n\tself._response._onXHRProgress()\n}\n\nClientRequest.prototype._connect = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\n\tself._response = new IncomingMessage(self._xhr, self._fetchResponse, self._mode, self._fetchTimer)\n\tself._response.on('error', function(err) {\n\t\tself.emit('error', err)\n\t})\n\n\tself.emit('response', self._response)\n}\n\nClientRequest.prototype._write = function (chunk, encoding, cb) {\n\tvar self = this\n\n\tself._body.push(chunk)\n\tcb()\n}\n\nClientRequest.prototype.abort = ClientRequest.prototype.destroy = function () {\n\tvar self = this\n\tself._destroyed = true\n\tglobal.clearTimeout(self._fetchTimer)\n\tif (self._response)\n\t\tself._response._destroyed = true\n\tif (self._xhr)\n\t\tself._xhr.abort()\n\telse if (self._fetchAbortController)\n\t\tself._fetchAbortController.abort()\n}\n\nClientRequest.prototype.end = function (data, encoding, cb) {\n\tvar self = this\n\tif (typeof data === 'function') {\n\t\tcb = data\n\t\tdata = undefined\n\t}\n\n\tstream.Writable.prototype.end.call(self, data, encoding, cb)\n}\n\nClientRequest.prototype.flushHeaders = function () {}\nClientRequest.prototype.setTimeout = function () {}\nClientRequest.prototype.setNoDelay = function () {}\nClientRequest.prototype.setSocketKeepAlive = function () {}\n\n// Taken from http://www.w3.org/TR/XMLHttpRequest/#the-setrequestheader%28%29-method\nvar unsafeHeaders = [\n\t'accept-charset',\n\t'accept-encoding',\n\t'access-control-request-headers',\n\t'access-control-request-method',\n\t'connection',\n\t'content-length',\n\t'cookie',\n\t'cookie2',\n\t'date',\n\t'dnt',\n\t'expect',\n\t'host',\n\t'keep-alive',\n\t'origin',\n\t'referer',\n\t'te',\n\t'trailer',\n\t'transfer-encoding',\n\t'upgrade',\n\t'via'\n]\n","const url     = require('url');\nconst request = require('miniget');\n\n\n// A shared cache to keep track of html5player.js tokens.\nexports.cache = new Map();\n\n\n/**\n * Extract signature deciphering tokens from html5player file.\n *\n * @param {string} html5playerfile\n * @param {Object} options\n * @param {Function(!Error, Array.<string>)} callback\n */\nexports.getTokens = (html5playerfile, options, callback) => {\n  let key, cachedTokens;\n  const rs = /(?:html5)?player[-_]([a-zA-Z0-9\\-_]+)(?:\\.js|\\/)/\n    .exec(html5playerfile);\n  if (rs) {\n    key = rs[1];\n    cachedTokens = exports.cache.get(key);\n  } else {\n    console.warn('Could not extract html5player key:', html5playerfile);\n  }\n  if (cachedTokens) {\n    callback(null, cachedTokens);\n  } else {\n    request(html5playerfile, options.requestOptions, (err, res, body) => {\n      if (err) return callback(err);\n\n      const tokens = exports.extractActions(body);\n      if (key && (!tokens || !tokens.length)) {\n        callback(Error('Could not extract signature deciphering actions'));\n        return;\n      }\n\n      exports.cache.set(key, tokens);\n      callback(null, tokens);\n    });\n  }\n};\n\n\n/**\n * Decipher a signature based on action tokens.\n *\n * @param {Array.<string>} tokens\n * @param {string} sig\n * @return {string}\n */\nexports.decipher = (tokens, sig) => {\n  sig = sig.split('');\n  for (let i = 0, len = tokens.length; i < len; i++) {\n    let token = tokens[i], pos;\n    switch (token[0]) {\n      case 'r':\n        sig = sig.reverse();\n        break;\n      case 'w':\n        pos = ~~token.slice(1);\n        sig = swapHeadAndPosition(sig, pos);\n        break;\n      case 's':\n        pos = ~~token.slice(1);\n        sig = sig.slice(pos);\n        break;\n      case 'p':\n        pos = ~~token.slice(1);\n        sig.splice(0, pos);\n        break;\n    }\n  }\n  return sig.join('');\n};\n\n\n/**\n * Swaps the first element of an array with one of given position.\n *\n * @param {Array.<Object>} arr\n * @param {number} position\n * @return {Array.<Object>}\n */\nconst swapHeadAndPosition = (arr, position) => {\n  const first = arr[0];\n  arr[0] = arr[position % arr.length];\n  arr[position] = first;\n  return arr;\n};\n\n\nconst jsVarStr = '[a-zA-Z_\\\\$][a-zA-Z_0-9]*';\nconst jsSingleQuoteStr = `'[^'\\\\\\\\]*(:?\\\\\\\\[\\\\s\\\\S][^'\\\\\\\\]*)*'`;\nconst jsDoubleQuoteStr = `\"[^\"\\\\\\\\]*(:?\\\\\\\\[\\\\s\\\\S][^\"\\\\\\\\]*)*\"`;\nconst jsQuoteStr = `(?:${jsSingleQuoteStr}|${jsDoubleQuoteStr})`;\nconst jsKeyStr = `(?:${jsVarStr}|${jsQuoteStr})`;\nconst jsPropStr = `(?:\\\\.${jsVarStr}|\\\\[${jsQuoteStr}\\\\])`;\nconst jsEmptyStr = `(?:''|\"\")`;\nconst reverseStr = ':function\\\\(a\\\\)\\\\{' +\n  '(?:return )?a\\\\.reverse\\\\(\\\\)' +\n'\\\\}';\nconst sliceStr = ':function\\\\(a,b\\\\)\\\\{' +\n  'return a\\\\.slice\\\\(b\\\\)' +\n'\\\\}';\nconst spliceStr = ':function\\\\(a,b\\\\)\\\\{' +\n  'a\\\\.splice\\\\(0,b\\\\)' +\n'\\\\}';\nconst swapStr = ':function\\\\(a,b\\\\)\\\\{' +\n  'var c=a\\\\[0\\\\];a\\\\[0\\\\]=a\\\\[b(?:%a\\\\.length)?\\\\];a\\\\[b(?:%a\\\\.length)?\\\\]=c(?:;return a)?' +\n'\\\\}';\nconst actionsObjRegexp = new RegExp(\n  `var (${jsVarStr})=\\\\{((?:(?:` +\n    jsKeyStr + reverseStr + '|' +\n    jsKeyStr + sliceStr   + '|' +\n    jsKeyStr + spliceStr  + '|' +\n    jsKeyStr + swapStr +\n  '),?\\\\r?\\\\n?)+)\\\\};'\n);\nconst actionsFuncRegexp = new RegExp(`function(?: ${jsVarStr})?\\\\(a\\\\)\\\\{` +\n    `a=a\\\\.split\\\\(${jsEmptyStr}\\\\);\\\\s*` +\n    `((?:(?:a=)?${jsVarStr}` +\n    jsPropStr +\n    '\\\\(a,\\\\d+\\\\);)+)' +\n    `return a\\\\.join\\\\(${jsEmptyStr}\\\\)` +\n  '\\\\}'\n);\nconst reverseRegexp = new RegExp(`(?:^|,)(${jsKeyStr})${reverseStr}`, 'm');\nconst sliceRegexp   = new RegExp(`(?:^|,)(${jsKeyStr})${sliceStr}`, 'm');\nconst spliceRegexp  = new RegExp(`(?:^|,)(${jsKeyStr})${spliceStr}`, 'm');\nconst swapRegexp    = new RegExp(`(?:^|,)(${jsKeyStr})${swapStr}`, 'm');\n\n\n/**\n * Extracts the actions that should be taken to decipher a signature.\n *\n * This searches for a function that performs string manipulations on\n * the signature. We already know what the 3 possible changes to a signature\n * are in order to decipher it. There is\n *\n * * Reversing the string.\n * * Removing a number of characters from the beginning.\n * * Swapping the first character with another position.\n *\n * Note, `Array#slice()` used to be used instead of `Array#splice()`,\n * it's kept in case we encounter any older html5player files.\n *\n * After retrieving the function that does this, we can see what actions\n * it takes on a signature.\n *\n * @param {string} body\n * @return {Array.<string>}\n */\nexports.extractActions = (body) => {\n  const objResult = actionsObjRegexp.exec(body);\n  const funcResult = actionsFuncRegexp.exec(body);\n  if (!objResult || !funcResult) { return null; }\n\n  const obj      = objResult[1].replace(/\\$/g, '\\\\$');\n  const objBody  = objResult[2].replace(/\\$/g, '\\\\$');\n  const funcBody = funcResult[1].replace(/\\$/g, '\\\\$');\n\n  let result = reverseRegexp.exec(objBody);\n  const reverseKey = result && result[1]\n    .replace(/\\$/g, '\\\\$')\n    .replace(/\\$|^'|^\"|'$|\"$/g, '');\n  result = sliceRegexp.exec(objBody);\n  const sliceKey = result && result[1]\n    .replace(/\\$/g, '\\\\$')\n    .replace(/\\$|^'|^\"|'$|\"$/g, '');\n  result = spliceRegexp.exec(objBody);\n  const spliceKey = result && result[1]\n    .replace(/\\$/g, '\\\\$')\n    .replace(/\\$|^'|^\"|'$|\"$/g, '');\n  result = swapRegexp.exec(objBody);\n  const swapKey = result && result[1]\n    .replace(/\\$/g, '\\\\$')\n    .replace(/\\$|^'|^\"|'$|\"$/g, '');\n\n  const keys = `(${[reverseKey, sliceKey, spliceKey, swapKey].join('|')})`;\n  const myreg = '(?:a=)?' + obj +\n    `(?:\\\\.${keys}|\\\\['${keys}'\\\\]|\\\\[\"${keys}\"\\\\])` +\n    '\\\\(a,(\\\\d+)\\\\)';\n  const tokenizeRegexp = new RegExp(myreg, 'g');\n  const tokens = [];\n  while ((result = tokenizeRegexp.exec(funcBody)) !== null) {\n    let key = result[1] || result[2] || result[3];\n    switch (key) {\n      case swapKey:\n        tokens.push('w' + result[4]);\n        break;\n      case reverseKey:\n        tokens.push('r');\n        break;\n      case sliceKey:\n        tokens.push('s' + result[4]);\n        break;\n      case spliceKey:\n        tokens.push('p' + result[4]);\n        break;\n    }\n  }\n  return tokens;\n};\n\n\n/**\n * @param {Object} format\n * @param {string} sig\n * @param {boolean} debug\n */\nexports.setDownloadURL = (format, sig, debug) => {\n  let decodedUrl;\n  if (format.url) {\n    decodedUrl = format.url;\n  } else {\n    if (debug) {\n      console.warn('Download url not found for itag ' + format.itag);\n    }\n    return;\n  }\n\n  try {\n    decodedUrl = decodeURIComponent(decodedUrl);\n  } catch (err) {\n    if (debug) {\n      console.warn('Could not decode url: ' + err.message);\n    }\n    return;\n  }\n\n  // Make some adjustments to the final url.\n  const parsedUrl = url.parse(decodedUrl, true);\n\n  // Deleting the `search` part is necessary otherwise changes to\n  // `query` won't reflect when running `url.format()`\n  delete parsedUrl.search;\n\n  let query = parsedUrl.query;\n\n  // This is needed for a speedier download.\n  // See https://github.com/fent/node-ytdl-core/issues/127\n  query.ratebypass = 'yes';\n  if (sig) {\n    query.signature = sig;\n  }\n\n  format.url = url.format(parsedUrl);\n};\n\n\n/**\n * Applies `sig.decipher()` to all format URL's.\n *\n * @param {Array.<Object>} formats\n * @param {Array.<string>} tokens\n * @param {boolean} debug\n */\nexports.decipherFormats = (formats, tokens, debug) => {\n  formats.forEach((format) => {\n    const sig = tokens && format.s ? exports.decipher(tokens, format.s) : null;\n    exports.setDownloadURL(format, sig, debug);\n  });\n};\n","var ClientRequest = require('./lib/request')\nvar response = require('./lib/response')\nvar extend = require('xtend')\nvar statusCodes = require('builtin-status-codes')\nvar url = require('url')\n\nvar http = exports\n\nhttp.request = function (opts, cb) {\n\tif (typeof opts === 'string')\n\t\topts = url.parse(opts)\n\telse\n\t\topts = extend(opts)\n\n\t// Normally, the page is loaded from http or https, so not specifying a protocol\n\t// will result in a (valid) protocol-relative url. However, this won't work if\n\t// the protocol is something else, like 'file:'\n\tvar defaultProtocol = global.location.protocol.search(/^https?:$/) === -1 ? 'http:' : ''\n\n\tvar protocol = opts.protocol || defaultProtocol\n\tvar host = opts.hostname || opts.host\n\tvar port = opts.port\n\tvar path = opts.path || '/'\n\n\t// Necessary for IPv6 addresses\n\tif (host && host.indexOf(':') !== -1)\n\t\thost = '[' + host + ']'\n\n\t// This may be a relative url. The browser should always be able to interpret it correctly.\n\topts.url = (host ? (protocol + '//' + host) : '') + (port ? ':' + port : '') + path\n\topts.method = (opts.method || 'GET').toUpperCase()\n\topts.headers = opts.headers || {}\n\n\t// Also valid opts.auth, opts.mode\n\n\tvar req = new ClientRequest(opts)\n\tif (cb)\n\t\treq.on('response', cb)\n\treturn req\n}\n\nhttp.get = function get (opts, cb) {\n\tvar req = http.request(opts, cb)\n\treq.end()\n\treturn req\n}\n\nhttp.ClientRequest = ClientRequest\nhttp.IncomingMessage = response.IncomingMessage\n\nhttp.Agent = function () {}\nhttp.Agent.defaultMaxSockets = 4\n\nhttp.globalAgent = new http.Agent()\n\nhttp.STATUS_CODES = statusCodes\n\nhttp.METHODS = [\n\t'CHECKOUT',\n\t'CONNECT',\n\t'COPY',\n\t'DELETE',\n\t'GET',\n\t'HEAD',\n\t'LOCK',\n\t'M-SEARCH',\n\t'MERGE',\n\t'MKACTIVITY',\n\t'MKCOL',\n\t'MOVE',\n\t'NOTIFY',\n\t'OPTIONS',\n\t'PATCH',\n\t'POST',\n\t'PROPFIND',\n\t'PROPPATCH',\n\t'PURGE',\n\t'PUT',\n\t'REPORT',\n\t'SEARCH',\n\t'SUBSCRIBE',\n\t'TRACE',\n\t'UNLOCK',\n\t'UNSUBSCRIBE'\n]","const PassThrough = require('stream').PassThrough;\nconst getInfo     = require('./info');\nconst util        = require('./util');\nconst sig         = require('./sig');\nconst request     = require('miniget');\nconst m3u8stream  = require('m3u8stream');\nconst parseTime   = require('m3u8stream/lib/parse-time');\n\n\n/**\n * @param {string} link\n * @param {!Object} options\n * @return {ReadableStream}\n */\nconst ytdl = (link, options) => {\n  const stream = createStream(options);\n  ytdl.getInfo(link, options, (err, info) => {\n    if (err) {\n      stream.emit('error', err);\n      return;\n    }\n\n    downloadFromInfoCallback(stream, info, options);\n  });\n\n  return stream;\n};\nmodule.exports = ytdl;\n\nytdl.getBasicInfo = getInfo.getBasicInfo;\nytdl.getInfo = getInfo.getFullInfo;\nytdl.chooseFormat = util.chooseFormat;\nytdl.filterFormats = util.filterFormats;\nytdl.validateID = util.validateID;\nytdl.validateURL = util.validateURL;\nytdl.getURLVideoID = util.getURLVideoID;\nytdl.getVideoID = util.getVideoID;\nytdl.cache = {\n  sig: sig.cache,\n  info: getInfo.cache,\n};\n\n\nconst createStream = (options) => {\n  const stream = new PassThrough({\n    highWaterMark: options && options.highWaterMark || null,\n  });\n  stream.destroy = () => { stream._isDestroyed = true; };\n  return stream;\n};\n\n\n/**\n * Chooses a format to download.\n *\n * @param {stream.Readable} stream\n * @param {Object} info\n * @param {Object} options\n */\nconst downloadFromInfoCallback = (stream, info, options) => {\n  options = options || {};\n  const format = util.chooseFormat(info.formats, options);\n  if (format instanceof Error) {\n    // The caller expects this function to be async.\n    setImmediate(() => {\n      stream.emit('error', format);\n    });\n    return;\n  }\n  stream.emit('info', info, format);\n  if (stream._isDestroyed) { return; }\n\n  let contentLength, downloaded = 0;\n  const ondata = (chunk) => {\n    downloaded += chunk.length;\n    stream.emit('progress', chunk.length, downloaded, contentLength);\n  };\n\n  let req;\n  if (format.isHLS || format.isDashMPD) {\n    req = m3u8stream(format.url, {\n      chunkReadahead: +info.live_chunk_readahead,\n      begin: options.begin || format.live && Date.now(),\n      liveBuffer: options.liveBuffer,\n      requestOptions: options.requestOptions,\n      parser: format.isDashMPD ? 'dash-mpd' : 'm3u8',\n      id: format.itag,\n    });\n\n    req.on('progress', (segment, totalSegments) => {\n      stream.emit('progress', segment.size, segment.num, totalSegments);\n    });\n\n  } else {\n    if (options.begin) {\n      format.url += '&begin=' + parseTime.humanStr(options.begin);\n    }\n    let requestOptions = Object.assign({}, options.requestOptions, {\n      maxReconnects: 5\n    });\n    if (options.range && (options.range.start || options.range.end)) {\n      requestOptions.headers = Object.assign({}, requestOptions.headers, {\n        Range: `bytes=${options.range.start || '0'}-${options.range.end || ''}`\n      });\n    }\n\n    req = request(format.url, requestOptions);\n\n    req.on('response', (res) => {\n      if (stream._isDestroyed) { return; }\n      if (!contentLength) {\n        contentLength = parseInt(res.headers['content-length'], 10);\n      }\n    });\n    req.on('data', ondata);\n  }\n\n  stream.destroy = () => {\n    stream._isDestroyed = true;\n    if (req.abort) req.abort();\n    req.end();\n    req.removeListener('data', ondata);\n    req.unpipe();\n  };\n\n  // Forward events from the request to the stream.\n  [\n    'abort', 'request', 'response', 'error', 'retry', 'reconnect'\n  ].forEach((event) => {\n    req.prependListener(event, (arg) => {\n      stream.emit(event, arg); });\n  });\n\n  req.pipe(stream);\n};\n\n\n/**\n * Can be used to download video after its `info` is gotten through\n * `ytdl.getInfo()`. In case the user might want to look at the\n * `info` object before deciding to download.\n *\n * @param {Object} info\n * @param {!Object} options\n */\nytdl.downloadFromInfo = (info, options) => {\n  const stream = createStream(options);\n  if (!info.full) {\n    throw new Error('Cannot use `ytdl.downloadFromInfo()` when called ' +\n      'with info from `ytdl.getBasicInfo()`');\n  }\n  setImmediate(() => {\n    downloadFromInfoCallback(stream, info, options);\n  });\n  return stream;\n};\n","'use strict';\n\nif (!process.version ||\n    process.version.indexOf('v0.') === 0 ||\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = { nextTick: nextTick };\n} else {\n  module.exports = process\n}\n\nfunction nextTick(fn, arg1, arg2, arg3) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('\"callback\" argument must be a function');\n  }\n  var len = arguments.length;\n  var args, i;\n  switch (len) {\n  case 0:\n  case 1:\n    return process.nextTick(fn);\n  case 2:\n    return process.nextTick(function afterTickOne() {\n      fn.call(null, arg1);\n    });\n  case 3:\n    return process.nextTick(function afterTickTwo() {\n      fn.call(null, arg1, arg2);\n    });\n  case 4:\n    return process.nextTick(function afterTickThree() {\n      fn.call(null, arg1, arg2, arg3);\n    });\n  default:\n    args = new Array(len - 1);\n    i = 0;\n    while (i < args.length) {\n      args[i++] = arguments[i];\n    }\n    return process.nextTick(function afterTick() {\n      fn.apply(null, args);\n    });\n  }\n}\n\n","exports.fetch = isFunction(global.fetch) && isFunction(global.ReadableStream)\n\nexports.writableStream = isFunction(global.WritableStream)\n\nexports.abortController = isFunction(global.AbortController)\n\nexports.blobConstructor = false\ntry {\n\tnew Blob([new ArrayBuffer(1)])\n\texports.blobConstructor = true\n} catch (e) {}\n\n// The xhr request to example.com may violate some restrictive CSP configurations,\n// so if we're running in a browser that supports `fetch`, avoid calling getXHR()\n// and assume support for certain features below.\nvar xhr\nfunction getXHR () {\n\t// Cache the xhr value\n\tif (xhr !== undefined) return xhr\n\n\tif (global.XMLHttpRequest) {\n\t\txhr = new global.XMLHttpRequest()\n\t\t// If XDomainRequest is available (ie only, where xhr might not work\n\t\t// cross domain), use the page location. Otherwise use example.com\n\t\t// Note: this doesn't actually make an http request.\n\t\ttry {\n\t\t\txhr.open('GET', global.XDomainRequest ? '/' : 'https://example.com')\n\t\t} catch(e) {\n\t\t\txhr = null\n\t\t}\n\t} else {\n\t\t// Service workers don't have XHR\n\t\txhr = null\n\t}\n\treturn xhr\n}\n\nfunction checkTypeSupport (type) {\n\tvar xhr = getXHR()\n\tif (!xhr) return false\n\ttry {\n\t\txhr.responseType = type\n\t\treturn xhr.responseType === type\n\t} catch (e) {}\n\treturn false\n}\n\n// For some strange reason, Safari 7.0 reports typeof global.ArrayBuffer === 'object'.\n// Safari 7.1 appears to have fixed this bug.\nvar haveArrayBuffer = typeof global.ArrayBuffer !== 'undefined'\nvar haveSlice = haveArrayBuffer && isFunction(global.ArrayBuffer.prototype.slice)\n\n// If fetch is supported, then arraybuffer will be supported too. Skip calling\n// checkTypeSupport(), since that calls getXHR().\nexports.arraybuffer = exports.fetch || (haveArrayBuffer && checkTypeSupport('arraybuffer'))\n\n// These next two tests unavoidably show warnings in Chrome. Since fetch will always\n// be used if it's available, just return false for these to avoid the warnings.\nexports.msstream = !exports.fetch && haveSlice && checkTypeSupport('ms-stream')\nexports.mozchunkedarraybuffer = !exports.fetch && haveArrayBuffer &&\n\tcheckTypeSupport('moz-chunked-arraybuffer')\n\n// If fetch is supported, then overrideMimeType will be supported too. Skip calling\n// getXHR().\nexports.overrideMimeType = exports.fetch || (getXHR() ? isFunction(getXHR().overrideMimeType) : false)\n\nexports.vbArray = isFunction(global.VBArray)\n\nfunction isFunction (value) {\n\treturn typeof value === 'function'\n}\n\nxhr = null // Help gc\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/BufferList');\nvar destroyImpl = require('./internal/streams/destroy');\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var readableHwm = options.readableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  this.push(null);\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      stream.emit('error', er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        stream.emit('error', new Error('stream.push() after EOF'));\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n    }\n  }\n\n  return needMoreData(state);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    stream.emit('data', chunk);\n    stream.read(0);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    pna.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = { hasUnpiped: false };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, unpipeInfo);\n    }return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this, unpipeInfo);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        pna.nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    pna.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._readableState.highWaterMark;\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    pna.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}","const PassThrough   = require('stream').PassThrough;\nconst urlResolve    = require('url').resolve;\nconst miniget       = require('miniget');\nconst m3u8Parser    = require('./m3u8-parser');\nconst DashMPDParser = require('./dash-mpd-parser');\nconst Queue         = require('./queue');\nconst parseTime     = require('./parse-time');\n\n\n/**\n * @param {string} playlistURL\n * @param {Object} options\n * @return {stream.Readable}\n */\nmodule.exports = (playlistURL, options) => {\n  const stream = new PassThrough();\n  options = options || {};\n  const chunkReadahead = options.chunkReadahead || 3;\n  const liveBuffer = options.liveBuffer || 20000; // 20 seconds\n  const requestOptions = options.requestOptions;\n  const Parser = {\n    'm3u8': m3u8Parser,\n    'dash-mpd': DashMPDParser,\n  }[options.parser || (/\\.mpd$/.test(playlistURL) ? 'dash-mpd' : 'm3u8')];\n  if (!Parser) {\n    throw TypeError(`parser '${options.parser}' not supported`);\n  }\n  let relativeBegin = typeof options.begin === 'string';\n  let begin = relativeBegin ?\n    parseTime.humanStr(options.begin) :\n    Math.max(options.begin - liveBuffer, 0) || 0;\n  let liveBegin = Date.now() - liveBuffer;\n\n  let currSegment;\n  const streamQueue = new Queue((req, callback) => {\n    currSegment = req;\n    // Count the size manually, since the `content-length` header is not\n    // always there.\n    let size = 0;\n    req.on('data', (chunk) => size += chunk.length);\n    req.pipe(stream, { end: false });\n    req.on('end', () => callback(size));\n  }, { concurrency: 1 });\n\n  let segmentNumber = 0;\n  let downloaded = 0;\n  const requestQueue = new Queue((segment, callback) => {\n    let req = miniget(urlResolve(playlistURL, segment.url), requestOptions);\n    req.on('error', callback);\n    streamQueue.push(req, (size) => {\n      downloaded += size;\n      stream.emit('progress', {\n        num: ++segmentNumber,\n        size: size,\n        url: segment.url,\n        duration: segment.duration,\n      }, requestQueue.total, downloaded);\n      callback();\n    });\n  }, { concurrency: chunkReadahead });\n\n  const onError = (err) => {\n    if (ended) { return; }\n    stream.emit('error', err);\n    // Stop on any error.\n    stream.end();\n  };\n\n  // When to look for items again.\n  let refreshThreshold;\n  let minRefreshTime;\n  let refreshTimeout;\n  let fetchingPlaylist = false;\n  let ended = false;\n  let isStatic = false;\n  let lastRefresh;\n\n  const onQueuedEnd = (err) => {\n    currSegment = null;\n    if (err) {\n      onError(err);\n    } else if (!fetchingPlaylist && !ended && !isStatic &&\n      requestQueue.tasks.length + requestQueue.active === refreshThreshold) {\n      let ms = Math.max(0, minRefreshTime - (Date.now() - lastRefresh));\n      refreshTimeout = setTimeout(refreshPlaylist, ms);\n    } else if ((ended || isStatic) &&\n      !requestQueue.tasks.length && !requestQueue.active) {\n      stream.end();\n    }\n  };\n\n  let currPlaylist;\n  let lastSeq;\n  const refreshPlaylist = () => {\n    fetchingPlaylist = true;\n    lastRefresh = Date.now();\n    currPlaylist = miniget(playlistURL, requestOptions);\n    currPlaylist.on('error', onError);\n    const parser = currPlaylist.pipe(new Parser(options.id));\n    let starttime = null;\n    parser.on('starttime', (a) => {\n      starttime = a;\n      if (relativeBegin && begin >= 0) {\n        begin += starttime;\n      }\n    });\n    parser.on('endlist', () => { isStatic = true; });\n    parser.on('endearly', () => { currPlaylist.unpipe(parser); });\n\n    let addedItems = [];\n    let liveAddedItems = [];\n    const addItem = (item, isLive) => {\n      if (item.seq <= lastSeq) { return; }\n      lastSeq = item.seq;\n      begin = item.time;\n      requestQueue.push(item, onQueuedEnd);\n      addedItems.push(item);\n      if (isLive) {\n        liveAddedItems.push(item);\n      }\n    };\n\n    let tailedItems = [], tailedItemsDuration = 0;\n    parser.on('item', (item) => {\n      item.time = starttime;\n      if (!starttime || begin <= item.time) {\n        addItem(item, liveBegin <= item.time);\n      } else {\n        tailedItems.push(item);\n        tailedItemsDuration += item.duration;\n        // Only keep the last `liveBuffer` of items.\n        while (tailedItems.length > 1 &&\n          tailedItemsDuration - tailedItems[0].duration > liveBuffer) {\n          tailedItemsDuration -= tailedItems.shift().duration;\n        }\n      }\n      starttime += item.duration;\n    });\n\n    parser.on('end', () => {\n      currPlaylist = null;\n      // If we are too ahead of the stream, make sure to get the\n      // latest available items with a small buffer.\n      if (!addedItems.length && tailedItems.length) {\n        tailedItems.forEach((item) => { addItem(item, true); });\n      }\n\n      // Refresh the playlist when remaining segments get low.\n      refreshThreshold = Math.max(1, Math.ceil(addedItems.length * 0.01));\n\n      // Throttle refreshing the playlist by looking at the duration\n      // of live items added on this refresh.\n      minRefreshTime =\n        addedItems.reduce(((total, item) => item.duration + total), 0);\n\n      fetchingPlaylist = false;\n    });\n  };\n  refreshPlaylist();\n\n  stream.end = () => {\n    ended = true;\n    streamQueue.die();\n    requestQueue.die();\n    clearTimeout(refreshTimeout);\n    if (currPlaylist) {\n      currPlaylist.unpipe();\n      currPlaylist.abort();\n    }\n    if (currSegment) {\n      currSegment.unpipe();\n      currSegment.abort();\n    }\n    PassThrough.prototype.end.call(stream);\n  };\n\n  return stream;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\n{\n  // avoid scope creep, the keys array can then be collected\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  pna.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n\nDuplex.prototype._destroy = function (err, cb) {\n  this.push(null);\n  this.end();\n\n  pna.nextTick(cb, err);\n};","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"home\"},[_c('YoutubeComp')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"hello\"},[_c('form',{attrs:{\"action\":\"\"}},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"input-group mb-3 col-lg\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.path),expression:\"path\"}],staticClass:\"form-control\",attrs:{\"type\":\"text\",\"placeholder\":\"Save Path\",\"aria-label\":\"Save Path\",\"aria-describedby\":\"basic-addon1\",\"disabled\":\"\"},domProps:{\"value\":(_vm.path)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.path=$event.target.value}}}),_c('div',{staticClass:\"input-group-append\"},[_c('button',{staticClass:\"btn btn-outline-secondary\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.savePath}},[_vm._v(\"Set path\")])])]),_c('div',{staticClass:\"input-group mb-3 col-lg\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.videoSearch),expression:\"videoSearch\"}],staticClass:\"form-control\",attrs:{\"type\":\"text\",\"placeholder\":\"Video URL\",\"aria-label\":\"Video URL\",\"aria-describedby\":\"basic-addon1\"},domProps:{\"value\":(_vm.videoSearch)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.videoSearch=$event.target.value}}}),_c('div',{staticClass:\"input-group-append\"},[_c('button',{staticClass:\"btn btn-outline-secondary\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.searchVideo}},[_vm._v(\"Search\")])])])])]),_c('div',{staticClass:\"row\"},_vm._l((_vm.videoList),function(video){return _c('div',{key:video.title,staticClass:\"card video col-12 col-sm-6 col-md-4 col-lg-2\"},[_c('div',{staticClass:\"close\",on:{\"click\":function($event){return _vm.removeVideo(video.title)}}},[_c('i',{staticClass:\"fa fa-trash\",attrs:{\"aria-hidden\":\"true\"}})]),_c('img',{staticClass:\"card-img-top\",attrs:{\"src\":video.thumbnail_url,\"alt\":\"Card image cap\"}}),_c('div',{staticClass:\"card-body\"},[_c('p',{staticClass:\"card-title cut-text\"},[_vm._v(_vm._s(video.title))]),_c('p',{staticClass:\"card-text cut-text\"},[_vm._v(_vm._s(video.description))]),_c('div',{staticClass:\"text-center\"},[_c('button',{staticClass:\"btn btn-primary\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.downloadVideo(video.title)}}},[_vm._v(\"Download\")])])])])}),0)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n<div class=\"hello\">\r\n    <form action=\"\">\r\n        <div class=\"row\">\r\n            <div class=\"input-group mb-3 col-lg\">\r\n                <input type=\"text\" v-model=\"path\" class=\"form-control\" placeholder=\"Save Path\" aria-label=\"Save Path\" aria-describedby=\"basic-addon1\" disabled>\r\n                <div class=\"input-group-append\">\r\n                    <button v-on:click=\"savePath\" class=\"btn btn-outline-secondary\" type=\"button\">Set path</button>\r\n                </div>\r\n            </div>\r\n            <div class=\"input-group mb-3 col-lg\">\r\n                <input type=\"text\" v-model=\"videoSearch\" class=\"form-control\" placeholder=\"Video URL\" aria-label=\"Video URL\" aria-describedby=\"basic-addon1\">\r\n                <div class=\"input-group-append\">\r\n                    <button v-on:click=\"searchVideo\" class=\"btn btn-outline-secondary\" type=\"button\">Search</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </form>\r\n    <div class=\"row\">\r\n        <div class=\"card video col-12 col-sm-6 col-md-4 col-lg-2\" v-for=\"video in videoList\" :key=\"video.title\">\r\n            <div class=\"close\" v-on:click=\"removeVideo(video.title)\"><i class=\"fa fa-trash\" aria-hidden=\"true\"></i></div>\r\n            <img class=\"card-img-top\" :src=\"video.thumbnail_url\" alt=\"Card image cap\">\r\n            <div class=\"card-body\">\r\n                <p class=\"card-title cut-text\">{{video.title}}</p>\r\n                <p class=\"card-text cut-text\">{{video.description}}</p>\r\n                <div class=\"text-center\">\r\n                    <button class=\"btn btn-primary\" v-on:click=\"downloadVideo(video.title)\" type=\"button\">Download</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport * as ytdl from \"ytdl-core\";\r\n\r\nexport default {\r\n    name: 'HelloWorld',\r\n    props: {},\r\n    data: function () {\r\n        return {\r\n            videoList: [],\r\n            videoSearch: \"\",\r\n            path: \"\"\r\n        }\r\n    },\r\n    methods: {\r\n        searchVideo: function () {\r\n            if (this.videoSearch) {\r\n                ytdl.getBasicInfo(this.videoSearch, (err, info) => {\r\n                    if (err) {\r\n                        console.error(err);\r\n                    } else {\r\n                        this.videoList.unshift(info);\r\n                        console.log(info);\r\n                    }\r\n                });\r\n            }\r\n        },\r\n        removeVideo: function (title) {\r\n            const index = this.videoList.findIndex(video => video.title === title);\r\n            if (index > -1) {\r\n                this.videoList.splice(index, 1);\r\n            }\r\n        },\r\n        getVideoByTitle: function (title) {\r\n            return this.videoList.find(video => video.title === title);\r\n        },\r\n        downloadVideo: function (title) {\r\n            const video = this.getVideoByTitle(title);\r\n        },\r\n        savePath: function () {\r\n            window.electron.dialog.showOpenDialog({\r\n                properties: [\"openDirectory\"]\r\n            }).then(response => {\r\n                console.log(response);\r\n            }).catch(err => console.error(err));\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n\r\n<style scoped>\r\n.video {\r\n    position: relative;\r\n    padding: 0px;\r\n    padding-left: 2px;\r\n    padding-right: 2px;\r\n}\r\n.close {\r\n    position: absolute;\r\n    color: red;\r\n    right: 20px;\r\n    top: 20px;\r\n    z-index: 1;\r\n    cursor: pointer;\r\n}\r\n.cut-text {\r\n    text-overflow: ellipsis;\r\n    overflow: hidden; \r\n    height: 1.2em; \r\n    white-space: nowrap;\r\n}\r\nh3 {\r\n    margin: 40px 0 0;\r\n}\r\n\r\nul {\r\n    list-style-type: none;\r\n    padding: 0;\r\n}\r\n\r\nli {\r\n    display: inline-block;\r\n    margin: 0 10px;\r\n}\r\n\r\na {\r\n    color: #42b983;\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./YoutubeComp.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./YoutubeComp.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./YoutubeComp.vue?vue&type=template&id=fc8a5838&scoped=true&\"\nimport script from \"./YoutubeComp.vue?vue&type=script&lang=js&\"\nexport * from \"./YoutubeComp.vue?vue&type=script&lang=js&\"\nimport style0 from \"./YoutubeComp.vue?vue&type=style&index=0&id=fc8a5838&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"fc8a5838\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div class=\"home\">\n    <YoutubeComp/>\n  </div>\n</template>\n\n<script>\n// @ is an alias to /src\nimport YoutubeComp from '@/components/YoutubeComp.vue'\n\nexport default {\n  name: 'youtube',\n  components: {\n    YoutubeComp\n  }\n}\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Youtube.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Youtube.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Youtube.vue?vue&type=template&id=3093d13c&\"\nimport script from \"./Youtube.vue?vue&type=script&lang=js&\"\nexport * from \"./Youtube.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./YoutubeComp.vue?vue&type=style&index=0&id=fc8a5838&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./YoutubeComp.vue?vue&type=style&index=0&id=fc8a5838&scoped=true&lang=css&\"","module.exports = require('./readable').PassThrough\n","var capability = require('./capability')\nvar inherits = require('inherits')\nvar stream = require('readable-stream')\n\nvar rStates = exports.readyStates = {\n\tUNSENT: 0,\n\tOPENED: 1,\n\tHEADERS_RECEIVED: 2,\n\tLOADING: 3,\n\tDONE: 4\n}\n\nvar IncomingMessage = exports.IncomingMessage = function (xhr, response, mode, fetchTimer) {\n\tvar self = this\n\tstream.Readable.call(self)\n\n\tself._mode = mode\n\tself.headers = {}\n\tself.rawHeaders = []\n\tself.trailers = {}\n\tself.rawTrailers = []\n\n\t// Fake the 'close' event, but only once 'end' fires\n\tself.on('end', function () {\n\t\t// The nextTick is necessary to prevent the 'request' module from causing an infinite loop\n\t\tprocess.nextTick(function () {\n\t\t\tself.emit('close')\n\t\t})\n\t})\n\n\tif (mode === 'fetch') {\n\t\tself._fetchResponse = response\n\n\t\tself.url = response.url\n\t\tself.statusCode = response.status\n\t\tself.statusMessage = response.statusText\n\t\t\n\t\tresponse.headers.forEach(function (header, key){\n\t\t\tself.headers[key.toLowerCase()] = header\n\t\t\tself.rawHeaders.push(key, header)\n\t\t})\n\n\t\tif (capability.writableStream) {\n\t\t\tvar writable = new WritableStream({\n\t\t\t\twrite: function (chunk) {\n\t\t\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t\t\tif (self._destroyed) {\n\t\t\t\t\t\t\treject()\n\t\t\t\t\t\t} else if(self.push(new Buffer(chunk))) {\n\t\t\t\t\t\t\tresolve()\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tself._resumeFetch = resolve\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t\tclose: function () {\n\t\t\t\t\tglobal.clearTimeout(fetchTimer)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.push(null)\n\t\t\t\t},\n\t\t\t\tabort: function (err) {\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t}\n\t\t\t})\n\n\t\t\ttry {\n\t\t\t\tresponse.body.pipeTo(writable).catch(function (err) {\n\t\t\t\t\tglobal.clearTimeout(fetchTimer)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t} catch (e) {} // pipeTo method isn't defined. Can't find a better way to feature test this\n\t\t}\n\t\t// fallback for when writableStream or pipeTo aren't available\n\t\tvar reader = response.body.getReader()\n\t\tfunction read () {\n\t\t\treader.read().then(function (result) {\n\t\t\t\tif (self._destroyed)\n\t\t\t\t\treturn\n\t\t\t\tif (result.done) {\n\t\t\t\t\tglobal.clearTimeout(fetchTimer)\n\t\t\t\t\tself.push(null)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tself.push(new Buffer(result.value))\n\t\t\t\tread()\n\t\t\t}).catch(function (err) {\n\t\t\t\tglobal.clearTimeout(fetchTimer)\n\t\t\t\tif (!self._destroyed)\n\t\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t}\n\t\tread()\n\t} else {\n\t\tself._xhr = xhr\n\t\tself._pos = 0\n\n\t\tself.url = xhr.responseURL\n\t\tself.statusCode = xhr.status\n\t\tself.statusMessage = xhr.statusText\n\t\tvar headers = xhr.getAllResponseHeaders().split(/\\r?\\n/)\n\t\theaders.forEach(function (header) {\n\t\t\tvar matches = header.match(/^([^:]+):\\s*(.*)/)\n\t\t\tif (matches) {\n\t\t\t\tvar key = matches[1].toLowerCase()\n\t\t\t\tif (key === 'set-cookie') {\n\t\t\t\t\tif (self.headers[key] === undefined) {\n\t\t\t\t\t\tself.headers[key] = []\n\t\t\t\t\t}\n\t\t\t\t\tself.headers[key].push(matches[2])\n\t\t\t\t} else if (self.headers[key] !== undefined) {\n\t\t\t\t\tself.headers[key] += ', ' + matches[2]\n\t\t\t\t} else {\n\t\t\t\t\tself.headers[key] = matches[2]\n\t\t\t\t}\n\t\t\t\tself.rawHeaders.push(matches[1], matches[2])\n\t\t\t}\n\t\t})\n\n\t\tself._charset = 'x-user-defined'\n\t\tif (!capability.overrideMimeType) {\n\t\t\tvar mimeType = self.rawHeaders['mime-type']\n\t\t\tif (mimeType) {\n\t\t\t\tvar charsetMatch = mimeType.match(/;\\s*charset=([^;])(;|$)/)\n\t\t\t\tif (charsetMatch) {\n\t\t\t\t\tself._charset = charsetMatch[1].toLowerCase()\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!self._charset)\n\t\t\t\tself._charset = 'utf-8' // best guess\n\t\t}\n\t}\n}\n\ninherits(IncomingMessage, stream.Readable)\n\nIncomingMessage.prototype._read = function () {\n\tvar self = this\n\n\tvar resolve = self._resumeFetch\n\tif (resolve) {\n\t\tself._resumeFetch = null\n\t\tresolve()\n\t}\n}\n\nIncomingMessage.prototype._onXHRProgress = function () {\n\tvar self = this\n\n\tvar xhr = self._xhr\n\n\tvar response = null\n\tswitch (self._mode) {\n\t\tcase 'text:vbarray': // For IE9\n\t\t\tif (xhr.readyState !== rStates.DONE)\n\t\t\t\tbreak\n\t\t\ttry {\n\t\t\t\t// This fails in IE8\n\t\t\t\tresponse = new global.VBArray(xhr.responseBody).toArray()\n\t\t\t} catch (e) {}\n\t\t\tif (response !== null) {\n\t\t\t\tself.push(new Buffer(response))\n\t\t\t\tbreak\n\t\t\t}\n\t\t\t// Falls through in IE8\t\n\t\tcase 'text':\n\t\t\ttry { // This will fail when readyState = 3 in IE9. Switch mode and wait for readyState = 4\n\t\t\t\tresponse = xhr.responseText\n\t\t\t} catch (e) {\n\t\t\t\tself._mode = 'text:vbarray'\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tif (response.length > self._pos) {\n\t\t\t\tvar newData = response.substr(self._pos)\n\t\t\t\tif (self._charset === 'x-user-defined') {\n\t\t\t\t\tvar buffer = new Buffer(newData.length)\n\t\t\t\t\tfor (var i = 0; i < newData.length; i++)\n\t\t\t\t\t\tbuffer[i] = newData.charCodeAt(i) & 0xff\n\n\t\t\t\t\tself.push(buffer)\n\t\t\t\t} else {\n\t\t\t\t\tself.push(newData, self._charset)\n\t\t\t\t}\n\t\t\t\tself._pos = response.length\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'arraybuffer':\n\t\t\tif (xhr.readyState !== rStates.DONE || !xhr.response)\n\t\t\t\tbreak\n\t\t\tresponse = xhr.response\n\t\t\tself.push(new Buffer(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'moz-chunked-arraybuffer': // take whole\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING || !response)\n\t\t\t\tbreak\n\t\t\tself.push(new Buffer(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'ms-stream':\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING)\n\t\t\t\tbreak\n\t\t\tvar reader = new global.MSStreamReader()\n\t\t\treader.onprogress = function () {\n\t\t\t\tif (reader.result.byteLength > self._pos) {\n\t\t\t\t\tself.push(new Buffer(new Uint8Array(reader.result.slice(self._pos))))\n\t\t\t\t\tself._pos = reader.result.byteLength\n\t\t\t\t}\n\t\t\t}\n\t\t\treader.onload = function () {\n\t\t\t\tself.push(null)\n\t\t\t}\n\t\t\t// reader.onerror = ??? // TODO: this\n\t\t\treader.readAsArrayBuffer(response)\n\t\t\tbreak\n\t}\n\n\t// The ms-stream case handles end separately in reader.onload()\n\tif (self._xhr.readyState === rStates.DONE && self._mode !== 'ms-stream') {\n\t\tself.push(null)\n\t}\n}\n","// 9.4.2.3 ArraySpeciesCreate(originalArray, length)\nvar speciesConstructor = require('./_array-species-constructor');\n\nmodule.exports = function (original, length) {\n  return new (speciesConstructor(original))(length);\n};\n","const Writable  = require('stream').Writable;\nconst sax       = require('sax');\nconst parseTime = require('./parse-time');\n\n\n/**\n * A wrapper around sax that emits segments.\n *\n * @extends WRitableStream\n * @constructor\n */\nmodule.exports = class DashMPDParser extends Writable {\n  constructor(targetID) {\n    super();\n    this._parser = sax.createStream(false, { lowercasetags: true });\n    this._parser.on('error', this.emit.bind(this, 'error'));\n\n    let lastTag;\n    let currtime = 0;\n    let seq = 0;\n    let segmentTemplate;\n    let timescale, offset, duration, baseURL;\n    let timeline = [];\n    let getSegments = false;\n    let isStatic;\n    let treeLevel;\n    let periodStart;\n\n    const tmpl = (str) => {\n      const context = {\n        RepresentationID: targetID,\n        Number: seq,\n        Time: currtime,\n      };\n      return str.replace(/\\$(\\w+)\\$/g, (m, p1) => context[p1]);\n    };\n\n    this._parser.on('opentag', (node) => {\n      switch (node.name) {\n        case 'mpd':\n          currtime =\n            new Date(node.attributes.availabilitystarttime).getTime();\n          isStatic = node.attributes.type !== 'dynamic';\n          break;\n        case 'period':\n          // Reset everything on <Period> tag.\n          seq = 0;\n          timescale = 1000;\n          duration = 0;\n          offset = 0;\n          baseURL = [];\n          treeLevel = 0;\n          periodStart = parseTime.durationStr(node.attributes.start) || 0;\n          break;\n        case 'segmentlist':\n          seq = parseInt(node.attributes.startnumber) || seq;\n          timescale = parseInt(node.attributes.timescale) || timescale;\n          duration = parseInt(node.attributes.duration) || duration;\n          offset = parseInt(node.attributes.presentationtimeoffset) || offset;\n          break;\n        case 'segmenttemplate':\n          segmentTemplate = node.attributes;\n          seq = parseInt(node.attributes.startnumber) || seq;\n          timescale = parseInt(node.attributes.timescale) || timescale;\n          break;\n        case 'segmenttimeline':\n        case 'baseurl':\n          lastTag = node.name;\n          break;\n        case 's':\n          timeline.push([\n            parseInt(node.attributes.d),\n            parseInt(node.attributes.r)\n          ]);\n          break;\n        case 'adaptationset':\n        case 'representation':\n          treeLevel++;\n          if (targetID == null) {\n            targetID = node.attributes.id;\n          }\n          getSegments = node.attributes.id === targetID + '';\n          if (getSegments) {\n            if (periodStart) {\n              currtime += periodStart;\n            }\n            if (offset) {\n              currtime -= offset / timescale * 1000;\n            }\n            this.emit('starttime', currtime);\n          }\n          if (getSegments && segmentTemplate && timeline.length) {\n            if (segmentTemplate.initialization) {\n              this.emit('item', {\n                url: baseURL.filter(s => !!s).join('') +\n                  tmpl(segmentTemplate.initialization),\n                seq: seq - 1,\n                duration: 0,\n              });\n            }\n            for (let [duration, repeat] of timeline) {\n              duration = duration / timescale * 1000;\n              repeat = repeat || 1;\n              for (let i = 0; i < repeat; i++) {\n                this.emit('item', {\n                  url: baseURL.filter(s => !!s).join('') +\n                    tmpl(segmentTemplate.media),\n                  seq: seq++,\n                  duration,\n                });\n                currtime += duration;\n              }\n            }\n          }\n          break;\n        case 'initialization':\n          if (getSegments) {\n            this.emit('item', {\n              url: baseURL.filter(s => !!s).join('') + node.attributes.sourceurl,\n              seq: seq++,\n              duration: 0,\n            });\n          }\n          break;\n        case 'segmenturl':\n          if (getSegments) {\n            let tl = timeline.shift();\n            let segmentDuration = (tl && tl[0] || duration) / timescale * 1000;\n            this.emit('item', {\n              url: baseURL.filter(s => !!s).join('') + node.attributes.media,\n              seq: seq++,\n              duration: segmentDuration,\n            });\n            currtime += segmentDuration;\n          }\n          break;\n      }\n    });\n    \n    const onEnd = () => {\n      if (isStatic) { this.emit('endlist'); }\n      if (!getSegments) {\n        this.emit('error', Error(`Representation '${targetID}' not found`));\n      }\n      this.emit('end');\n    };\n\n    this._parser.on('closetag', (tagName) => {\n      switch (tagName) {\n        case 'adaptationset':\n        case 'representation':\n          treeLevel--;\n          break;\n        case 'segmentlist':\n          if (getSegments) {\n            this.emit('endearly');\n            onEnd();\n            this._parser.removeAllListeners();\n          }\n          break;\n      }\n    });\n\n    this._parser.on('text', (text) => {\n      if (lastTag === 'baseurl') {\n        baseURL[treeLevel] = text;\n        lastTag = null;\n      }\n    });\n\n    this.on('finish', onEnd);\n  }\n\n  _write(chunk, encoding, callback) {\n    this._parser.write(chunk, encoding);\n    callback();\n  }\n};\n","module.exports = require('./readable').Transform\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = require('events').EventEmitter;\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/readable.js');\nStream.Writable = require('readable-stream/writable.js');\nStream.Duplex = require('readable-stream/duplex.js');\nStream.Transform = require('readable-stream/transform.js');\nStream.PassThrough = require('readable-stream/passthrough.js');\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n","var Buffer = require('buffer').Buffer\n\nmodule.exports = function (buf) {\n\t// If the buffer is backed by a Uint8Array, a faster version will work\n\tif (buf instanceof Uint8Array) {\n\t\t// If the buffer isn't a subarray, return the underlying ArrayBuffer\n\t\tif (buf.byteOffset === 0 && buf.byteLength === buf.buffer.byteLength) {\n\t\t\treturn buf.buffer\n\t\t} else if (typeof buf.buffer.slice === 'function') {\n\t\t\t// Otherwise we need to get a proper copy\n\t\t\treturn buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength)\n\t\t}\n\t}\n\n\tif (Buffer.isBuffer(buf)) {\n\t\t// This is the slow version that will work with any Buffer\n\t\t// implementation (even in old browsers)\n\t\tvar arrayCopy = new Uint8Array(buf.length)\n\t\tvar len = buf.length\n\t\tfor (var i = 0; i < len; i++) {\n\t\t\tarrayCopy[i] = buf[i]\n\t\t}\n\t\treturn arrayCopy.buffer\n\t} else {\n\t\tthrow new Error('Argument must be a Buffer')\n\t}\n}\n","module.exports = class Queue {\n  /**\n   * A really simple queue with concurrency.\n   *\n   * @param {Function(Object, Function)} worker\n   * @param {Object} options\n   */\n  constructor(worker, options) {\n    this._worker = worker;\n    options = options || {};\n    this._concurrency = options.concurrency || 1;\n    this.tasks = [];\n    this.total = 0;\n    this.active = 0;\n  }\n\n\n  /**\n   * Push a task to the queue.\n   *\n   * @param {Object} item\n   * @param {Function(Error)} callback\n   */\n  push(item, callback) {\n    this.tasks.push({ item, callback });\n    this.total++;\n    this._next();\n  }\n\n\n  /**\n   * Process next job in queue.\n   */\n  _next() {\n    if (this.active >= this._concurrency || !this.tasks.length) { return; }\n    const { item, callback } = this.tasks.shift();\n    let callbackCalled = false;\n    this.active++;\n    this._worker(item, (err) => {\n      if (callbackCalled) { return; }\n      this.active--;\n      callbackCalled = true;\n      if (callback) { callback(err); }\n      this._next();\n    });\n  }\n\n\n  /**\n   * Stops processing queued jobs.\n   */\n  die() {\n    this.tasks = [];\n  }\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var writableHwm = options.writableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function (object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function (object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n    return new Writable(options);\n  }\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  pna.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    pna.nextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    pna.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    pna.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('_write() is not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      stream.emit('error', err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function') {\n      state.pendingcb++;\n      state.finalCalled = true;\n      pna.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n  if (state.corkedRequestsFree) {\n    state.corkedRequestsFree.next = corkReq;\n  } else {\n    state.corkedRequestsFree = corkReq;\n  }\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  get: function () {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\n\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  this.end();\n  cb(err);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n","/**\n * http://en.wikipedia.org/wiki/YouTube#Quality_and_formats\n */\nmodule.exports = {\n\n  '5': {\n    container: 'flv',\n    resolution: '240p',\n    encoding: 'Sorenson H.283',\n    profile: null,\n    bitrate: '0.25',\n    audioEncoding: 'mp3',\n    audioBitrate: 64,\n  },\n\n  '6': {\n    container: 'flv',\n    resolution: '270p',\n    encoding: 'Sorenson H.263',\n    profile: null,\n    bitrate: '0.8',\n    audioEncoding: 'mp3',\n    audioBitrate: 64,\n  },\n\n  '13': {\n    container: '3gp',\n    resolution: null,\n    encoding: 'MPEG-4 Visual',\n    profile: null,\n    bitrate: '0.5',\n    audioEncoding: 'aac',\n    audioBitrate: null,\n  },\n\n  '17': {\n    container: '3gp',\n    resolution: '144p',\n    encoding: 'MPEG-4 Visual',\n    profile: 'simple',\n    bitrate: '0.05',\n    audioEncoding: 'aac',\n    audioBitrate: 24,\n  },\n\n  '18': {\n    container: 'mp4',\n    resolution: '360p',\n    encoding: 'H.264',\n    profile: 'baseline',\n    bitrate: '0.5',\n    audioEncoding: 'aac',\n    audioBitrate: 96,\n  },\n\n  '22': {\n    container: 'mp4',\n    resolution: '720p',\n    encoding: 'H.264',\n    profile: 'high',\n    bitrate: '2-3',\n    audioEncoding: 'aac',\n    audioBitrate: 192,\n  },\n\n  '34': {\n    container: 'flv',\n    resolution: '360p',\n    encoding: 'H.264',\n    profile: 'main',\n    bitrate: '0.5',\n    audioEncoding: 'aac',\n    audioBitrate: 128,\n  },\n\n  '35': {\n    container: 'flv',\n    resolution: '480p',\n    encoding: 'H.264',\n    profile: 'main',\n    bitrate: '0.8-1',\n    audioEncoding: 'aac',\n    audioBitrate: 128,\n  },\n\n  '36': {\n    container: '3gp',\n    resolution: '240p',\n    encoding: 'MPEG-4 Visual',\n    profile: 'simple',\n    bitrate: '0.175',\n    audioEncoding: 'aac',\n    audioBitrate: 32,\n  },\n\n  '37': {\n    container: 'mp4',\n    resolution: '1080p',\n    encoding: 'H.264',\n    profile: 'high',\n    bitrate: '3-5.9',\n    audioEncoding: 'aac',\n    audioBitrate: 192,\n  },\n\n  '38': {\n    container: 'mp4',\n    resolution: '3072p',\n    encoding: 'H.264',\n    profile: 'high',\n    bitrate: '3.5-5',\n    audioEncoding: 'aac',\n    audioBitrate: 192,\n  },\n\n  '43': {\n    container: 'webm',\n    resolution: '360p',\n    encoding: 'VP8',\n    profile: null,\n    bitrate: '0.5-0.75',\n    audioEncoding: 'vorbis',\n    audioBitrate: 128,\n  },\n\n  '44': {\n    container: 'webm',\n    resolution: '480p',\n    encoding: 'VP8',\n    profile: null,\n    bitrate: '1',\n    audioEncoding: 'vorbis',\n    audioBitrate: 128,\n  },\n\n  '45': {\n    container: 'webm',\n    resolution: '720p',\n    encoding: 'VP8',\n    profile: null,\n    bitrate: '2',\n    audioEncoding: 'vorbis',\n    audioBitrate: 192,\n  },\n\n  '46': {\n    container: 'webm',\n    resolution: '1080p',\n    encoding: 'vp8',\n    profile: null,\n    bitrate: null,\n    audioEncoding: 'vorbis',\n    audioBitrate: 192,\n  },\n\n  '82': {\n    container: 'mp4',\n    resolution: '360p',\n    encoding: 'H.264',\n    profile: '3d',\n    bitrate: '0.5',\n    audioEncoding: 'aac',\n    audioBitrate: 96,\n  },\n\n  '83': {\n    container: 'mp4',\n    resolution: '240p',\n    encoding: 'H.264',\n    profile: '3d',\n    bitrate: '0.5',\n    audioEncoding: 'aac',\n    audioBitrate: 96,\n  },\n\n  '84': {\n    container: 'mp4',\n    resolution: '720p',\n    encoding: 'H.264',\n    profile: '3d',\n    bitrate: '2-3',\n    audioEncoding: 'aac',\n    audioBitrate: 192,\n  },\n\n  '85': {\n    container: 'mp4',\n    resolution: '1080p',\n    encoding: 'H.264',\n    profile: '3d',\n    bitrate: '3-4',\n    audioEncoding: 'aac',\n    audioBitrate: 192,\n  },\n\n  '100': {\n    container: 'webm',\n    resolution: '360p',\n    encoding: 'VP8',\n    profile: '3d',\n    bitrate: null,\n    audioEncoding: 'vorbis',\n    audioBitrate: 128,\n  },\n\n  '101': {\n    container: 'webm',\n    resolution: '360p',\n    encoding: 'VP8',\n    profile: '3d',\n    bitrate: null,\n    audioEncoding: 'vorbis',\n    audioBitrate: 192,\n  },\n\n  '102': {\n    container: 'webm',\n    resolution: '720p',\n    encoding: 'VP8',\n    profile: '3d',\n    bitrate: null,\n    audioEncoding: 'vorbis',\n    audioBitrate: 192,\n  },\n\n  // DASH (video only)\n  '133': {\n    container: 'mp4',\n    resolution: '240p',\n    encoding: 'H.264',\n    profile: 'main',\n    bitrate: '0.2-0.3',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '134': {\n    container: 'mp4',\n    resolution: '360p',\n    encoding: 'H.264',\n    profile: 'main',\n    bitrate: '0.3-0.4',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '135': {\n    container: 'mp4',\n    resolution: '480p',\n    encoding: 'H.264',\n    profile: 'main',\n    bitrate: '0.5-1',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '136': {\n    container: 'mp4',\n    resolution: '720p',\n    encoding: 'H.264',\n    profile: 'main',\n    bitrate: '1-1.5',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '137': {\n    container: 'mp4',\n    resolution: '1080p',\n    encoding: 'H.264',\n    profile: 'high',\n    bitrate: '2.5-3',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '138': {\n    container: 'mp4',\n    resolution: '4320p',\n    encoding: 'H.264',\n    profile: 'high',\n    bitrate: '13.5-25',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '160': {\n    container: 'mp4',\n    resolution: '144p',\n    encoding: 'H.264',\n    profile: 'main',\n    bitrate: '0.1',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '242': {\n    container: 'webm',\n    resolution: '240p',\n    encoding: 'VP9',\n    profile: 'profile 0',\n    bitrate: '0.1-0.2',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '243': {\n    container: 'webm',\n    resolution: '360p',\n    encoding: 'VP9',\n    profile: 'profile 0',\n    bitrate: '0.25',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '244': {\n    container: 'webm',\n    resolution: '480p',\n    encoding: 'VP9',\n    profile: 'profile 0',\n    bitrate: '0.5',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '247': {\n    container: 'webm',\n    resolution: '720p',\n    encoding: 'VP9',\n    profile: 'profile 0',\n    bitrate: '0.7-0.8',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '248': {\n    container: 'webm',\n    resolution: '1080p',\n    encoding: 'VP9',\n    profile: 'profile 0',\n    bitrate: '1.5',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '264': {\n    container: 'mp4',\n    resolution: '1440p',\n    encoding: 'H.264',\n    profile: 'high',\n    bitrate: '4-4.5',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '266': {\n    container: 'mp4',\n    resolution: '2160p',\n    encoding: 'H.264',\n    profile: 'high',\n    bitrate: '12.5-16',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '271': {\n    container: 'webm',\n    resolution: '1440p',\n    encoding: 'VP9',\n    profile: 'profile 0',\n    bitrate: '9',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '272': {\n    container: 'webm',\n    resolution: '4320p',\n    encoding: 'VP9',\n    profile: 'profile 0',\n    bitrate: '20-25',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '278': {\n    container: 'webm',\n    resolution: '144p 15fps',\n    encoding: 'VP9',\n    profile: 'profile 0',\n    bitrate: '0.08',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '298': {\n    container: 'mp4',\n    resolution: '720p',\n    encoding: 'H.264',\n    profile: 'main',\n    bitrate: '3-3.5',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '299': {\n    container: 'mp4',\n    resolution: '1080p',\n    encoding: 'H.264',\n    profile: 'high',\n    bitrate: '5.5',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '302': {\n    container: 'webm',\n    resolution: '720p HFR',\n    encoding: 'VP9',\n    profile: 'profile 0',\n    bitrate: '2.5',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '303': {\n    container: 'webm',\n    resolution: '1080p HFR',\n    encoding: 'VP9',\n    profile: 'profile 0',\n    bitrate: '5',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '308': {\n    container: 'webm',\n    resolution: '1440p HFR',\n    encoding: 'VP9',\n    profile: 'profile 0',\n    bitrate: '10',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '313': {\n    container: 'webm',\n    resolution: '2160p',\n    encoding: 'VP9',\n    profile: 'profile 0',\n    bitrate: '13-15',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '315': {\n    container: 'webm',\n    resolution: '2160p HFR',\n    encoding: 'VP9',\n    profile: 'profile 0',\n    bitrate: '20-25',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '330': {\n    container: 'webm',\n    resolution: '144p HDR, HFR',\n    encoding: 'VP9',\n    profile: 'profile 2',\n    bitrate: '0.08',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '331': {\n    container: 'webm',\n    resolution: '240p HDR, HFR',\n    encoding: 'VP9',\n    profile: 'profile 2',\n    bitrate: '0.1-0.15',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '332': {\n    container: 'webm',\n    resolution: '360p HDR, HFR',\n    encoding: 'VP9',\n    profile: 'profile 2',\n    bitrate: '0.25',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '333': {\n    container: 'webm',\n    resolution: '240p HDR, HFR',\n    encoding: 'VP9',\n    profile: 'profile 2',\n    bitrate: '0.5',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '334': {\n    container: 'webm',\n    resolution: '720p HDR, HFR',\n    encoding: 'VP9',\n    profile: 'profile 2',\n    bitrate: '1',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '335': {\n    container: 'webm',\n    resolution: '1080p HDR, HFR',\n    encoding: 'VP9',\n    profile: 'profile 2',\n    bitrate: '1.5-2',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '336': {\n    container: 'webm',\n    resolution: '1440p HDR, HFR',\n    encoding: 'VP9',\n    profile: 'profile 2',\n    bitrate: '5-7',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  '337': {\n    container: 'webm',\n    resolution: '2160p HDR, HFR',\n    encoding: 'VP9',\n    profile: 'profile 2',\n    bitrate: '12-14',\n    audioEncoding: null,\n    audioBitrate: null,\n  },\n\n  // DASH (audio only)\n  '139': {\n    container: 'mp4',\n    resolution: null,\n    encoding: null,\n    profile: null,\n    bitrate: null,\n    audioEncoding: 'aac',\n    audioBitrate: 48,\n  },\n\n  '140': {\n    container: 'm4a',\n    resolution: null,\n    encoding: null,\n    profile: null,\n    bitrate: null,\n    audioEncoding: 'aac',\n    audioBitrate: 128,\n  },\n\n  '141': {\n    container: 'mp4',\n    resolution: null,\n    encoding: null,\n    profile: null,\n    bitrate: null,\n    audioEncoding: 'aac',\n    audioBitrate: 256,\n  },\n\n  '171': {\n    container: 'webm',\n    resolution: null,\n    encoding: null,\n    profile: null,\n    bitrate: null,\n    audioEncoding: 'vorbis',\n    audioBitrate: 128,\n  },\n\n  '172': {\n    container: 'webm',\n    resolution: null,\n    encoding: null,\n    profile: null,\n    bitrate: null,\n    audioEncoding: 'vorbis',\n    audioBitrate: 192,\n  },\n\n  '249': {\n    container: 'webm',\n    resolution: null,\n    encoding: null,\n    profile: null,\n    bitrate: null,\n    audioEncoding: 'opus',\n    audioBitrate: 48,\n  },\n  '250': {\n    container: 'webm',\n    resolution: null,\n    encoding: null,\n    profile: null,\n    bitrate: null,\n    audioEncoding: 'opus',\n    audioBitrate: 64,\n  },\n  '251': {\n    container: 'webm',\n    resolution: null,\n    encoding: null,\n    profile: null,\n    bitrate: null,\n    audioEncoding: 'opus',\n    audioBitrate: 160,\n  },\n\n  // Live streaming\n  '91': {\n    container: 'ts',\n    resolution: '144p',\n    encoding: 'H.264',\n    profile: 'main',\n    bitrate: '0.1',\n    audioEncoding: 'aac',\n    audioBitrate: 48,\n  },\n\n  '92': {\n    container: 'ts',\n    resolution: '240p',\n    encoding: 'H.264',\n    profile: 'main',\n    bitrate: '0.15-0.3',\n    audioEncoding: 'aac',\n    audioBitrate: 48,\n  },\n\n  '93': {\n    container: 'ts',\n    resolution: '360p',\n    encoding: 'H.264',\n    profile: 'main',\n    bitrate: '0.5-1',\n    audioEncoding: 'aac',\n    audioBitrate: 128,\n  },\n\n  '94': {\n    container: 'ts',\n    resolution: '480p',\n    encoding: 'H.264',\n    profile: 'main',\n    bitrate: '0.8-1.25',\n    audioEncoding: 'aac',\n    audioBitrate: 128,\n  },\n\n  '95': {\n    container: 'ts',\n    resolution: '720p',\n    encoding: 'H.264',\n    profile: 'main',\n    bitrate: '1.5-3',\n    audioEncoding: 'aac',\n    audioBitrate: 256,\n  },\n\n  '96': {\n    container: 'ts',\n    resolution: '1080p',\n    encoding: 'H.264',\n    profile: 'high',\n    bitrate: '2.5-6',\n    audioEncoding: 'aac',\n    audioBitrate: 256,\n  },\n\n  '120': {\n    container: 'flv',\n    resolution: '720p',\n    encoding: 'H.264',\n    profile: 'Main@L3.1',\n    bitrate: '2',\n    audioEncoding: 'aac',\n    audioBitrate: 128,\n  },\n\n  '127': {\n    container: 'ts',\n    resolution: null,\n    encoding: null,\n    profile: null,\n    bitrate: null,\n    audioEncoding: 'aac',\n    audioBitrate: 96,\n  },\n\n  '128': {\n    container: 'ts',\n    resolution: null,\n    encoding: null,\n    profile: null,\n    bitrate: null,\n    audioEncoding: 'aac',\n    audioBitrate: 96,\n  },\n\n  '132': {\n    container: 'ts',\n    resolution: '240p',\n    encoding: 'H.264',\n    profile: 'baseline',\n    bitrate: '0.15-0.2',\n    audioEncoding: 'aac',\n    audioBitrate: 48,\n  },\n\n  '151': {\n    container: 'ts',\n    resolution: '720p',\n    encoding: 'H.264',\n    profile: 'baseline',\n    bitrate: '0.05',\n    audioEncoding: 'aac',\n    audioBitrate: 24,\n  },\n\n};\n","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","var isObject = require('./_is-object');\nvar isArray = require('./_is-array');\nvar SPECIES = require('./_wks')('species');\n\nmodule.exports = function (original) {\n  var C;\n  if (isArray(original)) {\n    C = original.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return C === undefined ? Array : C;\n};\n","const qs       = require('querystring');\nconst url      = require('url');\nconst Entities = require('html-entities').AllHtmlEntities;\nconst util     = require('./util');\n\n\nconst VIDEO_URL = 'https://www.youtube.com/watch?v=';\nconst getMetaItem = (body, name) => {\n  return util.between(body, `<meta itemprop=\"${name}\" content=\"`, '\">');\n};\n\n\n/**\n * Get video description from html\n *\n * @param {string} html\n * @return {string}\n */\nexports.getVideoDescription = (html) => {\n  const regex = /<p.*?id=\"eow-description\".*?>(.+?)<\\/p>[\\n\\r\\s]*?<\\/div>/im;\n  const description = html.match(regex);\n  return description ?\n    Entities.decode(util.stripHTML(description[1])) : '';\n};\n\n/**\n * Get video media (extra information) from html\n *\n * @param {string} body\n * @return {Object}\n */\nexports.getVideoMedia = (body) => {\n  let mediainfo = util.between(body,\n    '<div id=\"watch-description-extras\">',\n    '<div id=\"watch-discussion\" class=\"branded-page-box yt-card\">');\n  if (mediainfo === '') {\n    return {};\n  }\n\n  const regexp = /<h4 class=\"title\">([\\s\\S]*?)<\\/h4>[\\s\\S]*?<ul .*?class=\".*?watch-info-tag-list\">[\\s\\S]*?<li>([\\s\\S]*?)<\\/li>(?:\\s*?<li>([\\s\\S]*?)<\\/li>)?/g;\n  const contentRegexp = /(?: - (\\d{4}) \\()?<a .*?(?:href=\"([^\"]+)\")?.*?>(.*?)<\\/a>/;\n  const imgRegexp = /<img src=\"([^\"]+)\".*?>/;\n  const media = {};\n\n  const image = imgRegexp.exec(mediainfo);\n  if (image) {\n    media.image = url.resolve(VIDEO_URL, image[1]);\n  }\n\n  let match;\n  while ((match = regexp.exec(mediainfo)) != null) {\n    let [, key, value, detail] = match;\n    key = Entities.decode(key).trim().replace(/\\s/g, '_').toLowerCase();\n    const content = contentRegexp.exec(value);\n    if (content) {\n      let [, year, mediaUrl, value2] = content;\n      if (year) {\n        media.year = parseInt(year);\n      } else if (detail) {\n        media.year = parseInt(detail);\n      }\n      value = value.slice(0, content.index);\n      if (key !== 'game' || value2 !== 'YouTube Gaming') {\n        value += value2;\n      }\n      media[key + '_url'] = url.resolve(VIDEO_URL, mediaUrl);\n    }\n    media[key] = Entities.decode(value);\n  }\n  return media;\n};\n\n/**\n * Get video Owner from html.\n *\n * @param {string} body\n * @return {Object}\n */\nconst userRegexp = /<a href=\"\\/user\\/([^\"]+)/;\nconst verifiedRegexp = /<span .*?(aria-label=\"Verified\")(.*?(?=<\\/span>))/;\nexports.getAuthor = (body) => {\n  let ownerinfo = util.between(body,\n    '<div id=\"watch7-user-header\" class=\" spf-link \">',\n    '<div id=\"watch8-action-buttons\" class=\"watch-action-buttons clearfix\">');\n  if (ownerinfo === '') {\n    return {};\n  }\n  const channelName = Entities.decode(util.between(util.between(\n    ownerinfo, '<div class=\"yt-user-info\">', '</div>'), '>', '</a>'));\n  const userMatch = ownerinfo.match(userRegexp);\n  const verifiedMatch = ownerinfo.match(verifiedRegexp);\n  const channelID = getMetaItem(body, 'channelId');\n  const username = userMatch ? userMatch[1] : util.between(\n    util.between(body, '<span itemprop=\"author\"', '</span>'), '/user/', '\">');\n  return {\n    id: channelID,\n    name: channelName,\n    avatar: url.resolve(VIDEO_URL, util.between(ownerinfo,\n      'data-thumb=\"', '\"')),\n    verified: !!verifiedMatch,\n    user: username,\n    channel_url: 'https://www.youtube.com/channel/' + channelID,\n    user_url: 'https://www.youtube.com/user/' + username,\n  };\n};\n\n\n/**\n * Get video published at from html.\n *\n * @param {string} body\n * @return {string}\n */\nexports.getPublished = (body) => {\n  return Date.parse(getMetaItem(body, 'datePublished'));\n};\n\n\n/**\n * Get video published at from html.\n * Credits to https://github.com/paixaop.\n *\n * @param {string} body\n * @return {Array.<Object>}\n */\nexports.getRelatedVideos = (body) => {\n  let jsonStr = util.between(body, '\\'RELATED_PLAYER_ARGS\\': {\"rvs\":', '},');\n  try {\n    jsonStr = JSON.parse(jsonStr);\n  } catch (err) {\n    return [];\n  }\n  return jsonStr.split(',').map((link) => qs.parse(link));\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = $getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  var args = [];\n  for (var i = 0; i < arguments.length; i++) args.push(arguments[i]);\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    ReflectApply(this.listener, this.target, args);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n"],"sourceRoot":""}